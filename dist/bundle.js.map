{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "client.js",
    "node_modules/browser-resolve/empty.js",
    "node_modules/browser-split/index.js",
    "node_modules/component-emitter/index.js",
    "node_modules/escape-html/index.js",
    "node_modules/ev-store/index.js",
    "node_modules/extend/index.js",
    "node_modules/global/document.js",
    "node_modules/individual/index.js",
    "node_modules/individual/one-version.js",
    "node_modules/is-object/index.js",
    "node_modules/katex/katex.js",
    "node_modules/katex/src/Lexer.js",
    "node_modules/katex/src/Options.js",
    "node_modules/katex/src/ParseError.js",
    "node_modules/katex/src/Parser.js",
    "node_modules/katex/src/Settings.js",
    "node_modules/katex/src/Style.js",
    "node_modules/katex/src/buildCommon.js",
    "node_modules/katex/src/buildHTML.js",
    "node_modules/katex/src/buildMathML.js",
    "node_modules/katex/src/buildTree.js",
    "node_modules/katex/src/delimiter.js",
    "node_modules/katex/src/domTree.js",
    "node_modules/katex/src/environments.js",
    "node_modules/katex/src/fontMetrics.js",
    "node_modules/katex/src/fontMetricsData.js",
    "node_modules/katex/src/functions.js",
    "node_modules/katex/src/mathMLTree.js",
    "node_modules/katex/src/parseData.js",
    "node_modules/katex/src/parseTree.js",
    "node_modules/katex/src/symbols.js",
    "node_modules/katex/src/utils.js",
    "node_modules/kramed/lib/kramed.js",
    "node_modules/kramed/lib/lex/block.js",
    "node_modules/kramed/lib/lex/html_blocks.js",
    "node_modules/kramed/lib/lex/inline.js",
    "node_modules/kramed/lib/lex/options.js",
    "node_modules/kramed/lib/parser.js",
    "node_modules/kramed/lib/renderer.js",
    "node_modules/kramed/lib/rules/block.js",
    "node_modules/kramed/lib/rules/inline.js",
    "node_modules/kramed/lib/utils.js",
    "node_modules/lower-case/lower-case.js",
    "node_modules/match-at/lib/matchAt.js",
    "node_modules/odo-async/async.js",
    "node_modules/odo-layers/index.js",
    "node_modules/odo-layers/node_modules/extend/index.js",
    "node_modules/odo-math/math.js",
    "node_modules/odo-relay/index.js",
    "node_modules/odo-relay/node_modules/odoql-exe/asyncsplit.js",
    "node_modules/odo-relay/node_modules/odoql-exe/cache.js",
    "node_modules/odo-relay/node_modules/odoql-exe/canexecute.js",
    "node_modules/odo-relay/node_modules/odoql-exe/diff.js",
    "node_modules/odo-relay/node_modules/odoql-exe/eq.js",
    "node_modules/odo-relay/node_modules/odoql-exe/hasoption.js",
    "node_modules/odo-relay/node_modules/odoql-exe/isquery.js",
    "node_modules/odo-relay/node_modules/odoql-exe/missingproviders.js",
    "node_modules/odo-relay/node_modules/odoql-exe/optimise.js",
    "node_modules/odo-relay/node_modules/odoql-exe/parallelqueries.js",
    "node_modules/odo-relay/node_modules/odoql-exe/split.js",
    "node_modules/odo-template/template.js",
    "node_modules/odojs/component.js",
    "node_modules/odojs/compose.js",
    "node_modules/odojs/hook.js",
    "node_modules/odojs/hub.js",
    "node_modules/odojs/index.js",
    "node_modules/odojs/mount.js",
    "node_modules/odojs/stringify.js",
    "node_modules/odojs/thunk.js",
    "node_modules/odojs/widget.js",
    "node_modules/odoql-exe/helpers.js",
    "node_modules/odoql-exe/index.js",
    "node_modules/odoql-exe/ops.js",
    "node_modules/odoql-exe/ops/assign.js",
    "node_modules/odoql-exe/ops/boolean.js",
    "node_modules/odoql-exe/ops/conditional.js",
    "node_modules/odoql-exe/ops/fill.js",
    "node_modules/odoql-exe/ops/filter.js",
    "node_modules/odoql-exe/ops/json.js",
    "node_modules/odoql-exe/ops/maths.js",
    "node_modules/odoql-exe/ops/strings.js",
    "node_modules/odoql-exe/ops/transform.js",
    "node_modules/odoql-exe/ops/types.js",
    "node_modules/odoql-exe/visit.js",
    "node_modules/odoql-store/index.js",
    "node_modules/odoql/index.js",
    "node_modules/odoql/library.js",
    "node_modules/odoql/odojs.js",
    "node_modules/param-case/param-case.js",
    "node_modules/performance-now/lib/performance-now.js",
    "node_modules/process/browser.js",
    "node_modules/raf/index.js",
    "node_modules/reduce-component/index.js",
    "node_modules/sentence-case/sentence-case.js",
    "node_modules/sentence-case/vendor/camel-case-regexp.js",
    "node_modules/sentence-case/vendor/non-word-regexp.js",
    "node_modules/sentence-case/vendor/trailing-digit-regexp.js",
    "node_modules/setimmediate/setImmediate.js",
    "node_modules/superagent/lib/client.js",
    "node_modules/vdom-thunk/immutable-thunk.js",
    "node_modules/vdom-thunk/index.js",
    "node_modules/vdom-thunk/partial.js",
    "node_modules/vdom-thunk/shallow-eq.js",
    "node_modules/vdom-to-html/create-attribute.js",
    "node_modules/vdom-to-html/index.js",
    "node_modules/vdom-to-html/property-config.js",
    "node_modules/vdom-to-html/void-elements.js",
    "node_modules/vdom-virtualize/index.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/is-thunk.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/is-vhook.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/is-vnode.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/is-widget.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/version.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/vnode.js",
    "node_modules/vdom-virtualize/node_modules/virtual-dom/vnode/vtext.js",
    "node_modules/virtual-dom/create-element.js",
    "node_modules/virtual-dom/diff.js",
    "node_modules/virtual-dom/h.js",
    "node_modules/virtual-dom/patch.js",
    "node_modules/virtual-dom/vdom/apply-properties.js",
    "node_modules/virtual-dom/vdom/create-element.js",
    "node_modules/virtual-dom/vdom/dom-index.js",
    "node_modules/virtual-dom/vdom/patch-op.js",
    "node_modules/virtual-dom/vdom/patch.js",
    "node_modules/virtual-dom/vdom/update-widget.js",
    "node_modules/virtual-dom/virtual-hyperscript/hooks/attribute-hook.js",
    "node_modules/virtual-dom/virtual-hyperscript/hooks/ev-hook.js",
    "node_modules/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js",
    "node_modules/virtual-dom/virtual-hyperscript/index.js",
    "node_modules/virtual-dom/virtual-hyperscript/parse-tag.js",
    "node_modules/virtual-dom/virtual-hyperscript/svg-attribute-namespace.js",
    "node_modules/virtual-dom/virtual-hyperscript/svg.js",
    "node_modules/virtual-dom/vnode/handle-thunk.js",
    "node_modules/virtual-dom/vnode/is-vtext.js",
    "node_modules/virtual-dom/vnode/vpatch.js",
    "node_modules/virtual-dom/vtree/diff-props.js",
    "node_modules/virtual-dom/vtree/diff.js",
    "node_modules/x-is-array/index.js",
    "node_modules/xtend/immutable.js",
    "parse.js"
  ],
  "names": [],
  "mappingspjpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxhtbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhlvvtrntGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzhzjprrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjntvnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACllphFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxvqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACphKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnQA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjrvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Generated by CoffeeScript 1.9.2\nvar component, dom, exe, getfilename, hub, katex, kramed, odoql, parse, ql, ref, relay, renderrichtext, request, root, router, scene, store, widget;\n\nref = require('odojs'), component = ref.component, widget = ref.widget, hub = ref.hub, dom = ref.dom;\n\nrelay = require('odo-relay');\n\nexe = require('odoql-exe');\n\nodoql = require('odoql/odojs');\n\ncomponent.use(odoql);\n\nparse = require('./parse');\n\nstore = require('odoql-store');\n\nrequest = require('superagent');\n\ngetfilename = function() {\n  var file;\n  file = window.location.search;\n  if (file.length > 1) {\n    file = file.substr(1);\n  }\n  if (file === '') {\n    file = 'index';\n  }\n  return file;\n};\n\nstore = store().use('catalog', function(params, cb) {\n  return request.get('./catalog.json').end(function(err, res) {\n    if (err != null) {\n      return cb(err);\n    }\n    if (!res.ok) {\n      return cb(new Error(res.text));\n    }\n    return cb(null, res.body);\n  });\n}).use('content', function(params, cb) {\n  return request.get(\"./glossary/\" + (getfilename()) + \".md\").end(function(err, res) {\n    if (err != null) {\n      return cb(err);\n    }\n    if (!res.ok) {\n      return cb(new Error(res.text));\n    }\n    return cb(null, res.text);\n  });\n});\n\nhub = hub();\n\nexe = exe({\n  hub: hub\n}).use(store);\n\nql = require('odoql');\n\nql = ql.use('store');\n\nkatex = require('katex');\n\nkramed = require('kramed');\n\nrenderrichtext = widget({\n  render: function(state, params) {\n    return dom('div.definition');\n  },\n  afterMount: function(el, state, params) {\n    var eq, equation, equations, i, len, results;\n    el.innerHTML = kramed(params);\n    equations = document.querySelectorAll('script[type^=math]');\n    results = [];\n    for (i = 0, len = equations.length; i < len; i++) {\n      equation = equations[i];\n      eq = document.createElement('span');\n      equation.parentNode.insertBefore(eq, equation);\n      katex.render(equation.innerHTML, eq);\n      results.push(equation.parentNode.removeChild(equation));\n    }\n    return results;\n  },\n  onUpdate: function(el, state, params) {\n    return el.innerHTML = kramed(params);\n  }\n});\n\nrouter = component({\n  query: function(params) {\n    return {\n      catalog: ql.store('catalog'),\n      content: ql.store('content')\n    };\n  },\n  render: function(state, params, hub) {\n    var content;\n    content = parse(state.content);\n    return dom('#root.container', [\n      dom('h4.pull-right', dom('a', {\n        attributes: {\n          href: \"https://github.com/metocean/glossary/blob/gh-pages/glossary/\" + (getfilename()) + \".md\"\n        }\n      }, 'Pull requests welcome & encouraged')), dom('h4', dom('a', {\n        attributes: {\n          href: './'\n        }\n      }, dom('h4', 'MetOcean Glossary'))), dom('.row', [\n        dom('.col-xs-3.toc', [\n          dom('h6', 'Table of contents'), dom('.list-group', state.catalog.map(function(item) {\n            var ref1;\n            return dom(\"a.list-group-item\" + (getfilename() === item.filename ? '.active' : ''), {\n              attributes: {\n                href: \"?\" + item.filename\n              }\n            }, (ref1 = item.title) != null ? ref1 : item.filename);\n          }))\n        ]), dom('.col-xs-9.content', [dom('h6', 'Definition'), renderrichtext(null, content.text)])\n      ])\n    ]);\n  }\n});\n\nroot = document.querySelector('#root');\n\nscene = relay(root, router, exe, {\n  hub: hub\n});\n\nscene.update();\n",
    "",
    "/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n",
    "\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n",
    "/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n",
    "'use strict';\n\nvar OneVersionConstraint = require('individual/one-version');\n\nvar MY_VERSION = '7';\nOneVersionConstraint('ev-store', MY_VERSION);\n\nvar hashKey = '__EV_STORE_KEY@' + MY_VERSION;\n\nmodule.exports = EvStore;\n\nfunction EvStore(elem) {\n    var hash = elem[hashKey];\n\n    if (!hash) {\n        hash = elem[hashKey] = {};\n    }\n\n    return hash;\n}\n",
    "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n",
    "var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n",
    "'use strict';\n\n/*global window, global*/\n\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual;\n\nfunction Individual(key, value) {\n    if (key in root) {\n        return root[key];\n    }\n\n    root[key] = value;\n\n    return value;\n}\n",
    "'use strict';\n\nvar Individual = require('./index.js');\n\nmodule.exports = OneVersion;\n\nfunction OneVersion(moduleName, version, defaultValue) {\n    var key = '__INDIVIDUAL_ONE_VERSION_' + moduleName;\n    var enforceKey = key + '_ENFORCE_SINGLETON';\n\n    var versionValue = Individual(enforceKey, version);\n\n    if (versionValue !== version) {\n        throw new Error('Can only have one copy of ' +\n            moduleName + '.\\n' +\n            'You already have version ' + versionValue +\n            ' installed.\\n' +\n            'This means you cannot install version ' + version);\n    }\n\n    return Individual(key, defaultValue);\n}\n",
    "\"use strict\";\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === \"object\" && x !== null;\n};\n",
    "/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\n\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function(expression, baseNode, options) {\n    utils.clearNode(baseNode);\n\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    var node = buildTree(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\n            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +\n                \"website has a suitable doctype.\");\n\n        render = function() {\n            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function(expression, options) {\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function(expression, options) {\n    var settings = new Settings(options);\n    return parseTree(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: ParseError\n};\n",
    "/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\nvar matchAt = require(\"match-at\");\n\nvar ParseError = require(\"./ParseError\");\n\n// The main lexer class\nfunction Lexer(input) {\n    this._input = input;\n}\n\n// The resulting token returned from `lex`.\nfunction Token(text, data, position) {\n    this.text = text;\n    this.data = data;\n    this.position = position;\n}\n\n// \"normal\" types of tokens. These are tokens which can be matched by a simple\n// regex\nvar mathNormals = [\n    /[/|@.\"\"`0-9a-zA-Z]/, // ords\n    /[*+-]/, // bins\n    /[=<>:]/, // rels\n    /[,;]/, // punctuation\n    /['\\^_{}]/, // misc\n    /[(\\[]/, // opens\n    /[)\\]?!]/, // closes\n    /~/, // spacing\n    /&/, // horizontal alignment\n    /\\\\\\\\/ // line break\n];\n\n// These are \"normal\" tokens like above, but should instead be parsed in text\n// mode.\nvar textNormals = [\n    /[a-zA-Z0-9`!@*()-=+\\[\\]'\";:?\\/.,]/, // ords\n    /[{}]/, // grouping\n    /~/, // spacing\n    /&/, // horizontal alignment\n    /\\\\\\\\/ // line break\n];\n\n// Regexes for matching whitespace\nvar whitespaceRegex = /\\s*/;\nvar whitespaceConcatRegex = / +|\\\\  +/;\n\n// This regex matches any other TeX function, which is a backslash followed by a\n// word or a single symbol\nvar anyFunc = /\\\\(?:[a-zA-Z]+|.)/;\n\n/**\n * This function lexes a single normal token. It takes a position, a list of\n * \"normal\" tokens to try, and whether it should completely ignore whitespace or\n * not.\n */\nLexer.prototype._innerLex = function(pos, normals, ignoreWhitespace) {\n    var input = this._input;\n    var whitespace;\n\n    if (ignoreWhitespace) {\n        // Get rid of whitespace.\n        whitespace = matchAt(whitespaceRegex, input, pos)[0];\n        pos += whitespace.length;\n    } else {\n        // Do the funky concatenation of whitespace that happens in text mode.\n        whitespace = matchAt(whitespaceConcatRegex, input, pos);\n        if (whitespace !== null) {\n            return new Token(\" \", null, pos + whitespace[0].length);\n        }\n    }\n\n    // If there's no more input to parse, return an EOF token\n    if (pos === input.length) {\n        return new Token(\"EOF\", null, pos);\n    }\n\n    var match;\n    if ((match = matchAt(anyFunc, input, pos))) {\n        // If we match a function token, return it\n        return new Token(match[0], null, pos + match[0].length);\n    } else {\n        // Otherwise, we look through the normal token regexes and see if it's\n        // one of them.\n        for (var i = 0; i < normals.length; i++) {\n            var normal = normals[i];\n\n            if ((match = matchAt(normal, input, pos))) {\n                // If it is, return it\n                return new Token(\n                    match[0], null, pos + match[0].length);\n            }\n        }\n    }\n\n    throw new ParseError(\n            \"Unexpected character: '\" + input[pos] + \"'\",\n            this, pos);\n};\n\n// A regex to match a CSS color (like #ffffff or BlueViolet)\nvar cssColor = /#[a-z0-9]+|[a-z]+/i;\n\n/**\n * This function lexes a CSS color.\n */\nLexer.prototype._innerLexColor = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(cssColor, input, pos))) {\n        // If we look like a color, return a color\n        return new Token(match[0], null, pos + match[0].length);\n    } else {\n        throw new ParseError(\"Invalid color\", this, pos);\n    }\n};\n\n// A regex to match a dimension. Dimensions look like\n// \"1.2em\" or \".4pt\" or \"1 ex\"\nvar sizeRegex = /(-?)\\s*(\\d+(?:\\.\\d*)?|\\.\\d+)\\s*([a-z]{2})/;\n\n/**\n * This function lexes a dimension.\n */\nLexer.prototype._innerLexSize = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(sizeRegex, input, pos))) {\n        var unit = match[3];\n        // We only currently handle \"em\" and \"ex\" units\n        if (unit !== \"em\" && unit !== \"ex\") {\n            throw new ParseError(\"Invalid unit: '\" + unit + \"'\", this, pos);\n        }\n        return new Token(match[0], {\n                number: +(match[1] + match[2]),\n                unit: unit\n            }, pos + match[0].length);\n    }\n\n    throw new ParseError(\"Invalid size\", this, pos);\n};\n\n/**\n * This function lexes a string of whitespace.\n */\nLexer.prototype._innerLexWhitespace = function(pos) {\n    var input = this._input;\n\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    return new Token(whitespace[0], null, pos);\n};\n\n/**\n * This function lexes a single token starting at `pos` and of the given mode.\n * Based on the mode, we defer to one of the `_innerLex` functions.\n */\nLexer.prototype.lex = function(pos, mode) {\n    if (mode === \"math\") {\n        return this._innerLex(pos, mathNormals, true);\n    } else if (mode === \"text\") {\n        return this._innerLex(pos, textNormals, false);\n    } else if (mode === \"color\") {\n        return this._innerLexColor(pos);\n    } else if (mode === \"size\") {\n        return this._innerLexSize(pos);\n    } else if (mode === \"whitespace\") {\n        return this._innerLexWhitespace(pos);\n    }\n};\n\nmodule.exports = Lexer;\n",
    "/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n/**\n * This is the main options class. It contains the style, size, color, and font\n * of the current parse level. It also contains the style and size of the parent\n * parse level, so size changes can be handled efficiently.\n *\n * Each of the `.with*` and `.reset` functions passes its current style and size\n * as the parentStyle and parentSize of the new options class, so parent\n * handling is taken care of automatically.\n */\nfunction Options(data) {\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size;\n    this.phantom = data.phantom;\n    this.font = data.font;\n\n    if (data.parentStyle === undefined) {\n        this.parentStyle = data.style;\n    } else {\n        this.parentStyle = data.parentStyle;\n    }\n\n    if (data.parentSize === undefined) {\n        this.parentSize = data.size;\n    } else {\n        this.parentSize = data.parentSize;\n    }\n}\n\n/**\n * Returns a new options object with the same properties as \"this\".  Properties\n * from \"extension\" will be copied to the new options object.\n */\nOptions.prototype.extend = function(extension) {\n    var data = {\n        style: this.style,\n        size: this.size,\n        color: this.color,\n        parentStyle: this.style,\n        parentSize: this.size,\n        phantom: this.phantom,\n        font: this.font\n    };\n\n    for (var key in extension) {\n        if (extension.hasOwnProperty(key)) {\n            data[key] = extension[key];\n        }\n    }\n\n    return new Options(data);\n};\n\n/**\n * Create a new options object with the given style.\n */\nOptions.prototype.withStyle = function(style) {\n    return this.extend({\n        style: style\n    });\n};\n\n/**\n * Create a new options object with the given size.\n */\nOptions.prototype.withSize = function(size) {\n    return this.extend({\n        size: size\n    });\n};\n\n/**\n * Create a new options object with the given color.\n */\nOptions.prototype.withColor = function(color) {\n    return this.extend({\n        color: color\n    });\n};\n\n/**\n * Create a new options object with \"phantom\" set to true.\n */\nOptions.prototype.withPhantom = function() {\n    return this.extend({\n        phantom: true\n    });\n};\n\n/**\n * Create a new options objects with the give font.\n */\nOptions.prototype.withFont = function(font) {\n    return this.extend({\n        font: font\n    });\n};\n\n/**\n * Create a new options object with the same style, size, and color. This is\n * used so that parent style and size changes are handled correctly.\n */\nOptions.prototype.reset = function() {\n    return this.extend({});\n};\n\n/**\n * A map of color names to CSS colors.\n * TODO(emily): Remove this when we have real macros\n */\nvar colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#c7e9f1\",\n    \"katex-blueB\": \"#9cdceb\",\n    \"katex-blueC\": \"#58c4dd\",\n    \"katex-blueD\": \"#29abca\",\n    \"katex-blueE\": \"#1c758a\",\n    \"katex-tealA\": \"#acead7\",\n    \"katex-tealB\": \"#76ddc0\",\n    \"katex-tealC\": \"#5cd0b3\",\n    \"katex-tealD\": \"#55c1a7\",\n    \"katex-tealE\": \"#49a88f\",\n    \"katex-greenA\": \"#c9e2ae\",\n    \"katex-greenB\": \"#a6cf8c\",\n    \"katex-greenC\": \"#83c167\",\n    \"katex-greenD\": \"#77b05d\",\n    \"katex-greenE\": \"#699c52\",\n    \"katex-goldA\": \"#f7c797\",\n    \"katex-goldB\": \"#f9b775\",\n    \"katex-goldC\": \"#f0ac5f\",\n    \"katex-goldD\": \"#e1a158\",\n    \"katex-goldE\": \"#c78d46\",\n    \"katex-redA\": \"#f7a1a3\",\n    \"katex-redB\": \"#ff8080\",\n    \"katex-redC\": \"#fc6255\",\n    \"katex-redD\": \"#e65a4c\",\n    \"katex-redE\": \"#cf5044\",\n    \"katex-maroonA\": \"#ecabc1\",\n    \"katex-maroonB\": \"#ec92ab\",\n    \"katex-maroonC\": \"#c55f73\",\n    \"katex-maroonD\": \"#a24d61\",\n    \"katex-maroonE\": \"#94424f\",\n    \"katex-purpleA\": \"#caa3e8\",\n    \"katex-purpleB\": \"#b189c6\",\n    \"katex-purpleC\": \"#9a72ac\",\n    \"katex-purpleD\": \"#715582\",\n    \"katex-purpleE\": \"#644172\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#fdfdfd\",\n    \"katex-grayB\": \"#f7f7f7\",\n    \"katex-grayC\": \"#eeeeee\",\n    \"katex-grayD\": \"#dddddd\",\n    \"katex-grayE\": \"#cccccc\",\n    \"katex-grayF\": \"#aaaaaa\",\n    \"katex-grayG\": \"#999999\",\n    \"katex-grayH\": \"#555555\",\n    \"katex-grayI\": \"#333333\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#639b24\"\n};\n\n/**\n * Gets the CSS color of the current options object, accounting for the\n * `colorMap`.\n */\nOptions.prototype.getColor = function() {\n    if (this.phantom) {\n        return \"transparent\";\n    } else {\n        return colorMap[this.color] || this.color;\n    }\n};\n\nmodule.exports = Options;\n",
    "/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n */\nfunction ParseError(message, lexer, position) {\n    var error = \"KaTeX parse error: \" + message;\n\n    if (lexer !== undefined && position !== undefined) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Prepend some information\n        error += \" at position \" + position + \": \";\n\n        // Get the input\n        var input = lexer._input;\n        // Insert a combining underscore at the correct position\n        input = input.slice(0, position) + \"\\u0332\" +\n            input.slice(position);\n\n        // Extract some context from the input and add it to the error\n        var begin = Math.max(0, position - 15);\n        var end = position + 15;\n        error += input.slice(begin, end);\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    self.__proto__ = ParseError.prototype;\n\n    self.position = position;\n    return self;\n}\n\n// More hackery\nParseError.prototype.__proto__ = Error.prototype;\n\nmodule.exports = ParseError;\n",
    "var functions = require(\"./functions\");\nvar environments = require(\"./environments\");\nvar Lexer = require(\"./Lexer\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The main functions also take a mode that the parser is currently in\n * (currently \"math\" or \"text\"), which denotes whether the current environment\n * is a math-y one or a text-y one (e.g. inside \\text). Currently, this serves\n * to limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return `ParseResult`s, which contain a ParseNode and a\n * new position.\n *\n * The later functions (which are called deeper in the parse) sometimes return\n * ParseFuncOrArgument, which contain a ParseResult as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\n/**\n * Main Parser class\n */\nfunction Parser(input, settings) {\n    // Make a new lexer\n    this.lexer = new Lexer(input);\n    // Store the settings for use in parsing\n    this.settings = settings;\n}\n\nvar ParseNode = parseData.ParseNode;\nvar ParseResult = parseData.ParseResult;\n\n/**\n * An initial function (without its arguments), or an argument to a function.\n * The `result` argument should be a ParseResult.\n */\nfunction ParseFuncOrArgument(result, isFunction) {\n    this.result = result;\n    // Is this a function (i.e. is it something defined in functions.js)?\n    this.isFunction = isFunction;\n}\n\n/**\n * Checks a result to make sure it has the right type, and throws an\n * appropriate error otherwise.\n */\nParser.prototype.expect = function(result, text) {\n    if (result.text !== text) {\n        throw new ParseError(\n            \"Expected '\" + text + \"', got '\" + result.text + \"'\",\n            this.lexer, result.position\n        );\n    }\n};\n\n/**\n * Main parsing function, which parses an entire input.\n *\n * @return {?Array.<ParseNode>}\n */\nParser.prototype.parse = function(input) {\n    // Try to parse the input\n    var parse = this.parseInput(0, \"math\");\n    return parse.result;\n};\n\n/**\n * Parses an entire input tree.\n */\nParser.prototype.parseInput = function(pos, mode) {\n    // Parse an expression\n    var expression = this.parseExpression(pos, mode, false);\n    // If we succeeded, make sure there's an EOF at the end\n    this.expect(expression.peek, \"EOF\");\n    return expression;\n};\n\nvar endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];\n\n/**\n * Parses an \"expression\", which is a list of atoms.\n *\n * @param {boolean} breakOnInfix Should the parsing stop when we hit infix\n *                  nodes? This happens when functions have higher precendence\n *                  than infix nodes in implicit parses.\n *\n * @param {?string} breakOnToken The token that the expression should end with,\n *                  or `null` if something else should end the expression.\n *\n * @return {ParseResult}\n */\nParser.prototype.parseExpression = function(pos, mode, breakOnInfix, breakOnToken) {\n    var body = [];\n    var lex = null;\n    // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n    while (true) {\n        lex = this.lexer.lex(pos, mode);\n        if (endOfExpression.indexOf(lex.text) !== -1) {\n            break;\n        }\n        if (breakOnToken && lex.text === breakOnToken) {\n            break;\n        }\n        var atom = this.parseAtom(pos, mode);\n        if (!atom) {\n            if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                var errorNode = this.handleUnsupportedCmd(lex.text, mode);\n                body.push(errorNode);\n\n                pos = lex.position;\n                continue;\n            }\n\n            break;\n        }\n        if (breakOnInfix && atom.result.type === \"infix\") {\n            break;\n        }\n        body.push(atom.result);\n        pos = atom.position;\n    }\n    var res = new ParseResult(this.handleInfixNodes(body, mode), pos);\n    res.peek = lex;\n    return res;\n};\n\n/**\n * Rewrites infix operators such as \\over with corresponding commands such\n * as \\frac.\n *\n * There can only be one infix operator per group.  If there's more than one\n * then the expression is ambiguous.  This can be resolved by adding {}.\n *\n * @returns {Array}\n */\nParser.prototype.handleInfixNodes = function (body, mode) {\n    var overIndex = -1;\n    var func;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n        var node = body[i];\n        if (node.type === \"infix\") {\n            if (overIndex !== -1) {\n                throw new ParseError(\"only one infix operator per group\",\n                    this.lexer, -1);\n            }\n            overIndex = i;\n            funcName = node.value.replaceWith;\n            func = functions.funcs[funcName];\n        }\n    }\n\n    if (overIndex !== -1) {\n        var numerNode, denomNode;\n\n        var numerBody = body.slice(0, overIndex);\n        var denomBody = body.slice(overIndex + 1);\n\n        if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n            numerNode = numerBody[0];\n        } else {\n            numerNode = new ParseNode(\"ordgroup\", numerBody, mode);\n        }\n\n        if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n            denomNode = denomBody[0];\n        } else {\n            denomNode = new ParseNode(\"ordgroup\", denomBody, mode);\n        }\n\n        var value = func.handler(funcName, numerNode, denomNode);\n        return [new ParseNode(value.type, value, mode)];\n    } else {\n        return body;\n    }\n};\n\n// The greediness of a superscript or subscript\nvar SUPSUB_GREEDINESS = 1;\n\n/**\n * Handle a subscript or superscript with nice errors.\n */\nParser.prototype.handleSupSubscript = function(pos, mode, symbol, name) {\n    var group = this.parseGroup(pos, mode);\n\n    if (!group) {\n        var lex = this.lexer.lex(pos, mode);\n\n        if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n            return new ParseResult(\n                this.handleUnsupportedCmd(lex.text, mode),\n                lex.position);\n        } else {\n            throw new ParseError(\n                \"Expected group after '\" + symbol + \"'\", this.lexer, pos);\n        }\n    } else if (group.isFunction) {\n        // ^ and _ have a greediness, so handle interactions with functions'\n        // greediness\n        var funcGreediness = functions.funcs[group.result.result].greediness;\n        if (funcGreediness > SUPSUB_GREEDINESS) {\n            return this.parseFunction(pos, mode);\n        } else {\n            throw new ParseError(\n                \"Got function '\" + group.result.result + \"' with no arguments \" +\n                    \"as \" + name,\n                this.lexer, pos);\n        }\n    } else {\n        return group.result;\n    }\n};\n\n/**\n * Converts the textual input of an unsupported command into a text node\n * contained within a color node whose color is determined by errorColor\n */\n Parser.prototype.handleUnsupportedCmd = function(text, mode) {\n     var textordArray = [];\n\n     for (var i = 0; i < text.length; i++) {\n        textordArray.push(new ParseNode(\"textord\", text[i], \"text\"));\n     }\n\n     var textNode = new ParseNode(\n         \"text\",\n         {\n             body: textordArray,\n             type: \"text\"\n         },\n         mode);\n\n     var colorNode = new ParseNode(\n        \"color\",\n        {\n            color: this.settings.errorColor,\n            value: [textNode],\n            type: \"color\"\n        },\n        mode);\n\n     return colorNode;\n };\n\n/**\n * Parses a group with optional super/subscripts.\n *\n * @return {?ParseResult}\n */\nParser.prototype.parseAtom = function(pos, mode) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseImplicitGroup(pos, mode);\n\n    // In text mode, we don't have superscripts or subscripts\n    if (mode === \"text\") {\n        return base;\n    }\n\n    // Handle an empty base\n    var currPos;\n    if (!base) {\n        currPos = pos;\n        base = undefined;\n    } else {\n        currPos = base.position;\n    }\n\n    var superscript;\n    var subscript;\n    var result;\n    while (true) {\n        // Lex the first token\n        var lex = this.lexer.lex(currPos, mode);\n\n        if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n            // We got a limit control\n            if (!base || base.result.type !== \"op\") {\n                throw new ParseError(\"Limit controls must follow a math operator\",\n                    this.lexer, currPos);\n            }\n            else {\n                var limits = lex.text === \"\\\\limits\";\n                base.result.value.limits = limits;\n                base.result.value.alwaysHandleSupSub = true;\n                currPos = lex.position;\n            }\n        } else if (lex.text === \"^\") {\n            // We got a superscript start\n            if (superscript) {\n                throw new ParseError(\n                    \"Double superscript\", this.lexer, currPos);\n            }\n            result = this.handleSupSubscript(\n                lex.position, mode, lex.text, \"superscript\");\n            currPos = result.position;\n            superscript = result.result;\n        } else if (lex.text === \"_\") {\n            // We got a subscript start\n            if (subscript) {\n                throw new ParseError(\n                    \"Double subscript\", this.lexer, currPos);\n            }\n            result = this.handleSupSubscript(\n                lex.position, mode, lex.text, \"subscript\");\n            currPos = result.position;\n            subscript = result.result;\n        } else if (lex.text === \"'\") {\n            // We got a prime\n            var prime = new ParseNode(\"textord\", \"\\\\prime\", mode);\n\n            // Many primes can be grouped together, so we handle this here\n            var primes = [prime];\n            currPos = lex.position;\n            // Keep lexing tokens until we get something that's not a prime\n            while ((lex = this.lexer.lex(currPos, mode)).text === \"'\") {\n                // For each one, add another prime to the list\n                primes.push(prime);\n                currPos = lex.position;\n            }\n            // Put them into an ordgroup as the superscript\n            superscript = new ParseNode(\"ordgroup\", primes, mode);\n        } else {\n            // If it wasn't ^, _, or ', stop parsing super/subscripts\n            break;\n        }\n    }\n\n    if (superscript || subscript) {\n        // If we got either a superscript or subscript, create a supsub\n        return new ParseResult(\n            new ParseNode(\"supsub\", {\n                base: base && base.result,\n                sup: superscript,\n                sub: subscript\n            }, mode),\n            currPos);\n    } else {\n        // Otherwise return the original body\n        return base;\n    }\n};\n\n// A list of the size-changing functions, for use in parseImplicitGroup\nvar sizeFuncs = [\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\",\n    \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"\n];\n\n// A list of the style-changing functions, for use in parseImplicitGroup\nvar styleFuncs = [\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"\n];\n\n/**\n * Parses an implicit group, which is a group that starts at the end of a\n * specified, and ends right before a higher explicit group ends, or at EOL. It\n * is used for functions that appear to affect the current style, like \\Large or\n * \\textrm, where instead of keeping a style we just pretend that there is an\n * implicit grouping after it until the end of the group. E.g.\n *   small text {\\Large large text} small text again\n * It is also used for \\left and \\right to get the correct grouping.\n *\n * @return {?ParseResult}\n */\nParser.prototype.parseImplicitGroup = function(pos, mode) {\n    var start = this.parseSymbol(pos, mode);\n\n    if (!start || !start.result) {\n        // If we didn't get anything we handle, fall back to parseFunction\n        return this.parseFunction(pos, mode);\n    }\n\n    var func = start.result.result;\n    var body;\n\n    if (func === \"\\\\left\") {\n        // If we see a left:\n        // Parse the entire left function (including the delimiter)\n        var left = this.parseFunction(pos, mode);\n        // Parse out the implicit body\n        body = this.parseExpression(left.position, mode, false);\n        // Check the next token\n        this.expect(body.peek, \"\\\\right\");\n        var right = this.parseFunction(body.position, mode);\n        return new ParseResult(\n            new ParseNode(\"leftright\", {\n                body: body.result,\n                left: left.result.value.value,\n                right: right.result.value.value\n            }, mode),\n            right.position);\n    } else if (func === \"\\\\begin\") {\n        // begin...end is similar to left...right\n        var begin = this.parseFunction(pos, mode);\n        var envName = begin.result.value.name;\n        if (!environments.hasOwnProperty(envName)) {\n            throw new ParseError(\n                \"No such environment: \" + envName,\n                this.lexer, begin.result.value.namepos);\n        }\n        // Build the environment object. Arguments and other information will\n        // be made available to the begin and end methods using properties.\n        var env = environments[envName];\n        var args = [null, mode, envName];\n        var newPos = this.parseArguments(\n            begin.position, mode, \"\\\\begin{\" + envName + \"}\", env, args);\n        args[0] = newPos;\n        var result = env.handler.apply(this, args);\n        var endLex = this.lexer.lex(result.position, mode);\n        this.expect(endLex, \"\\\\end\");\n        var end = this.parseFunction(result.position, mode);\n        if (end.result.value.name !== envName) {\n            throw new ParseError(\n                \"Mismatch: \\\\begin{\" + envName + \"} matched \" +\n                \"by \\\\end{\" + end.result.value.name + \"}\",\n                this.lexer, end.namepos);\n        }\n        result.position = end.position;\n        return result;\n    } else if (utils.contains(sizeFuncs, func)) {\n        // If we see a sizing function, parse out the implict body\n        body = this.parseExpression(start.result.position, mode, false);\n        return new ParseResult(\n            new ParseNode(\"sizing\", {\n                // Figure out what size to use based on the list of functions above\n                size: \"size\" + (utils.indexOf(sizeFuncs, func) + 1),\n                value: body.result\n            }, mode),\n            body.position);\n    } else if (utils.contains(styleFuncs, func)) {\n        // If we see a styling function, parse out the implict body\n        body = this.parseExpression(start.result.position, mode, true);\n        return new ParseResult(\n            new ParseNode(\"styling\", {\n                // Figure out what style to use by pulling out the style from\n                // the function name\n                style: func.slice(1, func.length - 5),\n                value: body.result\n            }, mode),\n            body.position);\n    } else {\n        // Defer to parseFunction if it's not a function we handle\n        return this.parseFunction(pos, mode);\n    }\n};\n\n/**\n * Parses an entire function, including its base and all of its arguments\n *\n * @return {?ParseResult}\n */\nParser.prototype.parseFunction = function(pos, mode) {\n    var baseGroup = this.parseGroup(pos, mode);\n\n    if (baseGroup) {\n        if (baseGroup.isFunction) {\n            var func = baseGroup.result.result;\n            var funcData = functions.funcs[func];\n            if (mode === \"text\" && !funcData.allowedInText) {\n                throw new ParseError(\n                    \"Can't use function '\" + func + \"' in text mode\",\n                    this.lexer, baseGroup.position);\n            }\n\n            var args = [func];\n            var newPos = this.parseArguments(\n                baseGroup.result.position, mode, func, funcData, args);\n            var result = functions.funcs[func].handler.apply(this, args);\n            return new ParseResult(\n                new ParseNode(result.type, result, mode),\n                newPos);\n        } else {\n            return baseGroup.result;\n        }\n    } else {\n        return null;\n    }\n};\n\n\n/**\n * Parses the arguments of a function or environment\n *\n * @param {string} func  \"\\name\" or \"\\begin{name}\"\n * @param {{numArgs:number,numOptionalArgs:number|undefined}} funcData\n * @param {Array} args  list of arguments to which new ones will be pushed\n * @return the position after all arguments have been parsed\n */\nParser.prototype.parseArguments = function(pos, mode, func, funcData, args) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n    if (totalArgs === 0) {\n        return pos;\n    }\n\n    var newPos = pos;\n    var baseGreediness = funcData.greediness;\n    var positions = [newPos];\n\n    for (var i = 0; i < totalArgs; i++) {\n        var argType = funcData.argTypes && funcData.argTypes[i];\n        var arg;\n        if (i < funcData.numOptionalArgs) {\n            if (argType) {\n                arg = this.parseSpecialGroup(newPos, argType, mode, true);\n            } else {\n                arg = this.parseOptionalGroup(newPos, mode);\n            }\n            if (!arg) {\n                args.push(null);\n                positions.push(newPos);\n                continue;\n            }\n        } else {\n            if (argType) {\n                arg = this.parseSpecialGroup(newPos, argType, mode);\n            } else {\n                arg = this.parseGroup(newPos, mode);\n            }\n            if (!arg) {\n                var lex = this.lexer.lex(newPos, mode);\n\n                if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                    arg = new ParseFuncOrArgument(\n                        new ParseResult(\n                            this.handleUnsupportedCmd(lex.text, mode),\n                            lex.position),\n                        false);\n                } else {\n                    throw new ParseError(\n                        \"Expected group after '\" + func + \"'\", this.lexer, pos);\n                }\n            }\n        }\n        var argNode;\n        if (arg.isFunction) {\n            var argGreediness =\n                functions.funcs[arg.result.result].greediness;\n            if (argGreediness > baseGreediness) {\n                argNode = this.parseFunction(newPos, mode);\n            } else {\n                throw new ParseError(\n                    \"Got function '\" + arg.result.result + \"' as \" +\n                    \"argument to '\" + func + \"'\",\n                    this.lexer, arg.result.position - 1);\n            }\n        } else {\n            argNode = arg.result;\n        }\n        args.push(argNode.result);\n        positions.push(argNode.position);\n        newPos = argNode.position;\n    }\n\n    args.push(positions);\n\n    return newPos;\n};\n\n\n/**\n * Parses a group when the mode is changing. Takes a position, a new mode, and\n * an outer mode that is used to parse the outside.\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSpecialGroup = function(pos, mode, outerMode, optional) {\n    // Handle `original` argTypes\n    if (mode === \"original\") {\n        mode = outerMode;\n    }\n\n    if (mode === \"color\" || mode === \"size\") {\n        // color and size modes are special because they should have braces and\n        // should only lex a single symbol inside\n        var openBrace = this.lexer.lex(pos, outerMode);\n        if (optional && openBrace.text !== \"[\") {\n            // optional arguments should return null if they don't exist\n            return null;\n        }\n        this.expect(openBrace, optional ? \"[\" : \"{\");\n        var inner = this.lexer.lex(openBrace.position, mode);\n        var data;\n        if (mode === \"color\") {\n            data = inner.text;\n        } else {\n            data = inner.data;\n        }\n        var closeBrace = this.lexer.lex(inner.position, outerMode);\n        this.expect(closeBrace, optional ? \"]\" : \"}\");\n        return new ParseFuncOrArgument(\n            new ParseResult(\n                new ParseNode(mode, data, outerMode),\n                closeBrace.position),\n            false);\n    } else if (mode === \"text\") {\n        // text mode is special because it should ignore the whitespace before\n        // it\n        var whitespace = this.lexer.lex(pos, \"whitespace\");\n        pos = whitespace.position;\n    }\n\n    if (optional) {\n        return this.parseOptionalGroup(pos, mode);\n    } else {\n        return this.parseGroup(pos, mode);\n    }\n};\n\n/**\n * Parses a group, which is either a single nucleus (like \"x\") or an expression\n * in braces (like \"{x+y}\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseGroup = function(pos, mode) {\n    var start = this.lexer.lex(pos, mode);\n    // Try to parse an open brace\n    if (start.text === \"{\") {\n        // If we get a brace, parse an expression\n        var expression = this.parseExpression(start.position, mode, false);\n        // Make sure we get a close brace\n        var closeBrace = this.lexer.lex(expression.position, mode);\n        this.expect(closeBrace, \"}\");\n        return new ParseFuncOrArgument(\n            new ParseResult(\n                new ParseNode(\"ordgroup\", expression.result, mode),\n                closeBrace.position),\n            false);\n    } else {\n        // Otherwise, just return a nucleus\n        return this.parseSymbol(pos, mode);\n    }\n};\n\n/**\n * Parses a group, which is an expression in brackets (like \"[x+y]\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseOptionalGroup = function(pos, mode) {\n    var start = this.lexer.lex(pos, mode);\n    // Try to parse an open bracket\n    if (start.text === \"[\") {\n        // If we get a brace, parse an expression\n        var expression = this.parseExpression(start.position, mode, false, \"]\");\n        // Make sure we get a close bracket\n        var closeBracket = this.lexer.lex(expression.position, mode);\n        this.expect(closeBracket, \"]\");\n        return new ParseFuncOrArgument(\n            new ParseResult(\n                new ParseNode(\"ordgroup\", expression.result, mode),\n                closeBracket.position),\n            false);\n    } else {\n        // Otherwise, return null,\n        return null;\n    }\n};\n\n/**\n * Parse a single symbol out of the string. Here, we handle both the functions\n * we have defined, as well as the single character symbols\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSymbol = function(pos, mode) {\n    var nucleus = this.lexer.lex(pos, mode);\n\n    if (functions.funcs[nucleus.text]) {\n        // If there exists a function with this name, we return the function and\n        // say that it is a function.\n        return new ParseFuncOrArgument(\n            new ParseResult(nucleus.text, nucleus.position),\n            true);\n    } else if (symbols[mode][nucleus.text]) {\n        // Otherwise if this is a no-argument function, find the type it\n        // corresponds to in the symbols map\n        return new ParseFuncOrArgument(\n            new ParseResult(\n                new ParseNode(symbols[mode][nucleus.text].group,\n                              nucleus.text, mode),\n                nucleus.position),\n            false);\n    } else {\n        return null;\n    }\n};\n\nParser.prototype.ParseNode = ParseNode;\n\nmodule.exports = Parser;\n",
    "/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n}\n\nmodule.exports = Settings;\n",
    "/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), a cramped flag, and a\n * size multiplier, which gives the size difference between a style and\n * textstyle.\n */\nfunction Style(id, size, multiplier, cramped) {\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n    this.sizeMultiplier = multiplier;\n}\n\n/**\n * Get the style of a superscript given a base in the current style.\n */\nStyle.prototype.sup = function() {\n    return styles[sup[this.id]];\n};\n\n/**\n * Get the style of a subscript given a base in the current style.\n */\nStyle.prototype.sub = function() {\n    return styles[sub[this.id]];\n};\n\n/**\n * Get the style of a fraction numerator given the fraction in the current\n * style.\n */\nStyle.prototype.fracNum = function() {\n    return styles[fracNum[this.id]];\n};\n\n/**\n * Get the style of a fraction denominator given the fraction in the current\n * style.\n */\nStyle.prototype.fracDen = function() {\n    return styles[fracDen[this.id]];\n};\n\n/**\n * Get the cramped version of a style (in particular, cramping a cramped style\n * doesn't change the style).\n */\nStyle.prototype.cramp = function() {\n    return styles[cramp[this.id]];\n};\n\n/**\n * HTML class name, like \"displaystyle cramped\"\n */\nStyle.prototype.cls = function() {\n    return sizeNames[this.size] + (this.cramped ? \" cramped\" : \" uncramped\");\n};\n\n/**\n * HTML Reset class name, like \"reset-textstyle\"\n */\nStyle.prototype.reset = function() {\n    return resetNames[this.size];\n};\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// String names for the different sizes\nvar sizeNames = [\n    \"displaystyle textstyle\",\n    \"textstyle\",\n    \"scriptstyle\",\n    \"scriptscriptstyle\"\n];\n\n// Reset names for the different sizes\nvar resetNames = [\n    \"reset-textstyle\",\n    \"reset-textstyle\",\n    \"reset-scriptstyle\",\n    \"reset-scriptscriptstyle\"\n];\n\n// Instances of the different styles\nvar styles = [\n    new Style(D, 0, 1.0, false),\n    new Style(Dc, 0, 1.0, true),\n    new Style(T, 1, 1.0, false),\n    new Style(Tc, 1, 1.0, true),\n    new Style(S, 2, 0.7, false),\n    new Style(Sc, 2, 0.7, true),\n    new Style(SS, 3, 0.5, false),\n    new Style(SSc, 3, 0.5, true)\n];\n\n// Lookup tables for switching from one style to another\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\n\n// We only export some of the styles. Also, we don't export the `Style` class so\n// no more styles can be generated.\nmodule.exports = {\n    DISPLAY: styles[D],\n    TEXT: styles[T],\n    SCRIPT: styles[S],\n    SCRIPTSCRIPT: styles[SS]\n};\n",
    "/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\"\n];\n\nvar dotlessLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\"    // dotless j, \\jmath\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n */\nvar makeSymbol = function(value, style, mode, color, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, style);\n\n    var symbolNode;\n    if (metrics) {\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, metrics.italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                style + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (color) {\n        symbolNode.style.color = color;\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, color, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, color, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, color, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, color, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, color, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, color, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, color, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(dotlessLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, color, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, color, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n    var color = options.getColor();\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(dotlessLetters, value)) {\n            return mathit(value, mode, color, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(value, fontName, mode, color, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, color, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, color, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and color.\n */\nvar makeSpan = function(classes, children, color) {\n    var span = new domTree.span(classes, children);\n\n    sizeElementFromChildren(span);\n\n    if (color) {\n        span.style.color = color;\n    }\n\n    return span;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize = (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\"\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\"\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\"\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\"\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\"\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\"\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\"\n    }\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\"\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\"\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\"\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\"\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\"\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\"\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\"\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\"\n    }\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions\n};\n",
    "/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. This function handles the `prev` node correctly, and passes the\n * previous element from the list as the prev of the next element.\n */\nvar buildExpression = function(expression, options, prev) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options, prev));\n        prev = group;\n    }\n    return groups;\n};\n\n// List of types used by getTypeOfGroup,\n// see https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\nvar groupToType = {\n    mathord: \"mord\",\n    textord: \"mord\",\n    bin: \"mbin\",\n    rel: \"mrel\",\n    text: \"mord\",\n    open: \"mopen\",\n    close: \"mclose\",\n    inner: \"minner\",\n    genfrac: \"mord\",\n    array: \"mord\",\n    spacing: \"mord\",\n    punct: \"mpunct\",\n    ordgroup: \"mord\",\n    op: \"mop\",\n    katex: \"mord\",\n    overline: \"mord\",\n    rule: \"mord\",\n    leftright: \"minner\",\n    sqrt: \"mord\",\n    accent: \"mord\"\n};\n\n/**\n * Gets the final math type of an expression, given its group type. This type is\n * used to determine spacing between elements, and affects bin elements by\n * causing them to change depending on what types are around them. This type\n * must be attached to the outermost node of an element as a CSS class so that\n * spacing with its surrounding elements works correctly.\n *\n * Some elements can be mapped one-to-one from group type to math type, and\n * those are listed in the `groupToType` table.\n *\n * Others (usually elements that wrap around other elements) often have\n * recursive definitions, and thus call `getTypeOfGroup` on their inner\n * elements.\n */\nvar getTypeOfGroup = function(group) {\n    if (group == null) {\n        // Like when typesetting $^3$\n        return groupToType.mathord;\n    } else if (group.type === \"supsub\") {\n        return getTypeOfGroup(group.value.base);\n    } else if (group.type === \"llap\" || group.type === \"rlap\") {\n        return getTypeOfGroup(group.value);\n    } else if (group.type === \"color\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"sizing\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"styling\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"delimsizing\") {\n        return groupToType[group.value.delimType];\n    } else {\n        return groupToType[group.type];\n    }\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size || group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options) {\n    return makeSpan([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\"\n    ]);\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {\n    mathord: function(group, options, prev) {\n        return buildCommon.makeOrd(group, options, \"mathord\");\n    },\n\n    textord: function(group, options, prev) {\n        return buildCommon.makeOrd(group, options, \"textord\");\n    },\n\n    bin: function(group, options, prev) {\n        var className = \"mbin\";\n        // Pull out the most recent element. Do some special handling to find\n        // things at the end of a \\color group. Note that we don't use the same\n        // logic for ordgroups (which count as ords).\n        var prevAtom = prev;\n        while (prevAtom && prevAtom.type === \"color\") {\n            var atoms = prevAtom.value.value;\n            prevAtom = atoms[atoms.length - 1];\n        }\n        // See TeXbook pg. 442-446, Rules 5 and 6, and the text before Rule 19.\n        // Here, we determine whether the bin should turn into an ord. We\n        // currently only apply Rule 5.\n        if (!prev || utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n                getTypeOfGroup(prevAtom))) {\n            group.type = \"textord\";\n            className = \"mord\";\n        }\n\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [className]);\n    },\n\n    rel: function(group, options, prev) {\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [\"mrel\"]);\n    },\n\n    open: function(group, options, prev) {\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [\"mopen\"]);\n    },\n\n    close: function(group, options, prev) {\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [\"mclose\"]);\n    },\n\n    inner: function(group, options, prev) {\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [\"minner\"]);\n    },\n\n    punct: function(group, options, prev) {\n        return buildCommon.mathsym(\n            group.value, group.mode, options.getColor(), [\"mpunct\"]);\n    },\n\n    ordgroup: function(group, options, prev) {\n        return makeSpan(\n            [\"mord\", options.style.cls()],\n            buildExpression(group.value, options.reset())\n        );\n    },\n\n    text: function(group, options, prev) {\n        return makeSpan([\"text\", \"mord\", options.style.cls()],\n            buildExpression(group.value.body, options.reset()));\n    },\n\n    color: function(group, options, prev) {\n        var elements = buildExpression(\n            group.value.value,\n            options.withColor(group.value.color),\n            prev\n        );\n\n        // \\color isn't supposed to affect the type of the elements it contains.\n        // To accomplish this, we wrap the results in a fragment, so the inner\n        // elements will be able to directly interact with their neighbors. For\n        // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n        return new buildCommon.makeFragment(elements);\n    },\n\n    supsub: function(group, options, prev) {\n        // Superscript and subscripts are handled in the TeXbook on page\n        // 445-446, rules 18(a-f).\n\n        // Here is where we defer to the inner group if it should handle\n        // superscripts and subscripts itself.\n        if (shouldHandleSupSub(group.value.base, options)) {\n            return groupTypes[group.value.base.type](group, options, prev);\n        }\n\n        var base = buildGroup(group.value.base, options.reset());\n        var supmid, submid, sup, sub;\n\n        if (group.value.sup) {\n            sup = buildGroup(group.value.sup,\n                    options.withStyle(options.style.sup()));\n            supmid = makeSpan(\n                    [options.style.reset(), options.style.sup().cls()], [sup]);\n        }\n\n        if (group.value.sub) {\n            sub = buildGroup(group.value.sub,\n                    options.withStyle(options.style.sub()));\n            submid = makeSpan(\n                    [options.style.reset(), options.style.sub().cls()], [sub]);\n        }\n\n        // Rule 18a\n        var supShift, subShift;\n        if (isCharacterBox(group.value.base)) {\n            supShift = 0;\n            subShift = 0;\n        } else {\n            supShift = base.height - fontMetrics.metrics.supDrop;\n            subShift = base.depth + fontMetrics.metrics.subDrop;\n        }\n\n        // Rule 18c\n        var minSupShift;\n        if (options.style === Style.DISPLAY) {\n            minSupShift = fontMetrics.metrics.sup1;\n        } else if (options.style.cramped) {\n            minSupShift = fontMetrics.metrics.sup3;\n        } else {\n            minSupShift = fontMetrics.metrics.sup2;\n        }\n\n        // scriptspace is a font-size-independent size, so scale it\n        // appropriately\n        var multiplier = Style.TEXT.sizeMultiplier *\n                options.style.sizeMultiplier;\n        var scriptspace =\n            (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n        var supsub;\n        if (!group.value.sup) {\n            // Rule 18b\n            subShift = Math.max(\n                subShift, fontMetrics.metrics.sub1,\n                sub.height - 0.8 * fontMetrics.metrics.xHeight);\n\n            supsub = buildCommon.makeVList([\n                {type: \"elem\", elem: submid}\n            ], \"shift\", subShift, options);\n\n            supsub.children[0].style.marginRight = scriptspace;\n\n            // Subscripts shouldn't be shifted by the base's italic correction.\n            // Account for that by shifting the subscript back the appropriate\n            // amount. Note we only do this when the base is a single symbol.\n            if (base instanceof domTree.symbolNode) {\n                supsub.children[0].style.marginLeft = -base.italic + \"em\";\n            }\n        } else if (!group.value.sub) {\n            // Rule 18c, d\n            supShift = Math.max(supShift, minSupShift,\n                sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n\n            supsub = buildCommon.makeVList([\n                {type: \"elem\", elem: supmid}\n            ], \"shift\", -supShift, options);\n\n            supsub.children[0].style.marginRight = scriptspace;\n        } else {\n            supShift = Math.max(\n                supShift, minSupShift,\n                sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n            subShift = Math.max(subShift, fontMetrics.metrics.sub2);\n\n            var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n            // Rule 18e\n            if ((supShift - sup.depth) - (sub.height - subShift) <\n                    4 * ruleWidth) {\n                subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n                var psi = 0.8 * fontMetrics.metrics.xHeight -\n                    (supShift - sup.depth);\n                if (psi > 0) {\n                    supShift += psi;\n                    subShift -= psi;\n                }\n            }\n\n            supsub = buildCommon.makeVList([\n                {type: \"elem\", elem: submid, shift: subShift},\n                {type: \"elem\", elem: supmid, shift: -supShift}\n            ], \"individualShift\", null, options);\n\n            // See comment above about subscripts not being shifted\n            if (base instanceof domTree.symbolNode) {\n                supsub.children[0].style.marginLeft = -base.italic + \"em\";\n            }\n\n            supsub.children[0].style.marginRight = scriptspace;\n            supsub.children[1].style.marginRight = scriptspace;\n        }\n\n        return makeSpan([getTypeOfGroup(group.value.base)],\n            [base, supsub]);\n    },\n\n    genfrac: function(group, options, prev) {\n        // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n        // Figure out what style this fraction should be in based on the\n        // function used\n        var fstyle = options.style;\n        if (group.value.size === \"display\") {\n            fstyle = Style.DISPLAY;\n        } else if (group.value.size === \"text\") {\n            fstyle = Style.TEXT;\n        }\n\n        var nstyle = fstyle.fracNum();\n        var dstyle = fstyle.fracDen();\n\n        var numer = buildGroup(group.value.numer, options.withStyle(nstyle));\n        var numerreset = makeSpan([fstyle.reset(), nstyle.cls()], [numer]);\n\n        var denom = buildGroup(group.value.denom, options.withStyle(dstyle));\n        var denomreset = makeSpan([fstyle.reset(), dstyle.cls()], [denom]);\n\n        var ruleWidth;\n        if (group.value.hasBarLine) {\n            ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n                options.style.sizeMultiplier;\n        } else {\n            ruleWidth = 0;\n        }\n\n        // Rule 15b\n        var numShift;\n        var clearance;\n        var denomShift;\n        if (fstyle.size === Style.DISPLAY.size) {\n            numShift = fontMetrics.metrics.num1;\n            if (ruleWidth > 0) {\n                clearance = 3 * ruleWidth;\n            } else {\n                clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n            }\n            denomShift = fontMetrics.metrics.denom1;\n        } else {\n            if (ruleWidth > 0) {\n                numShift = fontMetrics.metrics.num2;\n                clearance = ruleWidth;\n            } else {\n                numShift = fontMetrics.metrics.num3;\n                clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n            }\n            denomShift = fontMetrics.metrics.denom2;\n        }\n\n        var frac;\n        if (ruleWidth === 0) {\n            // Rule 15c\n            var candiateClearance =\n                (numShift - numer.depth) - (denom.height - denomShift);\n            if (candiateClearance < clearance) {\n                numShift += 0.5 * (clearance - candiateClearance);\n                denomShift += 0.5 * (clearance - candiateClearance);\n            }\n\n            frac = buildCommon.makeVList([\n                {type: \"elem\", elem: denomreset, shift: denomShift},\n                {type: \"elem\", elem: numerreset, shift: -numShift}\n            ], \"individualShift\", null, options);\n        } else {\n            // Rule 15d\n            var axisHeight = fontMetrics.metrics.axisHeight;\n\n            if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                    clearance) {\n                numShift +=\n                    clearance - ((numShift - numer.depth) -\n                                 (axisHeight + 0.5 * ruleWidth));\n            }\n\n            if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                    clearance) {\n                denomShift +=\n                    clearance - ((axisHeight - 0.5 * ruleWidth) -\n                                 (denom.height - denomShift));\n            }\n\n            var mid = makeSpan(\n                [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n            // Manually set the height of the line because its height is\n            // created in CSS\n            mid.height = ruleWidth;\n\n            var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n            frac = buildCommon.makeVList([\n                {type: \"elem\", elem: denomreset, shift: denomShift},\n                {type: \"elem\", elem: mid,        shift: midShift},\n                {type: \"elem\", elem: numerreset, shift: -numShift}\n            ], \"individualShift\", null, options);\n        }\n\n        // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n        // account for the possible size change here.\n        frac.height *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n        frac.depth *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n\n        // Rule 15e\n        var delimSize;\n        if (fstyle.size === Style.DISPLAY.size) {\n            delimSize = fontMetrics.metrics.delim1;\n        } else {\n            delimSize = fontMetrics.metrics.getDelim2(fstyle);\n        }\n\n        var leftDelim, rightDelim;\n        if (group.value.leftDelim == null) {\n            leftDelim = makeNullDelimiter(options);\n        } else {\n            leftDelim = delimiter.customSizedDelim(\n                group.value.leftDelim, delimSize, true,\n                options.withStyle(fstyle), group.mode);\n        }\n        if (group.value.rightDelim == null) {\n            rightDelim = makeNullDelimiter(options);\n        } else {\n            rightDelim = delimiter.customSizedDelim(\n                group.value.rightDelim, delimSize, true,\n                options.withStyle(fstyle), group.mode);\n        }\n\n        return makeSpan(\n            [\"mord\", options.style.reset(), fstyle.cls()],\n            [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n            options.getColor());\n    },\n\n    array: function(group, options, prev) {\n        var r, c;\n        var nr = group.value.body.length;\n        var nc = 0;\n        var body = new Array(nr);\n\n        // Horizontal spacing\n        var pt = 1 / fontMetrics.metrics.ptPerEm;\n        var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n        // Vertical spacing\n        var baselineskip = 12 * pt; // see size10.clo\n        // Default \\arraystretch from lttab.dtx\n        // TODO(gagern): may get redefined once we have user-defined macros\n        var arraystretch = utils.deflt(group.value.arraystretch, 1);\n        var arrayskip = arraystretch * baselineskip;\n        var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n        var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n        var totalHeight = 0;\n        for (r = 0; r < group.value.body.length; ++r) {\n            var inrow = group.value.body[r];\n            var height = arstrutHeight; // \\@array adds an \\@arstrut\n            var depth = arstrutDepth;   // to each tow (via the template)\n\n            if (nc < inrow.length) {\n                nc = inrow.length;\n            }\n\n            var outrow = new Array(inrow.length);\n            for (c = 0; c < inrow.length; ++c) {\n                var elt = buildGroup(inrow[c], options);\n                if (depth < elt.depth) {\n                    depth = elt.depth;\n                }\n                if (height < elt.height) {\n                    height = elt.height;\n                }\n                outrow[c] = elt;\n            }\n\n            var gap = 0;\n            if (group.value.rowGaps[r]) {\n                gap = group.value.rowGaps[r].value;\n                switch (gap.unit) {\n                case \"em\":\n                    gap = gap.number;\n                    break;\n                case \"ex\":\n                    gap = gap.number * fontMetrics.metrics.emPerEx;\n                    break;\n                default:\n                    console.error(\"Can't handle unit \" + gap.unit);\n                    gap = 0;\n                }\n                if (gap > 0) { // \\@argarraycr\n                    gap += arstrutDepth;\n                    if (depth < gap) {\n                        depth = gap; // \\@xargarraycr\n                    }\n                    gap = 0;\n                }\n            }\n\n            outrow.height = height;\n            outrow.depth = depth;\n            totalHeight += height;\n            outrow.pos = totalHeight;\n            totalHeight += depth + gap; // \\@yargarraycr\n            body[r] = outrow;\n        }\n\n        var offset = totalHeight / 2 + fontMetrics.metrics.axisHeight;\n        var colDescriptions = group.value.cols || [];\n        var cols = [];\n        var colSep;\n        var colDescrNum;\n        for (c = 0, colDescrNum = 0;\n             // Continue while either there are more columns or more column\n             // descriptions, so trailing separators don't get lost.\n             c < nc || colDescrNum < colDescriptions.length;\n             ++c, ++colDescrNum) {\n\n            var colDescr = colDescriptions[colDescrNum] || {};\n\n            var firstSeparator = true;\n            while (colDescr.type === \"separator\") {\n                // If there is more than one separator in a row, add a space\n                // between them.\n                if (!firstSeparator) {\n                    colSep = makeSpan([\"arraycolsep\"], []);\n                    colSep.style.width =\n                        fontMetrics.metrics.doubleRuleSep + \"em\";\n                    cols.push(colSep);\n                }\n\n                if (colDescr.separator === \"|\") {\n                    var separator = makeSpan(\n                        [\"vertical-separator\"],\n                        []);\n                    separator.style.height = totalHeight + \"em\";\n                    separator.style.verticalAlign =\n                        -(totalHeight - offset) + \"em\";\n\n                    cols.push(separator);\n                } else {\n                    throw new ParseError(\n                        \"Invalid separator type: \" + colDescr.separator);\n                }\n\n                colDescrNum++;\n                colDescr = colDescriptions[colDescrNum] || {};\n                firstSeparator = false;\n            }\n\n            if (c >= nc) {\n                continue;\n            }\n\n            var sepwidth;\n            if (c > 0 || group.value.hskipBeforeAndAfter) {\n                sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n                if (sepwidth !== 0) {\n                    colSep = makeSpan([\"arraycolsep\"], []);\n                    colSep.style.width = sepwidth + \"em\";\n                    cols.push(colSep);\n                }\n            }\n\n            var col = [];\n            for (r = 0; r < nr; ++r) {\n                var row = body[r];\n                var elem = row[c];\n                if (!elem) {\n                    continue;\n                }\n                var shift = row.pos - offset;\n                elem.depth = row.depth;\n                elem.height = row.height;\n                col.push({type: \"elem\", elem: elem, shift: shift});\n            }\n\n            col = buildCommon.makeVList(col, \"individualShift\", null, options);\n            col = makeSpan(\n                [\"col-align-\" + (colDescr.align || \"c\")],\n                [col]);\n            cols.push(col);\n\n            if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n                sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n                if (sepwidth !== 0) {\n                    colSep = makeSpan([\"arraycolsep\"], []);\n                    colSep.style.width = sepwidth + \"em\";\n                    cols.push(colSep);\n                }\n            }\n        }\n        body = makeSpan([\"mtable\"], cols);\n        return makeSpan([\"mord\"], [body], options.getColor());\n    },\n\n    spacing: function(group, options, prev) {\n        if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n            group.value === \" \" || group.value === \"~\") {\n            // Spaces are generated by adding an actual space. Each of these\n            // things has an entry in the symbols table, so these will be turned\n            // into appropriate outputs.\n            return makeSpan(\n                [\"mord\", \"mspace\"],\n                [buildCommon.mathsym(group.value, group.mode)]\n            );\n        } else {\n            // Other kinds of spaces are of arbitrary width. We use CSS to\n            // generate these.\n            return makeSpan(\n                [\"mord\", \"mspace\",\n                 buildCommon.spacingFunctions[group.value].className]);\n        }\n    },\n\n    llap: function(group, options, prev) {\n        var inner = makeSpan(\n            [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n        var fix = makeSpan([\"fix\"], []);\n        return makeSpan(\n            [\"llap\", options.style.cls()], [inner, fix]);\n    },\n\n    rlap: function(group, options, prev) {\n        var inner = makeSpan(\n            [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n        var fix = makeSpan([\"fix\"], []);\n        return makeSpan(\n            [\"rlap\", options.style.cls()], [inner, fix]);\n    },\n\n    op: function(group, options, prev) {\n        // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n        var supGroup;\n        var subGroup;\n        var hasLimits = false;\n        if (group.type === \"supsub\" ) {\n            // If we have limits, supsub will pass us its group to handle. Pull\n            // out the superscript and subscript and set the group to the op in\n            // its base.\n            supGroup = group.value.sup;\n            subGroup = group.value.sub;\n            group = group.value.base;\n            hasLimits = true;\n        }\n\n        // Most operators have a large successor symbol, but these don't.\n        var noSuccessor = [\n            \"\\\\smallint\"\n        ];\n\n        var large = false;\n        if (options.style.size === Style.DISPLAY.size &&\n            group.value.symbol &&\n            !utils.contains(noSuccessor, group.value.body)) {\n\n            // Most symbol operators get larger in displaystyle (rule 13)\n            large = true;\n        }\n\n        var base;\n        var baseShift = 0;\n        var slant = 0;\n        if (group.value.symbol) {\n            // If this is a symbol, create the symbol.\n            var style = large ? \"Size2-Regular\" : \"Size1-Regular\";\n            base = buildCommon.makeSymbol(\n                group.value.body, style, \"math\", options.getColor(),\n                [\"op-symbol\", large ? \"large-op\" : \"small-op\", \"mop\"]);\n\n            // Shift the symbol so its center lies on the axis (rule 13). It\n            // appears that our fonts have the centers of the symbols already\n            // almost on the axis, so these numbers are very small. Note we\n            // don't actually apply this here, but instead it is used either in\n            // the vlist creation or separately when there are no limits.\n            baseShift = (base.height - base.depth) / 2 -\n                fontMetrics.metrics.axisHeight *\n                options.style.sizeMultiplier;\n\n            // The slant of the symbol is just its italic correction.\n            slant = base.italic;\n        } else {\n            // Otherwise, this is a text operator. Build the text from the\n            // operator's name.\n            // TODO(emily): Add a space in the middle of some of these\n            // operators, like \\limsup\n            var output = [];\n            for (var i = 1; i < group.value.body.length; i++) {\n                output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n            }\n            base = makeSpan([\"mop\"], output, options.getColor());\n        }\n\n        if (hasLimits) {\n            // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n            // in a new span so it is an inline, and works.\n            base = makeSpan([], [base]);\n\n            var supmid, supKern, submid, subKern;\n            // We manually have to handle the superscripts and subscripts. This,\n            // aside from the kern calculations, is copied from supsub.\n            if (supGroup) {\n                var sup = buildGroup(\n                    supGroup, options.withStyle(options.style.sup()));\n                supmid = makeSpan(\n                    [options.style.reset(), options.style.sup().cls()], [sup]);\n\n                supKern = Math.max(\n                    fontMetrics.metrics.bigOpSpacing1,\n                    fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n            }\n\n            if (subGroup) {\n                var sub = buildGroup(\n                    subGroup, options.withStyle(options.style.sub()));\n                submid = makeSpan(\n                    [options.style.reset(), options.style.sub().cls()],\n                    [sub]);\n\n                subKern = Math.max(\n                    fontMetrics.metrics.bigOpSpacing2,\n                    fontMetrics.metrics.bigOpSpacing4 - sub.height);\n            }\n\n            // Build the final group as a vlist of the possible subscript, base,\n            // and possible superscript.\n            var finalGroup, top, bottom;\n            if (!supGroup) {\n                top = base.height - baseShift;\n\n                finalGroup = buildCommon.makeVList([\n                    {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                    {type: \"elem\", elem: submid},\n                    {type: \"kern\", size: subKern},\n                    {type: \"elem\", elem: base}\n                ], \"top\", top, options);\n\n                // Here, we shift the limits by the slant of the symbol. Note\n                // that we are supposed to shift the limits by 1/2 of the slant,\n                // but since we are centering the limits adding a full slant of\n                // margin will shift by 1/2 that.\n                finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            } else if (!subGroup) {\n                bottom = base.depth + baseShift;\n\n                finalGroup = buildCommon.makeVList([\n                    {type: \"elem\", elem: base},\n                    {type: \"kern\", size: supKern},\n                    {type: \"elem\", elem: supmid},\n                    {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}\n                ], \"bottom\", bottom, options);\n\n                // See comment above about slants\n                finalGroup.children[1].style.marginLeft = slant + \"em\";\n            } else if (!supGroup && !subGroup) {\n                // This case probably shouldn't occur (this would mean the\n                // supsub was sending us a group with no superscript or\n                // subscript) but be safe.\n                return base;\n            } else {\n                bottom = fontMetrics.metrics.bigOpSpacing5 +\n                    submid.height + submid.depth +\n                    subKern +\n                    base.depth + baseShift;\n\n                finalGroup = buildCommon.makeVList([\n                    {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                    {type: \"elem\", elem: submid},\n                    {type: \"kern\", size: subKern},\n                    {type: \"elem\", elem: base},\n                    {type: \"kern\", size: supKern},\n                    {type: \"elem\", elem: supmid},\n                    {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}\n                ], \"bottom\", bottom, options);\n\n                // See comment above about slants\n                finalGroup.children[0].style.marginLeft = -slant + \"em\";\n                finalGroup.children[2].style.marginLeft = slant + \"em\";\n            }\n\n            return makeSpan([\"mop\", \"op-limits\"], [finalGroup]);\n        } else {\n            if (group.value.symbol) {\n                base.style.top = baseShift + \"em\";\n            }\n\n            return base;\n        }\n    },\n\n    katex: function(group, options, prev) {\n        // The KaTeX logo. The offsets for the K and a were chosen to look\n        // good, but the offsets for the T, E, and X were taken from the\n        // definition of \\TeX in TeX (see TeXbook pg. 356)\n        var k = makeSpan(\n            [\"k\"], [buildCommon.mathsym(\"K\", group.mode)]);\n        var a = makeSpan(\n            [\"a\"], [buildCommon.mathsym(\"A\", group.mode)]);\n\n        a.height = (a.height + 0.2) * 0.75;\n        a.depth = (a.height - 0.2) * 0.75;\n\n        var t = makeSpan(\n            [\"t\"], [buildCommon.mathsym(\"T\", group.mode)]);\n        var e = makeSpan(\n            [\"e\"], [buildCommon.mathsym(\"E\", group.mode)]);\n\n        e.height = (e.height - 0.2155);\n        e.depth = (e.depth + 0.2155);\n\n        var x = makeSpan(\n            [\"x\"], [buildCommon.mathsym(\"X\", group.mode)]);\n\n        return makeSpan(\n            [\"katex-logo\", \"mord\"], [k, a, t, e, x], options.getColor());\n    },\n\n    overline: function(group, options, prev) {\n        // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n        // Build the inner group in the cramped style.\n        var innerGroup = buildGroup(group.value.body,\n                options.withStyle(options.style.cramp()));\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n\n        // Create the line above the body\n        var line = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n        line.height = ruleWidth;\n        line.maxFontSize = 1.0;\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList([\n            {type: \"elem\", elem: innerGroup},\n            {type: \"kern\", size: 3 * ruleWidth},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth}\n        ], \"firstBaseline\", null, options);\n\n        return makeSpan([\"overline\", \"mord\"], [vlist], options.getColor());\n    },\n\n    sqrt: function(group, options, prev) {\n        // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n        // First, we do the same steps as in overline to build the inner group\n        // and line\n        var inner = buildGroup(group.value.body,\n                options.withStyle(options.style.cramp()));\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n\n        var line = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n            options.getColor());\n        line.height = ruleWidth;\n        line.maxFontSize = 1.0;\n\n        var phi = ruleWidth;\n        if (options.style.id < Style.TEXT.id) {\n            phi = fontMetrics.metrics.xHeight;\n        }\n\n        // Calculate the clearance between the body and line\n        var lineClearance = ruleWidth + phi / 4;\n\n        var innerHeight =\n            (inner.height + inner.depth) * options.style.sizeMultiplier;\n        var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n        // Create a \\surd delimiter of the required minimum size\n        var delim = makeSpan([\"sqrt-sign\"], [\n            delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                       false, options, group.mode)],\n                             options.getColor());\n\n        var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n        // Adjust the clearance based on the delimiter size\n        if (delimDepth > inner.height + inner.depth + lineClearance) {\n            lineClearance =\n                (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n        }\n\n        // Shift the delimiter so that its top lines up with the top of the line\n        var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n        delim.style.top = delimShift + \"em\";\n        delim.height -= delimShift;\n        delim.depth += delimShift;\n\n        // We add a special case here, because even when `inner` is empty, we\n        // still get a line. So, we use a simple heuristic to decide if we\n        // should omit the body entirely. (note this doesn't work for something\n        // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n        // it not to work.\n        var body;\n        if (inner.height === 0 && inner.depth === 0) {\n            body = makeSpan();\n        } else {\n            body = buildCommon.makeVList([\n                {type: \"elem\", elem: inner},\n                {type: \"kern\", size: lineClearance},\n                {type: \"elem\", elem: line},\n                {type: \"kern\", size: ruleWidth}\n            ], \"firstBaseline\", null, options);\n        }\n\n        if (!group.value.index) {\n            return makeSpan([\"sqrt\", \"mord\"], [delim, body]);\n        } else {\n            // Handle the optional root index\n\n            // The index is always in scriptscript style\n            var root = buildGroup(\n                group.value.index,\n                options.withStyle(Style.SCRIPTSCRIPT));\n            var rootWrap = makeSpan(\n                [options.style.reset(), Style.SCRIPTSCRIPT.cls()],\n                [root]);\n\n            // Figure out the height and depth of the inner part\n            var innerRootHeight = Math.max(delim.height, body.height);\n            var innerRootDepth = Math.max(delim.depth, body.depth);\n\n            // The amount the index is shifted by. This is taken from the TeX\n            // source, in the definition of `\\r@@t`.\n            var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n            // Build a VList with the superscript shifted up correctly\n            var rootVList = buildCommon.makeVList(\n                [{type: \"elem\", elem: rootWrap}],\n                \"shift\", -toShift, options);\n            // Add a class surrounding it so we can add on the appropriate\n            // kerning\n            var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n            return makeSpan([\"sqrt\", \"mord\"], [rootVListWrap, delim, body]);\n        }\n    },\n\n    sizing: function(group, options, prev) {\n        // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n        // these functions inside of math expressions, so we do some special\n        // handling.\n        var inner = buildExpression(group.value.value,\n                options.withSize(group.value.size), prev);\n\n        var span = makeSpan([\"mord\"],\n            [makeSpan([\"sizing\", \"reset-\" + options.size, group.value.size,\n                       options.style.cls()],\n                      inner)]);\n\n        // Calculate the correct maxFontSize manually\n        var fontSize = buildCommon.sizingMultiplier[group.value.size];\n        span.maxFontSize = fontSize * options.style.sizeMultiplier;\n\n        return span;\n    },\n\n    styling: function(group, options, prev) {\n        // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n        // Figure out what style we're changing to.\n        var style = {\n            \"display\": Style.DISPLAY,\n            \"text\": Style.TEXT,\n            \"script\": Style.SCRIPT,\n            \"scriptscript\": Style.SCRIPTSCRIPT\n        };\n\n        var newStyle = style[group.value.style];\n\n        // Build the inner expression in the new style.\n        var inner = buildExpression(\n            group.value.value, options.withStyle(newStyle), prev);\n\n        return makeSpan([options.style.reset(), newStyle.cls()], inner);\n    },\n\n    font: function(group, options, prev) {\n        var font = group.value.font;\n        return buildGroup(group.value.body, options.withFont(font), prev);\n    },\n\n    delimsizing: function(group, options, prev) {\n        var delim = group.value.value;\n\n        if (delim === \".\") {\n            // Empty delimiters still count as elements, even though they don't\n            // show anything.\n            return makeSpan([groupToType[group.value.delimType]]);\n        }\n\n        // Use delimiter.sizedDelim to generate the delimiter.\n        return makeSpan(\n            [groupToType[group.value.delimType]],\n            [delimiter.sizedDelim(\n                delim, group.value.size, options, group.mode)]);\n    },\n\n    leftright: function(group, options, prev) {\n        // Build the inner expression\n        var inner = buildExpression(group.value.body, options.reset());\n\n        var innerHeight = 0;\n        var innerDepth = 0;\n\n        // Calculate its height and depth\n        for (var i = 0; i < inner.length; i++) {\n            innerHeight = Math.max(inner[i].height, innerHeight);\n            innerDepth = Math.max(inner[i].depth, innerDepth);\n        }\n\n        // The size of delimiters is the same, regardless of what style we are\n        // in. Thus, to correctly calculate the size of delimiter we need around\n        // a group, we scale down the inner size based on the size.\n        innerHeight *= options.style.sizeMultiplier;\n        innerDepth *= options.style.sizeMultiplier;\n\n        var leftDelim;\n        if (group.value.left === \".\") {\n            // Empty delimiters in \\left and \\right make null delimiter spaces.\n            leftDelim = makeNullDelimiter(options);\n        } else {\n            // Otherwise, use leftRightDelim to generate the correct sized\n            // delimiter.\n            leftDelim = delimiter.leftRightDelim(\n                group.value.left, innerHeight, innerDepth, options,\n                group.mode);\n        }\n        // Add it to the beginning of the expression\n        inner.unshift(leftDelim);\n\n        var rightDelim;\n        // Same for the right delimiter\n        if (group.value.right === \".\") {\n            rightDelim = makeNullDelimiter(options);\n        } else {\n            rightDelim = delimiter.leftRightDelim(\n                group.value.right, innerHeight, innerDepth, options,\n                group.mode);\n        }\n        // Add it to the end of the expression.\n        inner.push(rightDelim);\n\n        return makeSpan(\n            [\"minner\", options.style.cls()], inner, options.getColor());\n    },\n\n    rule: function(group, options, prev) {\n        // Make an empty span for the rule\n        var rule = makeSpan([\"mord\", \"rule\"], [], options.getColor());\n\n        // Calculate the shift, width, and height of the rule, and account for units\n        var shift = 0;\n        if (group.value.shift) {\n            shift = group.value.shift.number;\n            if (group.value.shift.unit === \"ex\") {\n                shift *= fontMetrics.metrics.xHeight;\n            }\n        }\n\n        var width = group.value.width.number;\n        if (group.value.width.unit === \"ex\") {\n            width *= fontMetrics.metrics.xHeight;\n        }\n\n        var height = group.value.height.number;\n        if (group.value.height.unit === \"ex\") {\n            height *= fontMetrics.metrics.xHeight;\n        }\n\n        // The sizes of rules are absolute, so make it larger if we are in a\n        // smaller style.\n        shift /= options.style.sizeMultiplier;\n        width /= options.style.sizeMultiplier;\n        height /= options.style.sizeMultiplier;\n\n        // Style the rule to the right size\n        rule.style.borderRightWidth = width + \"em\";\n        rule.style.borderTopWidth = height + \"em\";\n        rule.style.bottom = shift + \"em\";\n\n        // Record the height and width\n        rule.width = width;\n        rule.height = height + shift;\n        rule.depth = -shift;\n\n        return rule;\n    },\n\n    accent: function(group, options, prev) {\n        // Accents are handled in the TeXbook pg. 443, rule 12.\n        var base = group.value.base;\n\n        var supsubGroup;\n        if (group.type === \"supsub\") {\n            // If our base is a character box, and we have superscripts and\n            // subscripts, the supsub will defer to us. In particular, we want\n            // to attach the superscripts and subscripts to the inner body (so\n            // that the position of the superscripts and subscripts won't be\n            // affected by the height of the accent). We accomplish this by\n            // sticking the base of the accent into the base of the supsub, and\n            // rendering that, while keeping track of where the accent is.\n\n            // The supsub group is the group that was passed in\n            var supsub = group;\n            // The real accent group is the base of the supsub group\n            group = supsub.value.base;\n            // The character box is the base of the accent group\n            base = group.value.base;\n            // Stick the character box into the base of the supsub group\n            supsub.value.base = base;\n\n            // Rerender the supsub group with its new base, and store that\n            // result.\n            supsubGroup = buildGroup(\n                supsub, options.reset(), prev);\n        }\n\n        // Build the base group\n        var body = buildGroup(\n            base, options.withStyle(options.style.cramp()));\n\n        // Calculate the skew of the accent. This is based on the line \"If the\n        // nucleus is not a single character, let s = 0; otherwise set s to the\n        // kern amount for the nucleus followed by the \\skewchar of its font.\"\n        // Note that our skew metrics are just the kern between each character\n        // and the skewchar.\n        var skew;\n        if (isCharacterBox(base)) {\n            // If the base is a character box, then we want the skew of the\n            // innermost character. To do that, we find the innermost character:\n            var baseChar = getBaseElem(base);\n            // Then, we render its group to get the symbol inside it\n            var baseGroup = buildGroup(\n                baseChar, options.withStyle(options.style.cramp()));\n            // Finally, we pull the skew off of the symbol.\n            skew = baseGroup.skew;\n            // Note that we now throw away baseGroup, because the layers we\n            // removed with getBaseElem might contain things like \\color which\n            // we can't get rid of.\n            // TODO(emily): Find a better way to get the skew\n        } else {\n            skew = 0;\n        }\n\n        // calculate the amount of space between the body and the accent\n        var clearance = Math.min(body.height, fontMetrics.metrics.xHeight);\n\n        // Build the accent\n        var accent = buildCommon.makeSymbol(\n            group.value.accent, \"Main-Regular\", \"math\", options.getColor());\n        // Remove the italic correction of the accent, because it only serves to\n        // shift the accent over to a place we don't want.\n        accent.italic = 0;\n\n        // The \\vec character that the fonts use is a combining character, and\n        // thus shows up much too far to the left. To account for this, we add a\n        // specific class which shifts the accent over to where we want it.\n        // TODO(emily): Fix this in a better way, like by changing the font\n        var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n        var accentBody = makeSpan([\"accent-body\", vecClass], [\n            makeSpan([], [accent])]);\n\n        accentBody = buildCommon.makeVList([\n            {type: \"elem\", elem: body},\n            {type: \"kern\", size: -clearance},\n            {type: \"elem\", elem: accentBody}\n        ], \"firstBaseline\", null, options);\n\n        // Shift the accent over by the skew. Note we shift by twice the skew\n        // because we are centering the accent, so by adding 2*skew to the left,\n        // we shift it to the right by 1*skew.\n        accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n        var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody]);\n\n        if (supsubGroup) {\n            // Here, we replace the \"base\" child of the supsub with our newly\n            // generated accent.\n            supsubGroup.children[0] = accentWrap;\n\n            // Since we don't rerun the height calculation after replacing the\n            // accent, we manually recalculate height.\n            supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n            // Accents should always be ords, even when their innards are not.\n            supsubGroup.classes[0] = \"mord\";\n\n            return supsubGroup;\n        } else {\n            return accentWrap;\n        }\n    },\n\n    phantom: function(group, options, prev) {\n        var elements = buildExpression(\n            group.value.value,\n            options.withPhantom(),\n            prev\n        );\n\n        // \\phantom isn't supposed to affect the elements it contains.\n        // See \"color\" for more details.\n        return new buildCommon.makeFragment(elements);\n    }\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options, prev) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options, prev);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options);\n    var body = makeSpan([\"base\", options.style.cls()], expression);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n",
    "/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar mathMLTree = require(\"./mathMLTree\");\nvar ParseError = require(\"./ParseError\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\nvar fontMap = buildCommon.fontMap;\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function(text, mode) {\n    if (symbols[mode][text] && symbols[mode][text].replace) {\n        text = symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar getVariant = function(group, options) {\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    }\n\n    var value = group.value;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {\n        return null;\n    }\n\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var fontName = fontMap[font].fontName;\n    if (fontMetrics.getCharacterMetrics(value, fontName)) {\n        return fontMap[options.font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Functions for handling the different types of groups found in the parse\n * tree. Each function should take a parse group and return a MathML node.\n */\nvar groupTypes = {\n    mathord: function(group, options) {\n        var node = new mathMLTree.MathNode(\n            \"mi\",\n            [makeText(group.value, group.mode)]);\n\n        var variant = getVariant(group, options);\n        if (variant) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n        return node;\n    },\n\n    textord: function(group, options) {\n        var text = makeText(group.value, group.mode);\n\n        var variant = getVariant(group, options) || \"normal\";\n\n        var node;\n        if (/[0-9]/.test(group.value)) {\n            // TODO(kevinb) merge adjacent <mn> nodes\n            // do it as a post processing step\n            node = new mathMLTree.MathNode(\"mn\", [text]);\n            if (options.font) {\n                node.setAttribute(\"mathvariant\", variant);\n            }\n        } else {\n            node = new mathMLTree.MathNode(\"mi\", [text]);\n            node.setAttribute(\"mathvariant\", variant);\n        }\n\n        return node;\n    },\n\n    bin: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        return node;\n    },\n\n    rel: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        return node;\n    },\n\n    open: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        return node;\n    },\n\n    close: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        return node;\n    },\n\n    inner: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        return node;\n    },\n\n    punct: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value, group.mode)]);\n\n        node.setAttribute(\"separator\", \"true\");\n\n        return node;\n    },\n\n    ordgroup: function(group, options) {\n        var inner = buildExpression(group.value, options);\n\n        var node = new mathMLTree.MathNode(\"mrow\", inner);\n\n        return node;\n    },\n\n    text: function(group, options) {\n        var inner = buildExpression(group.value.body, options);\n\n        var node = new mathMLTree.MathNode(\"mtext\", inner);\n\n        return node;\n    },\n\n    color: function(group, options) {\n        var inner = buildExpression(group.value.value, options);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        node.setAttribute(\"mathcolor\", group.value.color);\n\n        return node;\n    },\n\n    supsub: function(group, options) {\n        var children = [buildGroup(group.value.base, options)];\n\n        if (group.value.sub) {\n            children.push(buildGroup(group.value.sub, options));\n        }\n\n        if (group.value.sup) {\n            children.push(buildGroup(group.value.sup, options));\n        }\n\n        var nodeType;\n        if (!group.value.sub) {\n            nodeType = \"msup\";\n        } else if (!group.value.sup) {\n            nodeType = \"msub\";\n        } else {\n            nodeType = \"msubsup\";\n        }\n\n        var node = new mathMLTree.MathNode(nodeType, children);\n\n        return node;\n    },\n\n    genfrac: function(group, options) {\n        var node = new mathMLTree.MathNode(\n            \"mfrac\",\n            [buildGroup(group.value.numer, options),\n             buildGroup(group.value.denom, options)]);\n\n        if (!group.value.hasBarLine) {\n            node.setAttribute(\"linethickness\", \"0px\");\n        }\n\n        if (group.value.leftDelim != null || group.value.rightDelim != null) {\n            var withDelims = [];\n\n            if (group.value.leftDelim != null) {\n                var leftOp = new mathMLTree.MathNode(\n                    \"mo\", [new mathMLTree.TextNode(group.value.leftDelim)]);\n\n                leftOp.setAttribute(\"fence\", \"true\");\n\n                withDelims.push(leftOp);\n            }\n\n            withDelims.push(node);\n\n            if (group.value.rightDelim != null) {\n                var rightOp = new mathMLTree.MathNode(\n                    \"mo\", [new mathMLTree.TextNode(group.value.rightDelim)]);\n\n                rightOp.setAttribute(\"fence\", \"true\");\n\n                withDelims.push(rightOp);\n            }\n\n            var outerNode = new mathMLTree.MathNode(\"mrow\", withDelims);\n\n            return outerNode;\n        }\n\n        return node;\n    },\n\n    array: function(group, options) {\n        return new mathMLTree.MathNode(\n            \"mtable\", group.value.body.map(function(row) {\n                return new mathMLTree.MathNode(\n                    \"mtr\", row.map(function(cell) {\n                        return new mathMLTree.MathNode(\n                            \"mtd\", [buildGroup(cell, options)]);\n                    }));\n            }));\n    },\n\n    sqrt: function(group, options) {\n        var node;\n        if (group.value.index) {\n            node = new mathMLTree.MathNode(\n                \"mroot\", [\n                    buildGroup(group.value.body, options),\n                    buildGroup(group.value.index, options)\n                ]);\n        } else {\n            node = new mathMLTree.MathNode(\n                \"msqrt\", [buildGroup(group.value.body, options)]);\n        }\n\n        return node;\n    },\n\n    leftright: function(group, options) {\n        var inner = buildExpression(group.value.body, options);\n\n        if (group.value.left !== \".\") {\n            var leftNode = new mathMLTree.MathNode(\n                \"mo\", [makeText(group.value.left, group.mode)]);\n\n            leftNode.setAttribute(\"fence\", \"true\");\n\n            inner.unshift(leftNode);\n        }\n\n        if (group.value.right !== \".\") {\n            var rightNode = new mathMLTree.MathNode(\n                \"mo\", [makeText(group.value.right, group.mode)]);\n\n            rightNode.setAttribute(\"fence\", \"true\");\n\n            inner.push(rightNode);\n        }\n\n        var outerNode = new mathMLTree.MathNode(\"mrow\", inner);\n\n        return outerNode;\n    },\n\n    accent: function(group, options) {\n        var accentNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.accent, group.mode)]);\n\n        var node = new mathMLTree.MathNode(\n            \"mover\",\n            [buildGroup(group.value.base, options),\n             accentNode]);\n\n        node.setAttribute(\"accent\", \"true\");\n\n        return node;\n    },\n\n    spacing: function(group) {\n        var node;\n\n        if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n            group.value === \" \" || group.value === \"~\") {\n            node = new mathMLTree.MathNode(\n                \"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n        } else {\n            node = new mathMLTree.MathNode(\"mspace\");\n\n            node.setAttribute(\n                \"width\", buildCommon.spacingFunctions[group.value].size);\n        }\n\n        return node;\n    },\n\n    op: function(group) {\n        var node;\n\n        // TODO(emily): handle big operators using the `largeop` attribute\n\n        if (group.value.symbol) {\n            // This is a symbol. Just add the symbol.\n            node = new mathMLTree.MathNode(\n                \"mo\", [makeText(group.value.body, group.mode)]);\n        } else {\n            // This is a text operator. Add all of the characters from the\n            // operator's name.\n            // TODO(emily): Add a space in the middle of some of these\n            // operators, like \\limsup.\n            node = new mathMLTree.MathNode(\n                \"mi\", [new mathMLTree.TextNode(group.value.body.slice(1))]);\n        }\n\n        return node;\n    },\n\n    katex: function(group) {\n        var node = new mathMLTree.MathNode(\n            \"mtext\", [new mathMLTree.TextNode(\"KaTeX\")]);\n\n        return node;\n    },\n\n    font: function(group, options) {\n        var font = group.value.font;\n        return buildGroup(group.value.body, options.withFont(font));\n    },\n\n    delimsizing: function(group) {\n        var children = [];\n\n        if (group.value.value !== \".\") {\n            children.push(makeText(group.value.value, group.mode));\n        }\n\n        var node = new mathMLTree.MathNode(\"mo\", children);\n\n        if (group.value.delimType === \"open\" ||\n            group.value.delimType === \"close\") {\n            // Only some of the delimsizing functions act as fences, and they\n            // return \"open\" or \"close\" delimTypes.\n            node.setAttribute(\"fence\", \"true\");\n        } else {\n            // Explicitly disable fencing if it's not a fence, to override the\n            // defaults.\n            node.setAttribute(\"fence\", \"false\");\n        }\n\n        return node;\n    },\n\n    styling: function(group, options) {\n        var inner = buildExpression(group.value.value, options);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        var styleAttributes = {\n            \"display\": [\"0\", \"true\"],\n            \"text\": [\"0\", \"false\"],\n            \"script\": [\"1\", \"false\"],\n            \"scriptscript\": [\"2\", \"false\"]\n        };\n\n        var attr = styleAttributes[group.value.style];\n\n        node.setAttribute(\"scriptlevel\", attr[0]);\n        node.setAttribute(\"displaystyle\", attr[1]);\n\n        return node;\n    },\n\n    sizing: function(group, options) {\n        var inner = buildExpression(group.value.value, options);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        // TODO(emily): This doesn't produce the correct size for nested size\n        // changes, because we don't keep state of what style we're currently\n        // in, so we can't reset the size to normal before changing it.  Now\n        // that we're passing an options parameter we should be able to fix\n        // this.\n        node.setAttribute(\n            \"mathsize\", buildCommon.sizingMultiplier[group.value.size] + \"em\");\n\n        return node;\n    },\n\n    overline: function(group, options) {\n        var operator = new mathMLTree.MathNode(\n            \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n        operator.setAttribute(\"stretchy\", \"true\");\n\n        var node = new mathMLTree.MathNode(\n            \"mover\",\n            [buildGroup(group.value.body, options),\n             operator]);\n        node.setAttribute(\"accent\", \"true\");\n\n        return node;\n    },\n\n    rule: function(group) {\n        // TODO(emily): Figure out if there's an actual way to draw black boxes\n        // in MathML.\n        var node = new mathMLTree.MathNode(\"mrow\");\n\n        return node;\n    },\n\n    llap: function(group, options) {\n        var node = new mathMLTree.MathNode(\n            \"mpadded\", [buildGroup(group.value.body, options)]);\n\n        node.setAttribute(\"lspace\", \"-1width\");\n        node.setAttribute(\"width\", \"0px\");\n\n        return node;\n    },\n\n    rlap: function(group, options) {\n        var node = new mathMLTree.MathNode(\n            \"mpadded\", [buildGroup(group.value.body, options)]);\n\n        node.setAttribute(\"width\", \"0px\");\n\n        return node;\n    },\n\n    phantom: function(group, options, prev) {\n        var inner = buildExpression(group.value.value, options);\n        return new mathMLTree.MathNode(\"mphantom\", inner);\n    }\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes. A little simpler than the HTML version because we don't do any\n * previous-node handling.\n */\nvar buildExpression = function(expression, options) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options));\n    }\n    return groups;\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupTypes function\n * on it to produce a MathML node.\n */\nvar buildGroup = function(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        return groupTypes[group.type](group, options);\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nvar buildMathML = function(tree, texExpression, options) {\n    var expression = buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly.\n    var wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\n        \"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\n        \"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    return makeSpan([\"katex-mathml\"], [math]);\n};\n\nmodule.exports = buildMathML;\n",
    "var buildHTML = require(\"./buildHTML\");\nvar buildMathML = require(\"./buildMathML\");\nvar buildCommon = require(\"./buildCommon\");\nvar Options = require(\"./Options\");\nvar Settings = require(\"./Settings\");\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function(tree, expression, settings) {\n    settings = settings || new Settings({});\n\n    var startStyle = Style.TEXT;\n    if (settings.displayMode) {\n        startStyle = Style.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new Options({\n        style: startStyle,\n        size: \"size5\"\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = makeSpan([\"katex\"], [\n        mathMLNode, htmlNode\n    ]);\n\n    if (settings.displayMode) {\n        return makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nmodule.exports = buildTree;\n",
    "/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function(symbol, font) {\n    if (symbols.math[symbol] && symbols.math[symbol].replace) {\n        return fontMetrics.getCharacterMetrics(\n            symbols.math[symbol].replace, font);\n    } else {\n        return fontMetrics.getCharacterMetrics(\n            symbol, font);\n    }\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar mathrmSize = function(value, size, mode) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode);\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar styleWrap = function(delim, toStyle, options) {\n    var span = makeSpan(\n        [\"style-wrap\", options.style.reset(), toStyle.cls()], [delim]);\n\n    var multiplier = toStyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    span.height *= multiplier;\n    span.depth *= multiplier;\n    span.maxFontSize = toStyle.sizeMultiplier;\n\n    return span;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar makeSmallDelim = function(delim, style, center, options, mode) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode);\n\n    var span = styleWrap(text, style, options);\n\n    if (center) {\n        var shift =\n            (1 - options.style.sizeMultiplier / style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar makeLargeDelim = function(delim, size, center, options, mode) {\n    var inner = mathrmSize(delim, size, mode);\n\n    var span = styleWrap(\n        makeSpan([\"delimsizing\", \"size\" + size],\n                 [inner], options.getColor()),\n        Style.TEXT, options);\n\n    if (center) {\n        var shift = (1 - options.style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar makeInner = function(symbol, font, mode) {\n    var sizeClass;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else if (font === \"Size4-Regular\") {\n        sizeClass = \"delim-size4\";\n    }\n\n    var inner = makeSpan(\n        [\"delimsizinginner\", sizeClass],\n        [makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return {type: \"elem\", elem: inner};\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar makeStackedDelim = function(delim, heightTotal, center, options, mode) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top, middle, repeat, bottom;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23d0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23d0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23d0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23a1\";\n        repeat = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23a4\";\n        repeat = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\") {\n        repeat = top = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\") {\n        top = \"\\u23a1\";\n        repeat = bottom = \"\\u23a2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\") {\n        repeat = top = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\") {\n        top = \"\\u23a4\";\n        repeat = bottom = \"\\u23a5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239b\";\n        repeat = \"\\u239c\";\n        bottom = \"\\u239d\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239e\";\n        repeat = \"\\u239f\";\n        bottom = \"\\u23a0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23a7\";\n        middle = \"\\u23a8\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23ab\";\n        middle = \"\\u23ac\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\surd\") {\n        top = \"\\ue001\";\n        bottom = \"\\u23b7\";\n        repeat = \"\\ue000\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = getMetrics(top, font);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = getMetrics(repeat, font);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = getMetrics(bottom, font);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = getMetrics(middle, font);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil(\n        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal =\n        minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = fontMetrics.metrics.axisHeight;\n    if (center) {\n        axisHeight *= options.style.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(makeInner(bottom, font, mode));\n\n    var i;\n    if (middle === null) {\n        // Add that many symbols\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n        inners.push(makeInner(middle, font, mode));\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var inner = buildCommon.makeVList(inners, \"bottom\", depth, options);\n\n    return styleWrap(\n        makeSpan([\"delimsizing\", \"mult\"], [inner], options.getColor()),\n        Style.TEXT, options);\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"\\\\surd\"\n];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\n    \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\",\n    \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\",\n    \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\"\n];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\"\n];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar makeSizedDelim = function(delim, size, options, mode) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) ||\n        utils.contains(stackNeverDelimiters, delim)) {\n        return makeLargeDelim(delim, size, false, options, mode);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return makeStackedDelim(\n            delim, sizeToMaxHeight[size], false, options, mode);\n    } else {\n        throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4}\n];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"stack\"}\n];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n    {type: \"stack\"}\n];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n */\nvar delimTypeToFont = function(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            heightDepth *= sequence[i].style.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar makeCustomSizedDelim = function(delim, height, center, options, mode) {\n    if (delim === \"<\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Depending on the sequence element we decided on, call the appropriate\n    // function.\n    if (delimType.type === \"small\") {\n        return makeSmallDelim(delim, delimType.style, center, options, mode);\n    } else if (delimType.type === \"large\") {\n        return makeLargeDelim(delim, delimType.size, center, options, mode);\n    } else if (delimType.type === \"stack\") {\n        return makeStackedDelim(delim, height, center, options, mode);\n    }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function(delim, height, depth, options, mode) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight =\n        fontMetrics.metrics.axisHeight * options.style.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / fontMetrics.metrics.ptPerEm;\n\n    var maxDistFromAxis = Math.max(\n        height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n        // In real TeX, calculations are done using integral values which are\n        // 65536 per pt, or 655360 per em. So, the division here truncates in\n        // TeX but doesn't here, producing different results. If we wanted to\n        // exactly match TeX's calculation, we could do\n        //   Math.floor(655360 * maxDistFromAxis / 500) *\n        //    delimiterFactor / 655360\n        // (To see the difference, compare\n        //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n        // in TeX and KaTeX)\n        maxDistFromAxis / 500 * delimiterFactor,\n        2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return makeCustomSizedDelim(delim, totalHeight, true, options, mode);\n};\n\nmodule.exports = {\n    sizedDelim: makeSizedDelim,\n    customSizedDelim: makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim\n};\n",
    "/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove null or empty classes.\n */\nvar createClass = function(classes) {\n    classes = classes.slice();\n    for (var i = classes.length - 1; i >= 0; i--) {\n        if (!classes[i]) {\n            classes.splice(i, 1);\n        }\n    }\n\n    return classes.join(\" \");\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n */\nfunction span(classes, children, height, depth, maxFontSize, style) {\n    this.classes = classes || [];\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n    this.style = style || {};\n    this.attributes = {};\n}\n\n/**\n * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all\n * browsers support attributes the same, and having too many custom attributes\n * is probably bad.\n */\nspan.prototype.setAttribute = function(attribute, value) {\n    this.attributes[attribute] = value;\n};\n\n/**\n * Convert the span into an HTML node\n */\nspan.prototype.toNode = function() {\n    var span = document.createElement(\"span\");\n\n    // Apply the class\n    span.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var style in this.style) {\n        if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n            span.style[style] = this.style[style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            span.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        span.appendChild(this.children[i].toNode());\n    }\n\n    return span;\n};\n\n/**\n * Convert the span into an HTML markup string\n */\nspan.prototype.toMarkup = function() {\n    var markup = \"<span\";\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</span>\";\n\n    return markup;\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. Thus, it only\n * contains children and doesn't have any HTML properties. It also keeps track\n * of a height, depth, and maxFontSize.\n */\nfunction documentFragment(children, height, depth, maxFontSize) {\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n}\n\n/**\n * Convert the fragment into a node\n */\ndocumentFragment.prototype.toNode = function() {\n    // Create a fragment\n    var frag = document.createDocumentFragment();\n\n    // Append the children\n    for (var i = 0; i < this.children.length; i++) {\n        frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n};\n\n/**\n * Convert the fragment into HTML markup\n */\ndocumentFragment.prototype.toMarkup = function() {\n    var markup = \"\";\n\n    // Simply concatenate the markup for the children together\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nfunction symbolNode(value, height, depth, italic, skew, classes, style) {\n    this.value = value || \"\";\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0;\n}\n\n/**\n * Creates a text node or span from a symbol node. Note that a span is only\n * created if it is needed.\n */\nsymbolNode.prototype.toNode = function() {\n    var node = document.createTextNode(this.value);\n    var span = null;\n\n    if (this.italic > 0) {\n        span = document.createElement(\"span\");\n        span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n        span = span || document.createElement(\"span\");\n        span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            span = span || document.createElement(\"span\");\n            span.style[style] = this.style[style];\n        }\n    }\n\n    if (span) {\n        span.appendChild(node);\n        return span;\n    } else {\n        return node;\n    }\n};\n\n/**\n * Creates markup for a symbol node.\n */\nsymbolNode.prototype.toMarkup = function() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n        needsSpan = true;\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n        styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        needsSpan = true;\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.value);\n    if (needsSpan) {\n        markup += \">\";\n        markup += escaped;\n        markup += \"</span>\";\n        return markup;\n    } else {\n        return escaped;\n    }\n};\n\nmodule.exports = {\n    span: span,\n    documentFragment: documentFragment,\n    symbolNode: symbolNode\n};\n",
    "var fontMetrics = require(\"./fontMetrics\");\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\nvar ParseNode = parseData.ParseNode;\nvar ParseResult = parseData.ParseResult;\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.\n */\nfunction parseArray(parser, pos, mode, result) {\n    var row = [], body = [row], rowGaps = [];\n    while (true) {\n        var cell = parser.parseExpression(pos, mode, false, null);\n        row.push(new ParseNode(\"ordgroup\", cell.result, mode));\n        pos = cell.position;\n        var next = cell.peek.text;\n        if (next === \"&\") {\n            pos = cell.peek.position;\n        } else if (next === \"\\\\end\") {\n            break;\n        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {\n            var cr = parser.parseFunction(pos, mode);\n            rowGaps.push(cr.result.value.size);\n            pos = cr.position;\n            row = [];\n            body.push(row);\n        } else {\n            throw new ParseError(\"Expected & or \\\\\\\\ or \\\\end\",\n                                 parser.lexer, cell.peek.position);\n        }\n    }\n    result.body = body;\n    result.rowGaps = rowGaps;\n    return new ParseResult(new ParseNode(result.type, result, mode), pos);\n}\n\n/*\n * An environment definition is very similar to a function definition.\n * Each element of the following array may contain\n *  - names: The names associated with a function. This can be used to\n *           share one implementation between several similar environments.\n *  - numArgs: The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (optional) Whether or not the environment is allowed inside\n *                   text mode (default false) (not enforced yet)\n *  - numOptionalArgs: (optional) Just like for a function\n *  - handler: The function that is called to handle this environment.\n *             It will receive the following arguments:\n *             - pos: the current position of the parser.\n *             - mode: the current parsing mode.\n *             - envName: the name of the environment, one of the listed names.\n *             - [args]: the arguments passed to \\begin.\n *             - positions: the positions associated with these arguments.\n */\n\nvar environmentDefinitions = [\n\n    // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n    // is part of the source2e.pdf file of LaTeX2e source documentation.\n    {\n        names: [\"array\"],\n        numArgs: 1,\n        handler: function(pos, mode, envName, colalign, positions) {\n            var parser = this;\n            colalign = colalign.value.map ? colalign.value : [colalign];\n            var cols = colalign.map(function(node) {\n                var ca = node.value;\n                if (\"lcr\".indexOf(ca) !== -1) {\n                    return {\n                        type: \"align\",\n                        align: ca\n                    };\n                } else if (ca === \"|\") {\n                    return {\n                        type: \"separator\",\n                        separator: \"|\"\n                    };\n                }\n                throw new ParseError(\n                    \"Unknown column alignment: \" + node.value,\n                    parser.lexer, positions[1]);\n            });\n            var res = {\n                type: \"array\",\n                cols: cols,\n                hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n            };\n            res = parseArray(parser, pos, mode, res);\n            return res;\n        }\n    },\n\n    // The matrix environments of amsmath builds on the array environment\n    // of LaTeX, which is discussed above.\n    {\n        names: [\n            \"matrix\",\n            \"pmatrix\",\n            \"bmatrix\",\n            \"Bmatrix\",\n            \"vmatrix\",\n            \"Vmatrix\"\n        ],\n        handler: function(pos, mode, envName) {\n            var delimiters = {\n                \"matrix\": null,\n                \"pmatrix\": [\"(\", \")\"],\n                \"bmatrix\": [\"[\", \"]\"],\n                \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n                \"vmatrix\": [\"|\", \"|\"],\n                \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n            }[envName];\n            var res = {\n                type: \"array\",\n                hskipBeforeAndAfter: false // \\hskip -\\arraycolsep in amsmath\n            };\n            res = parseArray(this, pos, mode, res);\n            if (delimiters) {\n                res.result = new ParseNode(\"leftright\", {\n                    body: [res.result],\n                    left: delimiters[0],\n                    right: delimiters[1]\n                }, mode);\n            }\n            return res;\n        }\n    },\n\n    // A cases environment (in amsmath.sty) is almost equivalent to\n    // \\def\\arraystretch{1.2}%\n    // \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n    {\n        names: [\"cases\"],\n        handler: function(pos, mode, envName) {\n            var res = {\n                type: \"array\",\n                arraystretch: 1.2,\n                cols: [{\n                    type: \"align\",\n                    align: \"l\",\n                    pregap: 0,\n                    postgap: fontMetrics.metrics.quad\n                }, {\n                    type: \"align\",\n                    align: \"l\",\n                    pregap: 0,\n                    postgap: 0\n                }]\n            };\n            res = parseArray(this, pos, mode, res);\n            res.result = new ParseNode(\"leftright\", {\n                body: [res.result],\n                left: \"\\\\{\",\n                right: \".\"\n            }, mode);\n            return res;\n        }\n    }\n];\n\nmodule.exports = (function() {\n    // nested function so we don't leak i and j into the module scope\n    var exports = {};\n    for (var i = 0; i < environmentDefinitions.length; ++i) {\n        var def = environmentDefinitions[i];\n        def.greediness = 1;\n        def.allowedInText = !!def.allowedInText;\n        def.numArgs = def.numArgs || 0;\n        def.numOptionalArgs = def.numOptionalArgs || 0;\n        for (var j = 0; j < def.names.length; ++j) {\n            exports[def.names[j]] = def;\n        }\n    }\n    return exports;\n})();\n",
    "/* jshint unused:false */\n\nvar Style = require(\"./Style\");\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmmi10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the symbol fonts. In TeX, there are actually three sets of\n// dimensions, one for each of textstyle, scriptstyle, and scriptscriptstyle,\n// but we only use the textstyle ones, and scale certain dimensions accordingly.\n// See the TeXbook, page 441.\nvar sigma1 = 0.025;\nvar sigma2 = 0;\nvar sigma3 = 0;\nvar sigma4 = 0;\nvar sigma5 = 0.431;\nvar sigma6 = 1;\nvar sigma7 = 0;\nvar sigma8 = 0.677;\nvar sigma9 = 0.394;\nvar sigma10 = 0.444;\nvar sigma11 = 0.686;\nvar sigma12 = 0.345;\nvar sigma13 = 0.413;\nvar sigma14 = 0.363;\nvar sigma15 = 0.289;\nvar sigma16 = 0.150;\nvar sigma17 = 0.247;\nvar sigma18 = 0.386;\nvar sigma19 = 0.050;\nvar sigma20 = 2.390;\nvar sigma21 = 1.01;\nvar sigma21Script = 0.81;\nvar sigma21ScriptScript = 0.71;\nvar sigma22 = 0.250;\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    xHeight: sigma5,\n    quad: sigma6,\n    num1: sigma8,\n    num2: sigma9,\n    num3: sigma10,\n    denom1: sigma11,\n    denom2: sigma12,\n    sup1: sigma13,\n    sup2: sigma14,\n    sup3: sigma15,\n    sub1: sigma16,\n    sub2: sigma17,\n    supDrop: sigma18,\n    subDrop: sigma19,\n    axisHeight: sigma22,\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    emPerEx: sigma5 / sigma6,\n    doubleRuleSep: doubleRuleSep,\n\n    // TODO(alpert): Missing parallel structure here. We should probably add\n    // style-specific metrics for all of these.\n    delim1: sigma20,\n    getDelim2: function(style) {\n        if (style.size === Style.TEXT.size) {\n            return sigma21;\n        } else if (style.size === Style.SCRIPT.size) {\n            return sigma21Script;\n        } else if (style.size === Style.SCRIPTSCRIPT.size) {\n            return sigma21ScriptScript;\n        }\n        throw new Error(\"Unexpected style size: \" + style.size);\n    }\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n/**\n * This function is a convience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style\n */\nvar getCharacterMetrics = function(character, style) {\n    return metricMap[style][character.charCodeAt(0)];\n};\n\nmodule.exports = {\n    metrics: metrics,\n    getCharacterMetrics: getCharacterMetrics\n};\n",
    "module.exports = {\n\"AMS-Regular\": {\n  \"65\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.16667, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.16667, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.16667, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"165\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.025, \"skew\": 0.0},\n  \"174\": {\"depth\": 0.15559, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"240\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"295\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.9, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.9, \"italic\": 0.0, \"skew\": 0.0},\n  \"989\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"1008\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.04028, \"skew\": 0.0},\n  \"8245\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8463\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8487\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8498\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8502\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8503\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8504\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8513\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8592\": {\"depth\": -0.03598, \"height\": 0.46402, \"italic\": 0.0, \"skew\": 0.0},\n  \"8594\": {\"depth\": -0.03598, \"height\": 0.46402, \"italic\": 0.0, \"skew\": 0.0},\n  \"8602\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8603\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8606\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8608\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8610\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8611\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8619\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8620\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8621\": {\"depth\": -0.13313, \"height\": 0.37788, \"italic\": 0.0, \"skew\": 0.0},\n  \"8622\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8624\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8625\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8630\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8631\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8634\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8635\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8638\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8639\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8642\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8643\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8644\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8646\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8647\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8648\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8649\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8650\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8651\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8652\": {\"depth\": 0.01354, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8653\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8654\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8655\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8666\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8667\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8669\": {\"depth\": -0.13313, \"height\": 0.37788, \"italic\": 0.0, \"skew\": 0.0},\n  \"8672\": {\"depth\": -0.064, \"height\": 0.437, \"italic\": 0, \"skew\": 0},\n  \"8674\": {\"depth\": -0.064, \"height\": 0.437, \"italic\": 0, \"skew\": 0},\n  \"8705\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"8708\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8709\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8717\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8722\": {\"depth\": -0.03598, \"height\": 0.46402, \"italic\": 0.0, \"skew\": 0.0},\n  \"8724\": {\"depth\": 0.08198, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8726\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8733\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8736\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8737\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8738\": {\"depth\": 0.03517, \"height\": 0.52239, \"italic\": 0.0, \"skew\": 0.0},\n  \"8739\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8740\": {\"depth\": 0.25142, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8741\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8742\": {\"depth\": 0.25142, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8756\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8757\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8764\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8765\": {\"depth\": -0.13313, \"height\": 0.37788, \"italic\": 0.0, \"skew\": 0.0},\n  \"8769\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8770\": {\"depth\": -0.03625, \"height\": 0.46375, \"italic\": 0.0, \"skew\": 0.0},\n  \"8774\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8776\": {\"depth\": -0.01688, \"height\": 0.48312, \"italic\": 0.0, \"skew\": 0.0},\n  \"8778\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8782\": {\"depth\": 0.06062, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8783\": {\"depth\": 0.06062, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8785\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8786\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8787\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8790\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8791\": {\"depth\": 0.22958, \"height\": 0.72958, \"italic\": 0.0, \"skew\": 0.0},\n  \"8796\": {\"depth\": 0.08198, \"height\": 0.91667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8806\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"8807\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"8808\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"8809\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"8812\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"8814\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8815\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8816\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8817\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8818\": {\"depth\": 0.22958, \"height\": 0.72958, \"italic\": 0.0, \"skew\": 0.0},\n  \"8819\": {\"depth\": 0.22958, \"height\": 0.72958, \"italic\": 0.0, \"skew\": 0.0},\n  \"8822\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8823\": {\"depth\": 0.1808, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8828\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8829\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8830\": {\"depth\": 0.22958, \"height\": 0.72958, \"italic\": 0.0, \"skew\": 0.0},\n  \"8831\": {\"depth\": 0.22958, \"height\": 0.72958, \"italic\": 0.0, \"skew\": 0.0},\n  \"8832\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8833\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8840\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8841\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8842\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8843\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8847\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8848\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8858\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8859\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8861\": {\"depth\": 0.08198, \"height\": 0.58198, \"italic\": 0.0, \"skew\": 0.0},\n  \"8862\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8863\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8864\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8865\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"8872\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8873\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8874\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8876\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8877\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8878\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8879\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8882\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8883\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8884\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8885\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8888\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8890\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8891\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8892\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8901\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8903\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8905\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8906\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"8907\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8908\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8909\": {\"depth\": -0.03598, \"height\": 0.46402, \"italic\": 0.0, \"skew\": 0.0},\n  \"8910\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8911\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8912\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8913\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8914\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8915\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8916\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8918\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8919\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8920\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8921\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"8922\": {\"depth\": 0.38569, \"height\": 0.88569, \"italic\": 0.0, \"skew\": 0.0},\n  \"8923\": {\"depth\": 0.38569, \"height\": 0.88569, \"italic\": 0.0, \"skew\": 0.0},\n  \"8926\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8927\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8928\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8929\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8934\": {\"depth\": 0.23222, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8935\": {\"depth\": 0.23222, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8936\": {\"depth\": 0.23222, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8937\": {\"depth\": 0.23222, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8938\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8939\": {\"depth\": 0.20576, \"height\": 0.70576, \"italic\": 0.0, \"skew\": 0.0},\n  \"8940\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8941\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"8994\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8995\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"9416\": {\"depth\": 0.15559, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"9484\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"9488\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"9492\": {\"depth\": 0.0, \"height\": 0.37788, \"italic\": 0.0, \"skew\": 0.0},\n  \"9496\": {\"depth\": 0.0, \"height\": 0.37788, \"italic\": 0.0, \"skew\": 0.0},\n  \"9585\": {\"depth\": 0.19444, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"9586\": {\"depth\": 0.19444, \"height\": 0.74111, \"italic\": 0.0, \"skew\": 0.0},\n  \"9632\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"9633\": {\"depth\": 0.0, \"height\": 0.675, \"italic\": 0.0, \"skew\": 0.0},\n  \"9650\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9651\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9654\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9660\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9661\": {\"depth\": 0.0, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9664\": {\"depth\": 0.03517, \"height\": 0.54986, \"italic\": 0.0, \"skew\": 0.0},\n  \"9674\": {\"depth\": 0.11111, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"9733\": {\"depth\": 0.19444, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"10003\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"10016\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"10731\": {\"depth\": 0.11111, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"10846\": {\"depth\": 0.19444, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"10877\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"10878\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"10885\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"10886\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"10887\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"10888\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"10889\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10890\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10891\": {\"depth\": 0.48256, \"height\": 0.98256, \"italic\": 0.0, \"skew\": 0.0},\n  \"10892\": {\"depth\": 0.48256, \"height\": 0.98256, \"italic\": 0.0, \"skew\": 0.0},\n  \"10901\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"10902\": {\"depth\": 0.13667, \"height\": 0.63667, \"italic\": 0.0, \"skew\": 0.0},\n  \"10933\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10934\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10935\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10936\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10937\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10938\": {\"depth\": 0.26167, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"10949\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"10950\": {\"depth\": 0.25583, \"height\": 0.75583, \"italic\": 0.0, \"skew\": 0.0},\n  \"10955\": {\"depth\": 0.28481, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"10956\": {\"depth\": 0.28481, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"57350\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"57351\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"57352\": {\"depth\": 0.08167, \"height\": 0.58167, \"italic\": 0.0, \"skew\": 0.0},\n  \"57353\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.04028, \"skew\": 0.0},\n  \"57356\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57357\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57358\": {\"depth\": 0.41951, \"height\": 0.91951, \"italic\": 0.0, \"skew\": 0.0},\n  \"57359\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"57360\": {\"depth\": 0.30274, \"height\": 0.79383, \"italic\": 0.0, \"skew\": 0.0},\n  \"57361\": {\"depth\": 0.41951, \"height\": 0.91951, \"italic\": 0.0, \"skew\": 0.0},\n  \"57366\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57367\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57368\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57369\": {\"depth\": 0.25142, \"height\": 0.75726, \"italic\": 0.0, \"skew\": 0.0},\n  \"57370\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"57371\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Caligraphic-Regular\": {\n  \"48\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.19445},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.03041, \"skew\": 0.13889},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05834, \"skew\": 0.13889},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08944, \"skew\": 0.11111},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09931, \"skew\": 0.11111},\n  \"71\": {\"depth\": 0.09722, \"height\": 0.68333, \"italic\": 0.0593, \"skew\": 0.11111},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.00965, \"skew\": 0.11111},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07382, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.09722, \"height\": 0.68333, \"italic\": 0.18472, \"skew\": 0.16667},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.01445, \"skew\": 0.05556},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.13889},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.13889},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14736, \"skew\": 0.08334},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.11111},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08222, \"skew\": 0.08334},\n  \"81\": {\"depth\": 0.09722, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.11111},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.075, \"skew\": 0.13889},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.25417, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09931, \"skew\": 0.08334},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08222, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08222, \"skew\": 0.08334},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14643, \"skew\": 0.13889},\n  \"89\": {\"depth\": 0.09722, \"height\": 0.68333, \"italic\": 0.08222, \"skew\": 0.08334},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07944, \"skew\": 0.13889}\n},\n\"Fraktur-Regular\": {\n  \"33\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.24982, \"height\": 0.74947, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.24982, \"height\": 0.74947, \"italic\": 0.0, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"43\": {\"depth\": 0.08319, \"height\": 0.58283, \"italic\": 0.0, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.0, \"height\": 0.10803, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": 0.08319, \"height\": 0.58283, \"italic\": 0.0, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.10803, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.24982, \"height\": 0.74947, \"italic\": 0.0, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.12604, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.13099, \"height\": 0.36866, \"italic\": 0.0, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.12604, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.06302, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.12604, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.03781, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.12604, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.24982, \"height\": 0.74947, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.24982, \"height\": 0.74947, \"italic\": 0.0, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.18906, \"height\": 0.52396, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.52396, \"italic\": 0.0, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.52396, \"italic\": 0.0, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"8216\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"8217\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"58112\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"58113\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"58114\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"58115\": {\"depth\": 0.18906, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"58116\": {\"depth\": 0.18906, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0},\n  \"58117\": {\"depth\": 0.0, \"height\": 0.69141, \"italic\": 0.0, \"skew\": 0.0},\n  \"58118\": {\"depth\": 0.0, \"height\": 0.62119, \"italic\": 0.0, \"skew\": 0.0},\n  \"58119\": {\"depth\": 0.0, \"height\": 0.47534, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Main-Bold\": {\n  \"33\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"35\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"36\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"37\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"43\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.19444, \"height\": 0.15556, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.15556, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"60\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"62\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"64\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.01597, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.01597, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.02875, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"95\": {\"depth\": 0.31, \"height\": 0.13444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"96\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.10903, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.01597, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.63492, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.01597, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.01597, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.01597, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"124\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"126\": {\"depth\": 0.35, \"height\": 0.34444, \"italic\": 0.0, \"skew\": 0.0},\n  \"168\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"172\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"175\": {\"depth\": 0.0, \"height\": 0.59611, \"italic\": 0.0, \"skew\": 0.0},\n  \"176\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"177\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"180\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"215\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"247\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"305\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"567\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"711\": {\"depth\": 0.0, \"height\": 0.63194, \"italic\": 0.0, \"skew\": 0.0},\n  \"713\": {\"depth\": 0.0, \"height\": 0.59611, \"italic\": 0.0, \"skew\": 0.0},\n  \"714\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"715\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"728\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"729\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"730\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"768\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"769\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"772\": {\"depth\": 0.0, \"height\": 0.59611, \"italic\": 0.0, \"skew\": 0.0},\n  \"774\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"775\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"776\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"778\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"779\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"780\": {\"depth\": 0.0, \"height\": 0.63194, \"italic\": 0.0, \"skew\": 0.0},\n  \"824\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"8211\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"8212\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"8216\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8217\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8220\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8221\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8224\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8225\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8242\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8407\": {\"depth\": 0.0, \"height\": 0.72444, \"italic\": 0.15486, \"skew\": 0.0},\n  \"8463\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8465\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8467\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8472\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8476\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8501\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8592\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8593\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8594\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8595\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8596\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8597\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8598\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8599\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8600\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8601\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8636\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8637\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8640\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8641\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8656\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8657\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8658\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8659\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8660\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8661\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8704\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8706\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06389, \"skew\": 0.0},\n  \"8707\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8709\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8711\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"8712\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8715\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8722\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8723\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8725\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8726\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8727\": {\"depth\": -0.02778, \"height\": 0.47222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8728\": {\"depth\": -0.02639, \"height\": 0.47361, \"italic\": 0.0, \"skew\": 0.0},\n  \"8729\": {\"depth\": -0.02639, \"height\": 0.47361, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 0.18, \"height\": 0.82, \"italic\": 0.0, \"skew\": 0.0},\n  \"8733\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8734\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8736\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8739\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8741\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8743\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8744\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8745\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8746\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8747\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.12778, \"skew\": 0.0},\n  \"8764\": {\"depth\": -0.10889, \"height\": 0.39111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8768\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8771\": {\"depth\": 0.00222, \"height\": 0.50222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8776\": {\"depth\": 0.02444, \"height\": 0.52444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8781\": {\"depth\": 0.00222, \"height\": 0.50222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8801\": {\"depth\": 0.00222, \"height\": 0.50222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8804\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8805\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8810\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8811\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8826\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8827\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8834\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8835\": {\"depth\": 0.08556, \"height\": 0.58556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8838\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8839\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8846\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8849\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8850\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"8851\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8852\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8853\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8854\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8855\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8856\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8857\": {\"depth\": 0.13333, \"height\": 0.63333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8866\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8867\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8868\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8869\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8900\": {\"depth\": -0.02639, \"height\": 0.47361, \"italic\": 0.0, \"skew\": 0.0},\n  \"8901\": {\"depth\": -0.02639, \"height\": 0.47361, \"italic\": 0.0, \"skew\": 0.0},\n  \"8902\": {\"depth\": -0.02778, \"height\": 0.47222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8968\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8994\": {\"depth\": -0.13889, \"height\": 0.36111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8995\": {\"depth\": -0.13889, \"height\": 0.36111, \"italic\": 0.0, \"skew\": 0.0},\n  \"9651\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9657\": {\"depth\": -0.02778, \"height\": 0.47222, \"italic\": 0.0, \"skew\": 0.0},\n  \"9661\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9667\": {\"depth\": -0.02778, \"height\": 0.47222, \"italic\": 0.0, \"skew\": 0.0},\n  \"9711\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9824\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9825\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9826\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9827\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9837\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"9838\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9839\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10815\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"10927\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0},\n  \"10928\": {\"depth\": 0.19667, \"height\": 0.69667, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Main-Italic\": {\n  \"33\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.12417, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06961, \"skew\": 0.0},\n  \"35\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.06616, \"skew\": 0.0},\n  \"37\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.13639, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.09694, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.12417, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.16194, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.03694, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.14917, \"skew\": 0.0},\n  \"43\": {\"depth\": 0.05667, \"height\": 0.56167, \"italic\": 0.03694, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.19444, \"height\": 0.10556, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02826, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.10556, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.16194, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.19444, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.19444, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.13556, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0582, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0582, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.06616, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.1225, \"skew\": 0.0},\n  \"64\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.09597, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10257, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14528, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09403, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.12028, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13305, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08722, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.16389, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.15806, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14028, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14528, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.16389, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.16389, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09403, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10257, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68333, \"italic\": 0.09403, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.03868, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.11972, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13305, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.16389, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.18361, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.18361, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.15806, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.19383, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.14528, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.1875, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.10528, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06646, \"skew\": 0.0},\n  \"95\": {\"depth\": 0.31, \"height\": 0.12056, \"italic\": 0.09208, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.07671, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06312, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.05653, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.10333, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.07514, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.21194, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.08847, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.07671, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.65536, \"italic\": 0.1019, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.65536, \"italic\": 0.14467, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.10764, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.10333, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.07671, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.07671, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.06312, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.06312, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.08847, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.10764, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.08208, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.61508, \"italic\": 0.09486, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.07671, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.10764, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.10764, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.12042, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.08847, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.12292, \"skew\": 0.0},\n  \"126\": {\"depth\": 0.35, \"height\": 0.31786, \"italic\": 0.11585, \"skew\": 0.0},\n  \"163\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"305\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"567\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"768\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"769\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.09694, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06646, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.11585, \"skew\": 0.0},\n  \"772\": {\"depth\": 0.0, \"height\": 0.56167, \"italic\": 0.10333, \"skew\": 0.0},\n  \"774\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.10806, \"skew\": 0.0},\n  \"775\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.11752, \"skew\": 0.0},\n  \"776\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.10474, \"skew\": 0.0},\n  \"778\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"779\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.1225, \"skew\": 0.0},\n  \"780\": {\"depth\": 0.0, \"height\": 0.62847, \"italic\": 0.08295, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13305, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09403, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.15294, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.16389, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.12028, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.11111, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05986, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.11111, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10257, \"skew\": 0.0},\n  \"8211\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.09208, \"skew\": 0.0},\n  \"8212\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.09208, \"skew\": 0.0},\n  \"8216\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.12417, \"skew\": 0.0},\n  \"8217\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.12417, \"skew\": 0.0},\n  \"8220\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.1685, \"skew\": 0.0},\n  \"8221\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06961, \"skew\": 0.0},\n  \"8463\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Main-Regular\": {\n  \"32\": {\"depth\": 0.0, \"height\": 0.0, \"italic\": 0, \"skew\": 0},\n  \"33\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"35\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"36\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"37\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"43\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.19444, \"height\": 0.10556, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.10556, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.0, \"height\": 0.64444, \"italic\": 0.0, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"60\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"62\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"64\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.01389, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.01389, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.025, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"95\": {\"depth\": 0.31, \"height\": 0.12056, \"italic\": 0.02778, \"skew\": 0.0},\n  \"96\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.07778, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.01389, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.61508, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.01389, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.01389, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.01389, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"124\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"126\": {\"depth\": 0.35, \"height\": 0.31786, \"italic\": 0.0, \"skew\": 0.0},\n  \"160\": {\"depth\": 0.0, \"height\": 0.0, \"italic\": 0, \"skew\": 0},\n  \"168\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"172\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"175\": {\"depth\": 0.0, \"height\": 0.56778, \"italic\": 0.0, \"skew\": 0.0},\n  \"176\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"177\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"180\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"215\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"247\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"305\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"567\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"711\": {\"depth\": 0.0, \"height\": 0.62847, \"italic\": 0.0, \"skew\": 0.0},\n  \"713\": {\"depth\": 0.0, \"height\": 0.56778, \"italic\": 0.0, \"skew\": 0.0},\n  \"714\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"715\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"728\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"729\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"730\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"768\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"769\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"772\": {\"depth\": 0.0, \"height\": 0.56778, \"italic\": 0.0, \"skew\": 0.0},\n  \"774\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"775\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"776\": {\"depth\": 0.0, \"height\": 0.66786, \"italic\": 0.0, \"skew\": 0.0},\n  \"778\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"779\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"780\": {\"depth\": 0.0, \"height\": 0.62847, \"italic\": 0.0, \"skew\": 0.0},\n  \"824\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8211\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.0},\n  \"8212\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.0},\n  \"8216\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8217\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8220\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8221\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8224\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8225\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8230\": {\"depth\": 0.0, \"height\": 0.12, \"italic\": 0, \"skew\": 0},\n  \"8242\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8407\": {\"depth\": 0.0, \"height\": 0.71444, \"italic\": 0.15382, \"skew\": 0.0},\n  \"8463\": {\"depth\": 0.0, \"height\": 0.68889, \"italic\": 0.0, \"skew\": 0.0},\n  \"8465\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8467\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.11111},\n  \"8472\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.11111},\n  \"8476\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8501\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8592\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8593\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8594\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8595\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8596\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8597\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8598\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8599\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8600\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8601\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8614\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"8617\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"8618\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"8636\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8637\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8640\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8641\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8652\": {\"depth\": 0.011, \"height\": 0.671, \"italic\": 0, \"skew\": 0},\n  \"8656\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8657\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8658\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8659\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8660\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8661\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8704\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8706\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.05556, \"skew\": 0.08334},\n  \"8707\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8709\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8711\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8712\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8715\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8722\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8723\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8725\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8726\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8727\": {\"depth\": -0.03472, \"height\": 0.46528, \"italic\": 0.0, \"skew\": 0.0},\n  \"8728\": {\"depth\": -0.05555, \"height\": 0.44445, \"italic\": 0.0, \"skew\": 0.0},\n  \"8729\": {\"depth\": -0.05555, \"height\": 0.44445, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 0.2, \"height\": 0.8, \"italic\": 0.0, \"skew\": 0.0},\n  \"8733\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8734\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"8736\": {\"depth\": 0.0, \"height\": 0.69224, \"italic\": 0.0, \"skew\": 0.0},\n  \"8739\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8741\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8743\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8744\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8745\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8746\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8747\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.11111, \"skew\": 0.0},\n  \"8764\": {\"depth\": -0.13313, \"height\": 0.36687, \"italic\": 0.0, \"skew\": 0.0},\n  \"8768\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8771\": {\"depth\": -0.03625, \"height\": 0.46375, \"italic\": 0.0, \"skew\": 0.0},\n  \"8773\": {\"depth\": -0.022, \"height\": 0.589, \"italic\": 0, \"skew\": 0},\n  \"8776\": {\"depth\": -0.01688, \"height\": 0.48312, \"italic\": 0.0, \"skew\": 0.0},\n  \"8781\": {\"depth\": -0.03625, \"height\": 0.46375, \"italic\": 0.0, \"skew\": 0.0},\n  \"8784\": {\"depth\": -0.133, \"height\": 0.67, \"italic\": 0, \"skew\": 0},\n  \"8800\": {\"depth\": 0.215, \"height\": 0.716, \"italic\": 0, \"skew\": 0},\n  \"8801\": {\"depth\": -0.03625, \"height\": 0.46375, \"italic\": 0.0, \"skew\": 0.0},\n  \"8804\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8805\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8810\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8811\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8826\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8827\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8834\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8835\": {\"depth\": 0.0391, \"height\": 0.5391, \"italic\": 0.0, \"skew\": 0.0},\n  \"8838\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8839\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8846\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8849\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8850\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"8851\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8852\": {\"depth\": 0.0, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"8853\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8854\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8855\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8856\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8857\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"8866\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8867\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8868\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8869\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8872\": {\"depth\": 0.249, \"height\": 0.75, \"italic\": 0, \"skew\": 0},\n  \"8900\": {\"depth\": -0.05555, \"height\": 0.44445, \"italic\": 0.0, \"skew\": 0.0},\n  \"8901\": {\"depth\": -0.05555, \"height\": 0.44445, \"italic\": 0.0, \"skew\": 0.0},\n  \"8902\": {\"depth\": -0.03472, \"height\": 0.46528, \"italic\": 0.0, \"skew\": 0.0},\n  \"8904\": {\"depth\": 0.005, \"height\": 0.505, \"italic\": 0, \"skew\": 0},\n  \"8942\": {\"depth\": 0.03, \"height\": 0.9, \"italic\": 0, \"skew\": 0},\n  \"8943\": {\"depth\": -0.19, \"height\": 0.31, \"italic\": 0, \"skew\": 0},\n  \"8945\": {\"depth\": -0.1, \"height\": 0.82, \"italic\": 0, \"skew\": 0},\n  \"8968\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8994\": {\"depth\": -0.14236, \"height\": 0.35764, \"italic\": 0.0, \"skew\": 0.0},\n  \"8995\": {\"depth\": -0.14236, \"height\": 0.35764, \"italic\": 0.0, \"skew\": 0.0},\n  \"9136\": {\"depth\": 0.244, \"height\": 0.744, \"italic\": 0, \"skew\": 0},\n  \"9137\": {\"depth\": 0.244, \"height\": 0.744, \"italic\": 0, \"skew\": 0},\n  \"9651\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9657\": {\"depth\": -0.03472, \"height\": 0.46528, \"italic\": 0.0, \"skew\": 0.0},\n  \"9661\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9667\": {\"depth\": -0.03472, \"height\": 0.46528, \"italic\": 0.0, \"skew\": 0.0},\n  \"9711\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9824\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9825\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9826\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9827\": {\"depth\": 0.12963, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9837\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"9838\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"9839\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10222\": {\"depth\": 0.244, \"height\": 0.744, \"italic\": 0, \"skew\": 0},\n  \"10223\": {\"depth\": 0.244, \"height\": 0.744, \"italic\": 0, \"skew\": 0},\n  \"10229\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"10230\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"10231\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"10232\": {\"depth\": 0.024, \"height\": 0.525, \"italic\": 0, \"skew\": 0},\n  \"10233\": {\"depth\": 0.024, \"height\": 0.525, \"italic\": 0, \"skew\": 0},\n  \"10234\": {\"depth\": 0.024, \"height\": 0.525, \"italic\": 0, \"skew\": 0},\n  \"10236\": {\"depth\": 0.011, \"height\": 0.511, \"italic\": 0, \"skew\": 0},\n  \"10815\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.0},\n  \"10927\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0},\n  \"10928\": {\"depth\": 0.13597, \"height\": 0.63597, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Math-BoldItalic\": {\n  \"47\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.04835, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.06979, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.03194, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.05451, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.08229, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.07778, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.10069, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.06979, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.11424, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.11424, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.03194, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.00421, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.05382, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.11424, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.25555, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.07778, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.25555, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.06979, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.11042, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.69326, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.69326, \"italic\": 0.0622, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.01852, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0088, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.63492, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.02778, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.04213, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.03194, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.07458, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.08229, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.05451, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.15972, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.0, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.11653, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68611, \"italic\": 0.04835, \"skew\": 0.0},\n  \"945\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"946\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.03403, \"skew\": 0.0},\n  \"947\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.06389, \"skew\": 0.0},\n  \"948\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03819, \"skew\": 0.0},\n  \"949\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"950\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.06215, \"skew\": 0.0},\n  \"951\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"952\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"953\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"954\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"955\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"956\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"957\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.06898, \"skew\": 0.0},\n  \"958\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.03021, \"skew\": 0.0},\n  \"959\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"960\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"961\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"962\": {\"depth\": 0.09722, \"height\": 0.44444, \"italic\": 0.07917, \"skew\": 0.0},\n  \"963\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"964\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.13472, \"skew\": 0.0},\n  \"965\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"966\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"967\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"968\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"969\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03704, \"skew\": 0.0},\n  \"977\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"981\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"982\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.03194, \"skew\": 0.0},\n  \"1009\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"1013\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Math-Italic\": {\n  \"47\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.13889},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05017, \"skew\": 0.08334},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.08334},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.05556},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08125, \"skew\": 0.05556},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07847, \"skew\": 0.11111},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09618, \"skew\": 0.16667},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.05556},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.02778},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.08334},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.08334},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.00773, \"skew\": 0.08334},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.02778},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.22222, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07847, \"skew\": 0.08334},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.22222, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.08334},\n  \"97\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.16667},\n  \"101\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"102\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.10764, \"skew\": 0.16667},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.65952, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.65952, \"italic\": 0.05724, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03148, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.01968, \"skew\": 0.08334},\n  \"109\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.08334},\n  \"114\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.05556},\n  \"115\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"116\": {\"depth\": 0.0, \"height\": 0.61508, \"italic\": 0.0, \"skew\": 0.08334},\n  \"117\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"118\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"119\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02691, \"skew\": 0.08334},\n  \"120\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.05556},\n  \"122\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.04398, \"skew\": 0.05556},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.16667},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.16667},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07569, \"skew\": 0.08334},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08125, \"skew\": 0.05556},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.05556},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.11, \"skew\": 0.05556},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05017, \"skew\": 0.08334},\n  \"945\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0037, \"skew\": 0.02778},\n  \"946\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.05278, \"skew\": 0.08334},\n  \"947\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.05556, \"skew\": 0.0},\n  \"948\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03785, \"skew\": 0.05556},\n  \"949\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"950\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.07378, \"skew\": 0.08334},\n  \"951\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.05556},\n  \"952\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"953\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"954\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"955\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"956\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"957\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.06366, \"skew\": 0.02778},\n  \"958\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.04601, \"skew\": 0.11111},\n  \"959\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"960\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"961\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"962\": {\"depth\": 0.09722, \"height\": 0.43056, \"italic\": 0.07986, \"skew\": 0.08334},\n  \"963\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"964\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.1132, \"skew\": 0.02778},\n  \"965\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"966\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"967\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"968\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.03588, \"skew\": 0.11111},\n  \"969\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"977\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.08334},\n  \"981\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.08334},\n  \"982\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.0},\n  \"1009\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"1013\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556}\n},\n\"Math-Regular\": {\n  \"65\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.13889},\n  \"66\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05017, \"skew\": 0.08334},\n  \"67\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.08334},\n  \"68\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.05556},\n  \"69\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"70\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"71\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"72\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08125, \"skew\": 0.05556},\n  \"73\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07847, \"skew\": 0.11111},\n  \"74\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.09618, \"skew\": 0.16667},\n  \"75\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.05556},\n  \"76\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.02778},\n  \"77\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.08334},\n  \"78\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.08334},\n  \"79\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"80\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"81\": {\"depth\": 0.19444, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"82\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.00773, \"skew\": 0.08334},\n  \"83\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"84\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"85\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.10903, \"skew\": 0.02778},\n  \"86\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.22222, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07847, \"skew\": 0.08334},\n  \"89\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.22222, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07153, \"skew\": 0.08334},\n  \"97\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.16667},\n  \"101\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"102\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.10764, \"skew\": 0.16667},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.65952, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.65952, \"italic\": 0.05724, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03148, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.01968, \"skew\": 0.08334},\n  \"109\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.08334},\n  \"114\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.05556},\n  \"115\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"116\": {\"depth\": 0.0, \"height\": 0.61508, \"italic\": 0.0, \"skew\": 0.08334},\n  \"117\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"118\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"119\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02691, \"skew\": 0.08334},\n  \"120\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.05556},\n  \"122\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.04398, \"skew\": 0.05556},\n  \"915\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.08334},\n  \"916\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.16667},\n  \"920\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"923\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.16667},\n  \"926\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.07569, \"skew\": 0.08334},\n  \"928\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.08125, \"skew\": 0.05556},\n  \"931\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05764, \"skew\": 0.08334},\n  \"933\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.13889, \"skew\": 0.05556},\n  \"934\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.0, \"skew\": 0.08334},\n  \"936\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.11, \"skew\": 0.05556},\n  \"937\": {\"depth\": 0.0, \"height\": 0.68333, \"italic\": 0.05017, \"skew\": 0.08334},\n  \"945\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0037, \"skew\": 0.02778},\n  \"946\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.05278, \"skew\": 0.08334},\n  \"947\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.05556, \"skew\": 0.0},\n  \"948\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.03785, \"skew\": 0.05556},\n  \"949\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"950\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.07378, \"skew\": 0.08334},\n  \"951\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.05556},\n  \"952\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.02778, \"skew\": 0.08334},\n  \"953\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"954\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"955\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"956\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.02778},\n  \"957\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.06366, \"skew\": 0.02778},\n  \"958\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.04601, \"skew\": 0.11111},\n  \"959\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"960\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"961\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"962\": {\"depth\": 0.09722, \"height\": 0.43056, \"italic\": 0.07986, \"skew\": 0.08334},\n  \"963\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"964\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.1132, \"skew\": 0.02778},\n  \"965\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.02778},\n  \"966\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"967\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556},\n  \"968\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.03588, \"skew\": 0.11111},\n  \"969\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.03588, \"skew\": 0.0},\n  \"977\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.08334},\n  \"981\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.08334},\n  \"982\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.02778, \"skew\": 0.0},\n  \"1009\": {\"depth\": 0.19444, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.08334},\n  \"1013\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.05556}\n},\n\"SansSerif-Regular\": {\n  \"33\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"35\": {\"depth\": 0.19444, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"36\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"37\": {\"depth\": 0.05556, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"43\": {\"depth\": 0.08333, \"height\": 0.58333, \"italic\": 0.0, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.125, \"height\": 0.08333, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.08333, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.0, \"height\": 0.65556, \"italic\": 0.0, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.125, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.13, \"height\": 0.37, \"italic\": 0.0, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"64\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.125, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.025, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.25, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"95\": {\"depth\": 0.35, \"height\": 0.09444, \"italic\": 0.02778, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.06944, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.67937, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.19444, \"height\": 0.67937, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.57143, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.01389, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"126\": {\"depth\": 0.35, \"height\": 0.32659, \"italic\": 0.0, \"skew\": 0.0},\n  \"305\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"567\": {\"depth\": 0.19444, \"height\": 0.44444, \"italic\": 0.0, \"skew\": 0.0},\n  \"768\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"769\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.67659, \"italic\": 0.0, \"skew\": 0.0},\n  \"772\": {\"depth\": 0.0, \"height\": 0.60889, \"italic\": 0.0, \"skew\": 0.0},\n  \"774\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"775\": {\"depth\": 0.0, \"height\": 0.67937, \"italic\": 0.0, \"skew\": 0.0},\n  \"776\": {\"depth\": 0.0, \"height\": 0.67937, \"italic\": 0.0, \"skew\": 0.0},\n  \"778\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"779\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"780\": {\"depth\": 0.0, \"height\": 0.63194, \"italic\": 0.0, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8211\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.02778, \"skew\": 0.0},\n  \"8212\": {\"depth\": 0.0, \"height\": 0.44444, \"italic\": 0.02778, \"skew\": 0.0},\n  \"8216\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8217\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8220\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"8221\": {\"depth\": 0.0, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Script-Regular\": {\n  \"65\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.22925, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.04087, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.1689, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.09371, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.18583, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.13634, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.17322, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.29694, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.19189, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.27778, \"height\": 0.7, \"italic\": 0.19189, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.31259, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.19189, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.15981, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.3525, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.08078, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.08078, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.03305, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.06259, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.19189, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.29087, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.25815, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.27523, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.27523, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.26006, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.2939, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.7, \"italic\": 0.24037, \"skew\": 0.0}\n},\n\"Size1-Regular\": {\n  \"40\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.72222, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.72222, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.72222, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.72222, \"italic\": 0.0, \"skew\": 0.0},\n  \"8214\": {\"depth\": -0.00099, \"height\": 0.601, \"italic\": 0.0, \"skew\": 0.0},\n  \"8593\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"8595\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"8657\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"8659\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"8719\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8720\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8721\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"8739\": {\"depth\": -0.00599, \"height\": 0.606, \"italic\": 0.0, \"skew\": 0.0},\n  \"8741\": {\"depth\": -0.00599, \"height\": 0.606, \"italic\": 0.0, \"skew\": 0.0},\n  \"8747\": {\"depth\": 0.30612, \"height\": 0.805, \"italic\": 0.19445, \"skew\": 0.0},\n  \"8748\": {\"depth\": 0.306, \"height\": 0.805, \"italic\": 0.19445, \"skew\": 0.0},\n  \"8749\": {\"depth\": 0.306, \"height\": 0.805, \"italic\": 0.19445, \"skew\": 0.0},\n  \"8750\": {\"depth\": 0.30612, \"height\": 0.805, \"italic\": 0.19445, \"skew\": 0.0},\n  \"8896\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8897\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8898\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8899\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8968\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"9168\": {\"depth\": -0.00099, \"height\": 0.601, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 0.35001, \"height\": 0.85, \"italic\": 0.0, \"skew\": 0.0},\n  \"10752\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10753\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10754\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10756\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10758\": {\"depth\": 0.25001, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Size2-Regular\": {\n  \"40\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8719\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8720\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8721\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"8747\": {\"depth\": 0.86225, \"height\": 1.36, \"italic\": 0.44445, \"skew\": 0.0},\n  \"8748\": {\"depth\": 0.862, \"height\": 1.36, \"italic\": 0.44445, \"skew\": 0.0},\n  \"8749\": {\"depth\": 0.862, \"height\": 1.36, \"italic\": 0.44445, \"skew\": 0.0},\n  \"8750\": {\"depth\": 0.86225, \"height\": 1.36, \"italic\": 0.44445, \"skew\": 0.0},\n  \"8896\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8897\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8898\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8899\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"8968\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"10752\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"10753\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"10754\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"10756\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0},\n  \"10758\": {\"depth\": 0.55001, \"height\": 1.05, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Size3-Regular\": {\n  \"40\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"8968\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 0.95003, \"height\": 1.45, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Size4-Regular\": {\n  \"40\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"710\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"732\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.825, \"italic\": 0.0, \"skew\": 0.0},\n  \"8730\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8968\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8969\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8970\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"8971\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"9115\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9116\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"9117\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9118\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9119\": {\"depth\": 1e-05, \"height\": 0.6, \"italic\": 0.0, \"skew\": 0.0},\n  \"9120\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9121\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9122\": {\"depth\": -0.00099, \"height\": 0.601, \"italic\": 0.0, \"skew\": 0.0},\n  \"9123\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9124\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9125\": {\"depth\": -0.00099, \"height\": 0.601, \"italic\": 0.0, \"skew\": 0.0},\n  \"9126\": {\"depth\": 0.64502, \"height\": 1.155, \"italic\": 0.0, \"skew\": 0.0},\n  \"9127\": {\"depth\": 1e-05, \"height\": 0.9, \"italic\": 0.0, \"skew\": 0.0},\n  \"9128\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"9129\": {\"depth\": 0.90001, \"height\": 0.0, \"italic\": 0.0, \"skew\": 0.0},\n  \"9130\": {\"depth\": 0.0, \"height\": 0.3, \"italic\": 0.0, \"skew\": 0.0},\n  \"9131\": {\"depth\": 1e-05, \"height\": 0.9, \"italic\": 0.0, \"skew\": 0.0},\n  \"9132\": {\"depth\": 0.65002, \"height\": 1.15, \"italic\": 0.0, \"skew\": 0.0},\n  \"9133\": {\"depth\": 0.90001, \"height\": 0.0, \"italic\": 0.0, \"skew\": 0.0},\n  \"9143\": {\"depth\": 0.88502, \"height\": 0.915, \"italic\": 0.0, \"skew\": 0.0},\n  \"10216\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"10217\": {\"depth\": 1.25003, \"height\": 1.75, \"italic\": 0.0, \"skew\": 0.0},\n  \"57344\": {\"depth\": -0.00499, \"height\": 0.605, \"italic\": 0.0, \"skew\": 0.0},\n  \"57345\": {\"depth\": -0.00499, \"height\": 0.605, \"italic\": 0.0, \"skew\": 0.0},\n  \"57680\": {\"depth\": 0.0, \"height\": 0.12, \"italic\": 0.0, \"skew\": 0.0},\n  \"57681\": {\"depth\": 0.0, \"height\": 0.12, \"italic\": 0.0, \"skew\": 0.0},\n  \"57682\": {\"depth\": 0.0, \"height\": 0.12, \"italic\": 0.0, \"skew\": 0.0},\n  \"57683\": {\"depth\": 0.0, \"height\": 0.12, \"italic\": 0.0, \"skew\": 0.0}\n},\n\"Typewriter-Regular\": {\n  \"33\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"34\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"35\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"36\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"37\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"38\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"39\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"40\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"41\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"42\": {\"depth\": 0.0, \"height\": 0.52083, \"italic\": 0.0, \"skew\": 0.0},\n  \"43\": {\"depth\": -0.08056, \"height\": 0.53055, \"italic\": 0.0, \"skew\": 0.0},\n  \"44\": {\"depth\": 0.13889, \"height\": 0.125, \"italic\": 0.0, \"skew\": 0.0},\n  \"45\": {\"depth\": -0.08056, \"height\": 0.53055, \"italic\": 0.0, \"skew\": 0.0},\n  \"46\": {\"depth\": 0.0, \"height\": 0.125, \"italic\": 0.0, \"skew\": 0.0},\n  \"47\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"48\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"49\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"50\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"51\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"52\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"53\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"54\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"55\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"56\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"57\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"58\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"59\": {\"depth\": 0.13889, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"60\": {\"depth\": -0.05556, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"61\": {\"depth\": -0.19549, \"height\": 0.41562, \"italic\": 0.0, \"skew\": 0.0},\n  \"62\": {\"depth\": -0.05556, \"height\": 0.55556, \"italic\": 0.0, \"skew\": 0.0},\n  \"63\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"64\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"65\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"66\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"67\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"68\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"69\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"70\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"71\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"72\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"73\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"74\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"75\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"76\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"77\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"78\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"79\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"80\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"81\": {\"depth\": 0.13889, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"82\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"83\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"84\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"85\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"86\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"87\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"88\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"89\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"90\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"91\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"92\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"93\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"94\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"95\": {\"depth\": 0.09514, \"height\": 0.0, \"italic\": 0.0, \"skew\": 0.0},\n  \"96\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"97\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"98\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"99\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"100\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"101\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"102\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"103\": {\"depth\": 0.22222, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"104\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"105\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"106\": {\"depth\": 0.22222, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"107\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"108\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"109\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"110\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"111\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"112\": {\"depth\": 0.22222, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"113\": {\"depth\": 0.22222, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"114\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"115\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"116\": {\"depth\": 0.0, \"height\": 0.55358, \"italic\": 0.0, \"skew\": 0.0},\n  \"117\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"118\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"119\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"120\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"121\": {\"depth\": 0.22222, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"122\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"123\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"124\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"125\": {\"depth\": 0.08333, \"height\": 0.69444, \"italic\": 0.0, \"skew\": 0.0},\n  \"126\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"127\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"305\": {\"depth\": 0.0, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"567\": {\"depth\": 0.22222, \"height\": 0.43056, \"italic\": 0.0, \"skew\": 0.0},\n  \"768\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"769\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"770\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"771\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"772\": {\"depth\": 0.0, \"height\": 0.56555, \"italic\": 0.0, \"skew\": 0.0},\n  \"774\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"776\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"778\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"780\": {\"depth\": 0.0, \"height\": 0.56597, \"italic\": 0.0, \"skew\": 0.0},\n  \"915\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"916\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"920\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"923\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"926\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"928\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"931\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"933\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"934\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"936\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"937\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"2018\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"2019\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0},\n  \"8242\": {\"depth\": 0.0, \"height\": 0.61111, \"italic\": 0.0, \"skew\": 0.0}\n}};\n",
    "var utils = require(\"./utils\");\nvar ParseError = require(\"./ParseError\");\n\n// This file contains a list of functions that we parse. The functions map\n// contains the following data:\n\n/*\n * Keys are the name of the functions to parse\n * The data contains the following keys:\n *  - numArgs: The number of arguments the function takes.\n *  - argTypes: (optional) An array corresponding to each argument of the\n *              function, giving the type of argument that should be parsed. Its\n *              length should be equal to `numArgs + numOptionalArgs`. Valid\n *              types:\n *               - \"size\": A size-like thing, such as \"1em\" or \"5ex\"\n *               - \"color\": An html color, like \"#abc\" or \"blue\"\n *               - \"original\": The same type as the environment that the\n *                             function being parsed is in (e.g. used for the\n *                             bodies of functions like \\color where the first\n *                             argument is special and the second argument is\n *                             parsed normally)\n *              Other possible types (probably shouldn't be used)\n *               - \"text\": Text-like (e.g. \\text)\n *               - \"math\": Normal math\n *              If undefined, this will be treated as an appropriate length\n *              array of \"original\" strings\n *  - greediness: (optional) The greediness of the function to use ungrouped\n *                arguments.\n *\n *                E.g. if you have an expression\n *                  \\sqrt \\frac 1 2\n *                since \\frac has greediness=2 vs \\sqrt's greediness=1, \\frac\n *                will use the two arguments '1' and '2' as its two arguments,\n *                then that whole function will be used as the argument to\n *                \\sqrt. On the other hand, the expressions\n *                  \\frac \\frac 1 2 3\n *                and\n *                  \\frac \\sqrt 1 2\n *                will fail because \\frac and \\frac have equal greediness\n *                and \\sqrt has a lower greediness than \\frac respectively. To\n *                make these parse, we would have to change them to:\n *                  \\frac {\\frac 1 2} 3\n *                and\n *                  \\frac {\\sqrt 1} 2\n *\n *                The default value is `1`\n *  - allowedInText: (optional) Whether or not the function is allowed inside\n *                   text mode (default false)\n *  - numOptionalArgs: (optional) The number of optional arguments the function\n *                     should parse. If the optional arguments aren't found,\n *                     `null` will be passed to the handler in their place.\n *                     (default 0)\n *  - handler: The function that is called to handle this function and its\n *             arguments. The arguments are:\n *              - func: the text of the function\n *              - [args]: the next arguments are the arguments to the function,\n *                        of which there are numArgs of them\n *              - positions: the positions in the overall string of the function\n *                           and the arguments. Should only be used to produce\n *                           error messages\n *             The function should return an object with the following keys:\n *              - type: The type of element that this is. This is then used in\n *                      buildHTML/buildMathML to determine which function\n *                      should be called to build this node into a DOM node\n *             Any other data can be added to the object, which will be passed\n *             in to the function in buildHTML/buildMathML as `group.value`.\n */\n\nvar functions = {\n    // A normal square root\n    \"\\\\sqrt\": {\n        numArgs: 1,\n        numOptionalArgs: 1,\n        handler: function(func, index, body, positions) {\n            return {\n                type: \"sqrt\",\n                body: body,\n                index: index\n            };\n        }\n    },\n\n    // Some non-mathy text\n    \"\\\\text\": {\n        numArgs: 1,\n        argTypes: [\"text\"],\n        greediness: 2,\n        handler: function(func, body) {\n            // Since the corresponding buildHTML/buildMathML function expects a\n            // list of elements, we normalize for different kinds of arguments\n            // TODO(emily): maybe this should be done somewhere else\n            var inner;\n            if (body.type === \"ordgroup\") {\n                inner = body.value;\n            } else {\n                inner = [body];\n            }\n\n            return {\n                type: \"text\",\n                body: inner\n            };\n        }\n    },\n\n    // A two-argument custom color\n    \"\\\\color\": {\n        numArgs: 2,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"original\"],\n        handler: function(func, color, body) {\n            // Normalize the different kinds of bodies (see \\text above)\n            var inner;\n            if (body.type === \"ordgroup\") {\n                inner = body.value;\n            } else {\n                inner = [body];\n            }\n\n            return {\n                type: \"color\",\n                color: color.value,\n                value: inner\n            };\n        }\n    },\n\n    // An overline\n    \"\\\\overline\": {\n        numArgs: 1,\n        handler: function(func, body) {\n            return {\n                type: \"overline\",\n                body: body\n            };\n        }\n    },\n\n    // A box of the width and height\n    \"\\\\rule\": {\n        numArgs: 2,\n        numOptionalArgs: 1,\n        argTypes: [\"size\", \"size\", \"size\"],\n        handler: function(func, shift, width, height) {\n            return {\n                type: \"rule\",\n                shift: shift && shift.value,\n                width: width.value,\n                height: height.value\n            };\n        }\n    },\n\n    // A KaTeX logo\n    \"\\\\KaTeX\": {\n        numArgs: 0,\n        handler: function(func) {\n            return {\n                type: \"katex\"\n            };\n        }\n    },\n\n    \"\\\\phantom\": {\n        numArgs: 1,\n        handler: function(func, body) {\n            var inner;\n            if (body.type === \"ordgroup\") {\n                inner = body.value;\n            } else {\n                inner = [body];\n            }\n\n            return {\n                type: \"phantom\",\n                value: inner\n            };\n        }\n    }\n};\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\" : {type: \"open\",    size: 1},\n    \"\\\\Bigl\" : {type: \"open\",    size: 2},\n    \"\\\\biggl\": {type: \"open\",    size: 3},\n    \"\\\\Biggl\": {type: \"open\",    size: 4},\n    \"\\\\bigr\" : {type: \"close\",   size: 1},\n    \"\\\\Bigr\" : {type: \"close\",   size: 2},\n    \"\\\\biggr\": {type: \"close\",   size: 3},\n    \"\\\\Biggr\": {type: \"close\",   size: 4},\n    \"\\\\bigm\" : {type: \"rel\",     size: 1},\n    \"\\\\Bigm\" : {type: \"rel\",     size: 2},\n    \"\\\\biggm\": {type: \"rel\",     size: 3},\n    \"\\\\Biggm\": {type: \"rel\",     size: 4},\n    \"\\\\big\"  : {type: \"textord\", size: 1},\n    \"\\\\Big\"  : {type: \"textord\", size: 2},\n    \"\\\\bigg\" : {type: \"textord\", size: 3},\n    \"\\\\Bigg\" : {type: \"textord\", size: 4}\n};\n\nvar delimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n    \"/\", \"\\\\backslash\",\n    \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\",\n    \"\\\\uparrow\", \"\\\\Uparrow\",\n    \"\\\\downarrow\", \"\\\\Downarrow\",\n    \"\\\\updownarrow\", \"\\\\Updownarrow\",\n    \".\"\n];\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\"\n};\n\n/*\n * This is a list of functions which each have the same function but have\n * different names so that we don't have to duplicate the data a bunch of times.\n * Each element in the list is an object with the following keys:\n *  - funcs: A list of function names to be associated with the data\n *  - data: An objecty with the same data as in each value of the `function`\n *          table above\n */\nvar duplicatedFunctions = [\n    // Single-argument color functions\n    {\n        funcs: [\n            \"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\",\n            \"\\\\green\", \"\\\\gray\", \"\\\\purple\",\n            \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\",\n            \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\",\n            \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\",\n            \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\",\n            \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\",\n            \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\",\n            \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\",\n            \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\",\n            \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\",\n            \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\",\n            \"\\\\kaBlue\", \"\\\\kaGreen\"\n        ],\n        data: {\n            numArgs: 1,\n            allowedInText: true,\n            greediness: 3,\n            handler: function(func, body) {\n                var atoms;\n                if (body.type === \"ordgroup\") {\n                    atoms = body.value;\n                } else {\n                    atoms = [body];\n                }\n\n                return {\n                    type: \"color\",\n                    color: \"katex-\" + func.slice(1),\n                    value: atoms\n                };\n            }\n        }\n    },\n\n    // There are 2 flags for operators; whether they produce limits in\n    // displaystyle, and whether they are symbols and should grow in\n    // displaystyle. These four groups cover the four possible choices.\n\n    // No limits, not symbols\n    {\n        funcs: [\n            \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arg\", \"\\\\cos\", \"\\\\cosh\",\n            \"\\\\cot\", \"\\\\coth\", \"\\\\csc\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\",\n            \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\",\n            \"\\\\tan\",\"\\\\tanh\"\n        ],\n        data: {\n            numArgs: 0,\n            handler: function(func) {\n                return {\n                    type: \"op\",\n                    limits: false,\n                    symbol: false,\n                    body: func\n                };\n            }\n        }\n    },\n\n    // Limits, not symbols\n    {\n        funcs: [\n            \"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\",\n            \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"\n        ],\n        data: {\n            numArgs: 0,\n            handler: function(func) {\n                return {\n                    type: \"op\",\n                    limits: true,\n                    symbol: false,\n                    body: func\n                };\n            }\n        }\n    },\n\n    // No limits, symbols\n    {\n        funcs: [\n            \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\"\n        ],\n        data: {\n            numArgs: 0,\n            handler: function(func) {\n                return {\n                    type: \"op\",\n                    limits: false,\n                    symbol: true,\n                    body: func\n                };\n            }\n        }\n    },\n\n    // Limits, symbols\n    {\n        funcs: [\n            \"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\",\n            \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\",\n            \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\"\n        ],\n        data: {\n            numArgs: 0,\n            handler: function(func) {\n                return {\n                    type: \"op\",\n                    limits: true,\n                    symbol: true,\n                    body: func\n                };\n            }\n        }\n    },\n\n    // Fractions\n    {\n        funcs: [\n            \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\",\n            \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\"\n        ],\n        data: {\n            numArgs: 2,\n            greediness: 2,\n            handler: function(func, numer, denom) {\n                var hasBarLine;\n                var leftDelim = null;\n                var rightDelim = null;\n                var size = \"auto\";\n\n                switch (func) {\n                    case \"\\\\dfrac\":\n                    case \"\\\\frac\":\n                    case \"\\\\tfrac\":\n                        hasBarLine = true;\n                        break;\n                    case \"\\\\dbinom\":\n                    case \"\\\\binom\":\n                    case \"\\\\tbinom\":\n                        hasBarLine = false;\n                        leftDelim = \"(\";\n                        rightDelim = \")\";\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized genfrac command\");\n                }\n\n                switch (func) {\n                    case \"\\\\dfrac\":\n                    case \"\\\\dbinom\":\n                        size = \"display\";\n                        break;\n                    case \"\\\\tfrac\":\n                    case \"\\\\tbinom\":\n                        size = \"text\";\n                        break;\n                }\n\n                return {\n                    type: \"genfrac\",\n                    numer: numer,\n                    denom: denom,\n                    hasBarLine: hasBarLine,\n                    leftDelim: leftDelim,\n                    rightDelim: rightDelim,\n                    size: size\n                };\n            }\n        }\n    },\n\n    // Left and right overlap functions\n    {\n        funcs: [\"\\\\llap\", \"\\\\rlap\"],\n        data: {\n            numArgs: 1,\n            allowedInText: true,\n            handler: function(func, body) {\n                return {\n                    type: func.slice(1),\n                    body: body\n                };\n            }\n        }\n    },\n\n    // Delimiter functions\n    {\n        funcs: [\n            \"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\",\n            \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\",\n            \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\",\n            \"\\\\big\",  \"\\\\Big\",  \"\\\\bigg\",  \"\\\\Bigg\",\n            \"\\\\left\", \"\\\\right\"\n        ],\n        data: {\n            numArgs: 1,\n            handler: function(func, delim, positions) {\n                if (!utils.contains(delimiters, delim.value)) {\n                    throw new ParseError(\n                        \"Invalid delimiter: '\" + delim.value + \"' after '\" +\n                            func + \"'\",\n                        this.lexer, positions[1]);\n                }\n\n                // \\left and \\right are caught somewhere in Parser.js, which is\n                // why this data doesn't match what is in buildHTML.\n                if (func === \"\\\\left\" || func === \"\\\\right\") {\n                    return {\n                        type: \"leftright\",\n                        value: delim.value\n                    };\n                } else {\n                    return {\n                        type: \"delimsizing\",\n                        size: delimiterSizes[func].size,\n                        delimType: delimiterSizes[func].type,\n                        value: delim.value\n                    };\n                }\n            }\n        }\n    },\n\n    // Sizing functions (handled in Parser.js explicitly, hence no handler)\n    {\n        funcs: [\n            \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\",\n            \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"\n        ],\n        data: {\n            numArgs: 0\n        }\n    },\n\n    // Style changing functions (handled in Parser.js explicitly, hence no\n    // handler)\n    {\n        funcs: [\n            \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\",\n            \"\\\\scriptscriptstyle\"\n        ],\n        data: {\n            numArgs: 0\n        }\n    },\n\n    {\n        funcs: [\n            // styles\n            \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n            // families\n            \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\",\n            \"\\\\mathtt\",\n\n            // aliases\n            \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"\n        ],\n        data: {\n            numArgs: 1,\n            handler: function (func, body) {\n                if (func in fontAliases) {\n                    func = fontAliases[func];\n                }\n                return {\n                    type: \"font\",\n                    font: func.slice(1),\n                    body: body\n                };\n            }\n        }\n    },\n\n    // Accents\n    {\n        funcs: [\n            \"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\",\n            \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\"\n            // We don't support expanding accents yet\n            // \"\\\\widetilde\", \"\\\\widehat\"\n        ],\n        data: {\n            numArgs: 1,\n            handler: function(func, base) {\n                return {\n                    type: \"accent\",\n                    accent: func,\n                    base: base\n                };\n            }\n        }\n    },\n\n    // Infix generalized fractions\n    {\n        funcs: [\"\\\\over\", \"\\\\choose\"],\n        data: {\n            numArgs: 0,\n            handler: function (func) {\n                var replaceWith;\n                switch (func) {\n                    case \"\\\\over\":\n                        replaceWith = \"\\\\frac\";\n                        break;\n                    case \"\\\\choose\":\n                        replaceWith = \"\\\\binom\";\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized infix genfrac command\");\n                }\n                return {\n                    type: \"infix\",\n                    replaceWith: replaceWith\n                };\n            }\n        }\n    },\n\n    // Row breaks for aligned data\n    {\n        funcs: [\"\\\\\\\\\", \"\\\\cr\"],\n        data: {\n            numArgs: 0,\n            numOptionalArgs: 1,\n            argTypes: [\"size\"],\n            handler: function(func, size) {\n                return {\n                    type: \"cr\",\n                    size: size\n                };\n            }\n        }\n    },\n\n    // Environment delimiters\n    {\n        funcs: [\"\\\\begin\", \"\\\\end\"],\n        data: {\n            numArgs: 1,\n            argTypes: [\"text\"],\n            handler: function(func, nameGroup, positions) {\n                if (nameGroup.type !== \"ordgroup\") {\n                    throw new ParseError(\n                        \"Invalid environment name\",\n                        this.lexer, positions[1]);\n                }\n                var name = \"\";\n                for (var i = 0; i < nameGroup.value.length; ++i) {\n                    name += nameGroup.value[i].value;\n                }\n                return {\n                    type: \"environment\",\n                    name: name,\n                    namepos: positions[1]\n                };\n            }\n        }\n    }\n];\n\nvar addFuncsWithData = function(funcs, data) {\n    for (var i = 0; i < funcs.length; i++) {\n        functions[funcs[i]] = data;\n    }\n};\n\n// Add all of the functions in duplicatedFunctions to the functions map\nfor (var i = 0; i < duplicatedFunctions.length; i++) {\n    addFuncsWithData(duplicatedFunctions[i].funcs, duplicatedFunctions[i].data);\n}\n\n// Set default values of functions\nfor (var f in functions) {\n    if (functions.hasOwnProperty(f)) {\n        var func = functions[f];\n\n        functions[f] = {\n            numArgs: func.numArgs,\n            argTypes: func.argTypes,\n            greediness: (func.greediness === undefined) ? 1 : func.greediness,\n            allowedInText: func.allowedInText ? func.allowedInText : false,\n            numOptionalArgs: (func.numOptionalArgs === undefined) ? 0 :\n                func.numOptionalArgs,\n            handler: func.handler\n        };\n    }\n}\n\nmodule.exports = {\n    funcs: functions\n};\n",
    "/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nfunction MathNode(type, children) {\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n}\n\n/**\n * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n * semantic content, so this is used heavily.\n */\nMathNode.prototype.setAttribute = function(name, value) {\n    this.attributes[name] = value;\n};\n\n/**\n * Converts the math node into a MathML-namespaced DOM element.\n */\nMathNode.prototype.toNode = function() {\n    var node = document.createElementNS(\n        \"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Converts the math node into an HTML markup string.\n */\nMathNode.prototype.toMarkup = function() {\n    var markup = \"<\" + this.type;\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n\n    return markup;\n};\n\n/**\n * This node represents a piece of text.\n */\nfunction TextNode(text) {\n    this.text = text;\n}\n\n/**\n * Converts the text node into a DOM text node.\n */\nTextNode.prototype.toNode = function() {\n    return document.createTextNode(this.text);\n};\n\n/**\n * Converts the text node into HTML markup (which is just the text itself).\n */\nTextNode.prototype.toMarkup = function() {\n    return utils.escape(this.text);\n};\n\nmodule.exports = {\n    MathNode: MathNode,\n    TextNode: TextNode\n};\n",
    "/**\n * The resulting parse tree nodes of the parse tree.\n */\nfunction ParseNode(type, value, mode) {\n    this.type = type;\n    this.value = value;\n    this.mode = mode;\n}\n\n/**\n * A result and final position returned by the `.parse...` functions.\n * \n */\nfunction ParseResult(result, newPosition, peek) {\n    this.result = result;\n    this.position = newPosition;\n}\n\nmodule.exports = {\n    ParseNode: ParseNode,\n    ParseResult: ParseResult\n};\n\n",
    "/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n",
    "/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace (optional): the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nvar symbols = {\n    \"math\": {\n        // Relation Symbols\n        \"\\\\equiv\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2261\"\n        },\n        \"\\\\prec\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u227a\"\n        },\n        \"\\\\succ\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u227b\"\n        },\n        \"\\\\sim\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u223c\"\n        },\n        \"\\\\perp\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22a5\"\n        },\n        \"\\\\preceq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2aaf\"\n        },\n        \"\\\\succeq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2ab0\"\n        },\n        \"\\\\simeq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2243\"\n        },\n        \"\\\\mid\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\ll\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u226a\"\n        },\n        \"\\\\gg\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u226b\"\n        },\n        \"\\\\asymp\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u224d\"\n        },\n        \"\\\\parallel\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2225\"\n        },\n        \"\\\\bowtie\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22c8\"\n        },\n        \"\\\\smile\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2323\"\n        },\n        \"\\\\sqsubseteq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2291\"\n        },\n        \"\\\\sqsupseteq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2292\"\n        },\n        \"\\\\doteq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2250\"\n        },\n        \"\\\\frown\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2322\"\n        },\n        \"\\\\ni\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u220b\"\n        },\n        \"\\\\propto\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u221d\"\n        },\n        \"\\\\vdash\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22a2\"\n        },\n        \"\\\\dashv\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22a3\"\n        },\n        \"\\\\owns\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u220b\"\n        },\n\n        // Punctuation\n        \"\\\\ldotp\": {\n            font: \"main\",\n            group: \"punct\",\n            replace: \"\\u002e\"\n        },\n        \"\\\\cdotp\": {\n            font: \"main\",\n            group: \"punct\",\n            replace: \"\\u22c5\"\n        },\n\n        // Misc Symbols\n        \"\\\\#\": {\n          font: \"main\",\n          group: \"textord\",\n          replace: \"\\u0023\"\n        },\n        \"\\\\&\": {\n          font: \"main\",\n          group: \"textord\",\n          replace: \"\\u0026\"\n        },\n        \"\\\\aleph\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2135\"\n        },\n        \"\\\\forall\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2200\"\n        },\n        \"\\\\hbar\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u210f\"\n        },\n        \"\\\\exists\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2203\"\n        },\n        \"\\\\nabla\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2207\"\n        },\n        \"\\\\flat\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u266d\"\n        },\n        \"\\\\ell\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2113\"\n        },\n        \"\\\\natural\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u266e\"\n        },\n        \"\\\\clubsuit\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2663\"\n        },\n        \"\\\\wp\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2118\"\n        },\n        \"\\\\sharp\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u266f\"\n        },\n        \"\\\\diamondsuit\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2662\"\n        },\n        \"\\\\Re\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u211c\"\n        },\n        \"\\\\heartsuit\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2661\"\n        },\n        \"\\\\Im\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2111\"\n        },\n        \"\\\\spadesuit\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2660\"\n        },\n\n        // Math and Text\n        \"\\\\dag\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2020\"\n        },\n        \"\\\\ddag\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2021\"\n        },\n\n        // Large Delimiters\n        \"\\\\rmoustache\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u23b1\"\n        },\n        \"\\\\lmoustache\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u23b0\"\n        },\n        \"\\\\rgroup\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u27ef\"\n        },\n        \"\\\\lgroup\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u27ee\"\n        },\n\n        // Binary Operators\n        \"\\\\mp\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2213\"\n        },\n        \"\\\\ominus\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2296\"\n        },\n        \"\\\\uplus\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u228e\"\n        },\n        \"\\\\sqcap\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2293\"\n        },\n        \"\\\\ast\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2217\"\n        },\n        \"\\\\sqcup\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2294\"\n        },\n        \"\\\\bigcirc\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u25ef\"\n        },\n        \"\\\\bullet\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2219\"\n        },\n        \"\\\\ddagger\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2021\"\n        },\n        \"\\\\wr\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2240\"\n        },\n        \"\\\\amalg\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2a3f\"\n        },\n\n        // Arrow Symbols\n        \"\\\\longleftarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27f5\"\n        },\n        \"\\\\Leftarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d0\"\n        },\n        \"\\\\Longleftarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27f8\"\n        },\n        \"\\\\longrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27f6\"\n        },\n        \"\\\\Rightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d2\"\n        },\n        \"\\\\Longrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27f9\"\n        },\n        \"\\\\leftrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2194\"\n        },\n        \"\\\\longleftrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27f7\"\n        },\n        \"\\\\Leftrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d4\"\n        },\n        \"\\\\Longleftrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27fa\"\n        },\n        \"\\\\mapsto\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21a6\"\n        },\n        \"\\\\longmapsto\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u27fc\"\n        },\n        \"\\\\nearrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2197\"\n        },\n        \"\\\\hookleftarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21a9\"\n        },\n        \"\\\\hookrightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21aa\"\n        },\n        \"\\\\searrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2198\"\n        },\n        \"\\\\leftharpoonup\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21bc\"\n        },\n        \"\\\\rightharpoonup\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21c0\"\n        },\n        \"\\\\swarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2199\"\n        },\n        \"\\\\leftharpoondown\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21bd\"\n        },\n        \"\\\\rightharpoondown\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21c1\"\n        },\n        \"\\\\nwarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2196\"\n        },\n        \"\\\\rightleftharpoons\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21cc\"\n        },\n\n        // AMS Negated Binary Relations\n        \"\\\\nless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u226e\"\n        },\n        \"\\\\nleqslant\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue010\"\n        },\n        \"\\\\nleqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue011\"\n        },\n        \"\\\\lneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a87\"\n        },\n        \"\\\\lneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2268\"\n        },\n        \"\\\\lvertneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue00c\"\n        },\n        \"\\\\lnsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e6\"\n        },\n        \"\\\\lnapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a89\"\n        },\n        \"\\\\nprec\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2280\"\n        },\n        \"\\\\npreceq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e0\"\n        },\n        \"\\\\precnsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e8\"\n        },\n        \"\\\\precnapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ab9\"\n        },\n        \"\\\\nsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2241\"\n        },\n        \"\\\\nshortmid\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue006\"\n        },\n        \"\\\\nmid\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2224\"\n        },\n        \"\\\\nvdash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ac\"\n        },\n        \"\\\\nvDash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ad\"\n        },\n        \"\\\\ntriangleleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ea\"\n        },\n        \"\\\\ntrianglelefteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ec\"\n        },\n        \"\\\\subsetneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u228a\"\n        },\n        \"\\\\varsubsetneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue01a\"\n        },\n        \"\\\\subsetneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2acb\"\n        },\n        \"\\\\varsubsetneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue017\"\n        },\n        \"\\\\ngtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u226f\"\n        },\n        \"\\\\ngeqslant\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue00f\"\n        },\n        \"\\\\ngeqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue00e\"\n        },\n        \"\\\\gneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a88\"\n        },\n        \"\\\\gneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2269\"\n        },\n        \"\\\\gvertneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue00d\"\n        },\n        \"\\\\gnsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e7\"\n        },\n        \"\\\\gnapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a8a\"\n        },\n        \"\\\\nsucc\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2281\"\n        },\n        \"\\\\nsucceq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e1\"\n        },\n        \"\\\\succnsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22e9\"\n        },\n        \"\\\\succnapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2aba\"\n        },\n        \"\\\\ncong\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2246\"\n        },\n        \"\\\\nshortparallel\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue007\"\n        },\n        \"\\\\nparallel\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2226\"\n        },\n        \"\\\\nVDash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22af\"\n        },\n        \"\\\\ntriangleright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22eb\"\n        },\n        \"\\\\ntrianglerighteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ed\"\n        },\n        \"\\\\nsupseteqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue018\"\n        },\n        \"\\\\supsetneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u228b\"\n        },\n        \"\\\\varsupsetneq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue01b\"\n        },\n        \"\\\\supsetneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2acc\"\n        },\n        \"\\\\varsupsetneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue019\"\n        },\n        \"\\\\nVdash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22ae\"\n        },\n        \"\\\\precneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ab5\"\n        },\n        \"\\\\succneqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ab6\"\n        },\n        \"\\\\nsubseteqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\ue016\"\n        },\n        \"\\\\unlhd\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22b4\"\n        },\n        \"\\\\unrhd\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22b5\"\n        },\n\n        // AMS Negated Arrows\n         \"\\\\nleftarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u219a\"\n        },\n        \"\\\\nrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u219b\"\n        },\n        \"\\\\nLeftarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21cd\"\n        },\n        \"\\\\nRightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21cf\"\n        },\n        \"\\\\nleftrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ae\"\n        },\n        \"\\\\nLeftrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ce\"\n        },\n\n        // AMS Misc\n        \"\\\\vartriangle\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u25b3\"\n        },\n        \"\\\\hslash\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u210f\"\n        },\n        \"\\\\triangledown\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25bd\"\n        },\n        \"\\\\lozenge\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25ca\"\n        },\n        \"\\\\circledS\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u24c8\"\n        },\n        \"\\\\circledR\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u00ae\"\n        },\n        \"\\\\measuredangle\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2221\"\n        },\n        \"\\\\nexists\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2204\"\n        },\n        \"\\\\mho\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2127\"\n        },\n        \"\\\\Finv\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2132\"\n        },\n        \"\\\\Game\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2141\"\n        },\n        \"\\\\Bbbk\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u006b\"\n        },\n        \"\\\\backprime\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2035\"\n        },\n        \"\\\\blacktriangle\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25b2\"\n        },\n        \"\\\\blacktriangledown\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25bc\"\n        },\n        \"\\\\blacksquare\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25a0\"\n        },\n        \"\\\\blacklozenge\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u29eb\"\n        },\n        \"\\\\bigstar\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2605\"\n        },\n        \"\\\\sphericalangle\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2222\"\n        },\n        \"\\\\complement\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2201\"\n        },\n        \"\\\\eth\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u00f0\"\n        },\n        \"\\\\diagup\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2571\"\n        },\n        \"\\\\diagdown\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2572\"\n        },\n        \"\\\\square\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25a1\"\n        },\n        \"\\\\Box\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25a1\"\n        },\n        \"\\\\Diamond\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u25ca\"\n        },\n        \"\\\\yen\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u00a5\"\n        },\n        \"\\\\checkmark\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2713\"\n        },\n\n        // AMS Hebrew\n        \"\\\\beth\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2136\"\n        },\n        \"\\\\daleth\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2138\"\n        },\n        \"\\\\gimel\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2137\"\n        },\n\n        // AMS Greek\n        \"\\\\digamma\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u03dd\"\n        },\n        \"\\\\varkappa\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u03f0\"\n        },\n\n        // AMS Delimiters\n        \"\\\\ulcorner\": {\n            font: \"ams\",\n            group: \"open\",\n            replace: \"\\u250c\"\n        },\n        \"\\\\urcorner\": {\n            font: \"ams\",\n            group: \"close\",\n            replace: \"\\u2510\"\n        },\n        \"\\\\llcorner\": {\n            font: \"ams\",\n            group: \"open\",\n            replace: \"\\u2514\"\n        },\n        \"\\\\lrcorner\": {\n            font: \"ams\",\n            group: \"close\",\n            replace: \"\\u2518\"\n        },\n\n        // AMS Binary Relations\n        \"\\\\leqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2266\"\n        },\n        \"\\\\leqslant\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a7d\"\n        },\n        \"\\\\eqslantless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a95\"\n        },\n        \"\\\\lesssim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2272\"\n        },\n        \"\\\\lessapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a85\"\n        },\n        \"\\\\approxeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u224a\"\n        },\n        \"\\\\lessdot\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d6\"\n        },\n        \"\\\\lll\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d8\"\n        },\n        \"\\\\lessgtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2276\"\n        },\n        \"\\\\lesseqgtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22da\"\n        },\n        \"\\\\lesseqqgtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a8b\"\n        },\n        \"\\\\doteqdot\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2251\"\n        },\n        \"\\\\risingdotseq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2253\"\n        },\n        \"\\\\fallingdotseq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2252\"\n        },\n        \"\\\\backsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u223d\"\n        },\n        \"\\\\backsimeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22cd\"\n        },\n        \"\\\\subseteqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ac5\"\n        },\n        \"\\\\Subset\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d0\"\n        },\n        \"\\\\sqsubset\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u228f\"\n        },\n        \"\\\\preccurlyeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u227c\"\n        },\n        \"\\\\curlyeqprec\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22de\"\n        },\n        \"\\\\precsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u227e\"\n        },\n        \"\\\\precapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ab7\"\n        },\n        \"\\\\vartriangleleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22b2\"\n        },\n        \"\\\\trianglelefteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22b4\"\n        },\n        \"\\\\vDash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22a8\"\n        },\n        \"\\\\Vvdash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22aa\"\n        },\n        \"\\\\smallsmile\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2323\"\n        },\n        \"\\\\smallfrown\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2322\"\n        },\n        \"\\\\bumpeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u224f\"\n        },\n        \"\\\\Bumpeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u224e\"\n        },\n        \"\\\\geqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2267\"\n        },\n        \"\\\\geqslant\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a7e\"\n        },\n        \"\\\\eqslantgtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a96\"\n        },\n        \"\\\\gtrsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2273\"\n        },\n        \"\\\\gtrapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a86\"\n        },\n        \"\\\\gtrdot\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d7\"\n        },\n        \"\\\\ggg\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d9\"\n        },\n        \"\\\\gtrless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2277\"\n        },\n        \"\\\\gtreqless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22db\"\n        },\n        \"\\\\gtreqqless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2a8c\"\n        },\n        \"\\\\eqcirc\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2256\"\n        },\n        \"\\\\circeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2257\"\n        },\n        \"\\\\triangleq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u225c\"\n        },\n        \"\\\\thicksim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u223c\"\n        },\n        \"\\\\thickapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2248\"\n        },\n        \"\\\\supseteqq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ac6\"\n        },\n        \"\\\\Supset\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d1\"\n        },\n        \"\\\\sqsupset\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2290\"\n        },\n        \"\\\\succcurlyeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u227d\"\n        },\n        \"\\\\curlyeqsucc\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22df\"\n        },\n        \"\\\\succsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u227f\"\n        },\n        \"\\\\succapprox\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2ab8\"\n        },\n        \"\\\\vartriangleright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22b3\"\n        },\n        \"\\\\trianglerighteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22b5\"\n        },\n        \"\\\\Vdash\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22a9\"\n        },\n        \"\\\\shortmid\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\shortparallel\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2225\"\n        },\n        \"\\\\between\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u226c\"\n        },\n        \"\\\\pitchfork\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d4\"\n        },\n        \"\\\\varpropto\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u221d\"\n        },\n        \"\\\\blacktriangleleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u25c0\"\n        },\n        \"\\\\therefore\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2234\"\n        },\n        \"\\\\backepsilon\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u220d\"\n        },\n        \"\\\\blacktriangleright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u25b6\"\n        },\n        \"\\\\because\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2235\"\n        },\n        \"\\\\llless\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d8\"\n        },\n        \"\\\\gggtr\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22d9\"\n        },\n        \"\\\\lhd\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22b2\"\n        },\n        \"\\\\rhd\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22b3\"\n        },\n        \"\\\\eqsim\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2242\"\n        },\n        \"\\\\Join\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22c8\"\n        },\n        \"\\\\Doteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2251\"\n        },\n\n        // AMS Binary Operators\n        \"\\\\dotplus\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u2214\"\n        },\n        \"\\\\smallsetminus\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u2216\"\n        },\n        \"\\\\Cap\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d2\"\n        },\n        \"\\\\Cup\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d3\"\n        },\n        \"\\\\doublebarwedge\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u2a5e\"\n        },\n        \"\\\\boxminus\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u229f\"\n        },\n        \"\\\\boxplus\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u229e\"\n        },\n        \"\\\\divideontimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22c7\"\n        },\n        \"\\\\ltimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22c9\"\n        },\n        \"\\\\rtimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22ca\"\n        },\n        \"\\\\leftthreetimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22cb\"\n        },\n        \"\\\\rightthreetimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22cc\"\n        },\n        \"\\\\curlywedge\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22cf\"\n        },\n        \"\\\\curlyvee\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22ce\"\n        },\n        \"\\\\circleddash\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u229d\"\n        },\n        \"\\\\circledast\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u229b\"\n        },\n        \"\\\\centerdot\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22c5\"\n        },\n        \"\\\\intercal\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22ba\"\n        },\n        \"\\\\doublecap\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d2\"\n        },\n        \"\\\\doublecup\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22d3\"\n        },\n        \"\\\\boxtimes\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22a0\"\n        },\n\n        // AMS Arrows\n        \"\\\\dashrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21e2\"\n        },\n        \"\\\\dashleftarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21e0\"\n        },\n        \"\\\\leftleftarrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c7\"\n        },\n        \"\\\\leftrightarrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c6\"\n        },\n        \"\\\\Lleftarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21da\"\n        },\n        \"\\\\twoheadleftarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u219e\"\n        },\n        \"\\\\leftarrowtail\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21a2\"\n        },\n        \"\\\\looparrowleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ab\"\n        },\n        \"\\\\leftrightharpoons\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21cb\"\n        },\n        \"\\\\curvearrowleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21b6\"\n        },\n        \"\\\\circlearrowleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ba\"\n        },\n        \"\\\\Lsh\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21b0\"\n        },\n        \"\\\\upuparrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c8\"\n        },\n        \"\\\\upharpoonleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21bf\"\n        },\n        \"\\\\downharpoonleft\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c3\"\n        },\n        \"\\\\multimap\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u22b8\"\n        },\n        \"\\\\leftrightsquigarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ad\"\n        },\n        \"\\\\rightrightarrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c9\"\n        },\n        \"\\\\rightleftarrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c4\"\n        },\n        \"\\\\twoheadrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21a0\"\n        },\n        \"\\\\rightarrowtail\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21a3\"\n        },\n        \"\\\\looparrowright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ac\"\n        },\n        \"\\\\curvearrowright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21b7\"\n        },\n        \"\\\\circlearrowright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21bb\"\n        },\n        \"\\\\Rsh\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21b1\"\n        },\n        \"\\\\downdownarrows\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21ca\"\n        },\n        \"\\\\upharpoonright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21be\"\n        },\n        \"\\\\downharpoonright\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21c2\"\n        },\n        \"\\\\rightsquigarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21dd\"\n        },\n        \"\\\\leadsto\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21dd\"\n        },\n        \"\\\\Rrightarrow\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21db\"\n        },\n        \"\\\\restriction\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u21be\"\n        },\n\n        \"`\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2018\"\n        },\n        \"\\\\$\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"$\"\n        },\n        \"\\\\%\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"%\"\n        },\n        \"\\\\_\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"_\"\n        },\n        \"\\\\angle\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2220\"\n        },\n        \"\\\\infty\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u221e\"\n        },\n        \"\\\\prime\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2032\"\n        },\n        \"\\\\triangle\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u25b3\"\n        },\n        \"\\\\Gamma\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u0393\"\n        },\n        \"\\\\Delta\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u0394\"\n        },\n        \"\\\\Theta\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u0398\"\n        },\n        \"\\\\Lambda\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u039b\"\n        },\n        \"\\\\Xi\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u039e\"\n        },\n        \"\\\\Pi\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a0\"\n        },\n        \"\\\\Sigma\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a3\"\n        },\n        \"\\\\Upsilon\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a5\"\n        },\n        \"\\\\Phi\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a6\"\n        },\n        \"\\\\Psi\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a8\"\n        },\n        \"\\\\Omega\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u03a9\"\n        },\n        \"\\\\neg\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u00ac\"\n        },\n        \"\\\\lnot\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u00ac\"\n        },\n        \"\\\\top\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u22a4\"\n        },\n        \"\\\\bot\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u22a5\"\n        },\n        \"\\\\emptyset\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2205\"\n        },\n        \"\\\\varnothing\": {\n            font: \"ams\",\n            group: \"textord\",\n            replace: \"\\u2205\"\n        },\n        \"\\\\alpha\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b1\"\n        },\n        \"\\\\beta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b2\"\n        },\n        \"\\\\gamma\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b3\"\n        },\n        \"\\\\delta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b4\"\n        },\n        \"\\\\epsilon\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03f5\"\n        },\n        \"\\\\zeta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b6\"\n        },\n        \"\\\\eta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b7\"\n        },\n        \"\\\\theta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b8\"\n        },\n        \"\\\\iota\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b9\"\n        },\n        \"\\\\kappa\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03ba\"\n        },\n        \"\\\\lambda\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03bb\"\n        },\n        \"\\\\mu\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03bc\"\n        },\n        \"\\\\nu\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03bd\"\n        },\n        \"\\\\xi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03be\"\n        },\n        \"\\\\omicron\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"o\"\n        },\n        \"\\\\pi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c0\"\n        },\n        \"\\\\rho\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c1\"\n        },\n        \"\\\\sigma\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c3\"\n        },\n        \"\\\\tau\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c4\"\n        },\n        \"\\\\upsilon\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c5\"\n        },\n        \"\\\\phi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03d5\"\n        },\n        \"\\\\chi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c7\"\n        },\n        \"\\\\psi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c8\"\n        },\n        \"\\\\omega\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c9\"\n        },\n        \"\\\\varepsilon\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03b5\"\n        },\n        \"\\\\vartheta\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03d1\"\n        },\n        \"\\\\varpi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03d6\"\n        },\n        \"\\\\varrho\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03f1\"\n        },\n        \"\\\\varsigma\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c2\"\n        },\n        \"\\\\varphi\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u03c6\"\n        },\n        \"*\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2217\"\n        },\n        \"+\": {\n            font: \"main\",\n            group: \"bin\"\n        },\n        \"-\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2212\"\n        },\n        \"\\\\cdot\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u22c5\"\n        },\n        \"\\\\circ\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2218\"\n        },\n        \"\\\\div\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u00f7\"\n        },\n        \"\\\\pm\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u00b1\"\n        },\n        \"\\\\times\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u00d7\"\n        },\n        \"\\\\cap\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2229\"\n        },\n        \"\\\\cup\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u222a\"\n        },\n        \"\\\\setminus\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2216\"\n        },\n        \"\\\\land\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2227\"\n        },\n        \"\\\\lor\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2228\"\n        },\n        \"\\\\wedge\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2227\"\n        },\n        \"\\\\vee\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2228\"\n        },\n        \"\\\\surd\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u221a\"\n        },\n        \"(\": {\n            font: \"main\",\n            group: \"open\"\n        },\n        \"[\": {\n            font: \"main\",\n            group: \"open\"\n        },\n        \"\\\\langle\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u27e8\"\n        },\n        \"\\\\lvert\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\lVert\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u2225\"\n        },\n        \")\": {\n            font: \"main\",\n            group: \"close\"\n        },\n        \"]\": {\n            font: \"main\",\n            group: \"close\"\n        },\n        \"?\": {\n            font: \"main\",\n            group: \"close\"\n        },\n        \"!\": {\n            font: \"main\",\n            group: \"close\"\n        },\n        \"\\\\rangle\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u27e9\"\n        },\n        \"\\\\rvert\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\rVert\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u2225\"\n        },\n        \"=\": {\n            font: \"main\",\n            group: \"rel\"\n        },\n        \"<\": {\n            font: \"main\",\n            group: \"rel\"\n        },\n        \">\": {\n            font: \"main\",\n            group: \"rel\"\n        },\n        \":\": {\n            font: \"main\",\n            group: \"rel\"\n        },\n        \"\\\\approx\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2248\"\n        },\n        \"\\\\cong\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2245\"\n        },\n        \"\\\\ge\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2265\"\n        },\n        \"\\\\geq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2265\"\n        },\n        \"\\\\gets\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2190\"\n        },\n        \"\\\\in\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2208\"\n        },\n        \"\\\\notin\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2209\"\n        },\n        \"\\\\subset\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2282\"\n        },\n        \"\\\\supset\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2283\"\n        },\n        \"\\\\subseteq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2286\"\n        },\n        \"\\\\supseteq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2287\"\n        },\n        \"\\\\nsubseteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2288\"\n        },\n        \"\\\\nsupseteq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2289\"\n        },\n        \"\\\\models\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u22a8\"\n        },\n        \"\\\\leftarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2190\"\n        },\n        \"\\\\le\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2264\"\n        },\n        \"\\\\leq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2264\"\n        },\n        \"\\\\ne\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2260\"\n        },\n        \"\\\\neq\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2260\"\n        },\n        \"\\\\rightarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2192\"\n        },\n        \"\\\\to\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2192\"\n        },\n        \"\\\\ngeq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2271\"\n        },\n        \"\\\\nleq\": {\n            font: \"ams\",\n            group: \"rel\",\n            replace: \"\\u2270\"\n        },\n        \"\\\\!\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\ \": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        },\n        \"~\": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        },\n        \"\\\\,\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\:\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\;\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\enspace\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\qquad\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\quad\": {\n            font: \"main\",\n            group: \"spacing\"\n        },\n        \"\\\\space\": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        },\n        \",\": {\n            font: \"main\",\n            group: \"punct\"\n        },\n        \";\": {\n            font: \"main\",\n            group: \"punct\"\n        },\n        \"\\\\colon\": {\n            font: \"main\",\n            group: \"punct\",\n            replace: \":\"\n        },\n        \"\\\\barwedge\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22bc\"\n        },\n        \"\\\\veebar\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22bb\"\n        },\n        \"\\\\odot\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2299\"\n        },\n        \"\\\\oplus\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2295\"\n        },\n        \"\\\\otimes\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2297\"\n        },\n        \"\\\\partial\":{\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2202\"\n        },\n        \"\\\\oslash\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2298\"\n        },\n        \"\\\\circledcirc\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u229a\"\n        },\n        \"\\\\boxdot\": {\n            font: \"ams\",\n            group: \"bin\",\n            replace: \"\\u22a1\"\n        },\n        \"\\\\bigtriangleup\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u25b3\"\n        },\n        \"\\\\bigtriangledown\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u25bd\"\n        },\n        \"\\\\dagger\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u2020\"\n        },\n        \"\\\\diamond\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u22c4\"\n        },\n        \"\\\\star\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u22c6\"\n        },\n        \"\\\\triangleleft\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u25c3\"\n        },\n        \"\\\\triangleright\": {\n            font: \"main\",\n            group: \"bin\",\n            replace: \"\\u25b9\"\n        },\n        \"\\\\{\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"{\"\n        },\n        \"\\\\}\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"}\"\n        },\n        \"\\\\lbrace\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"{\"\n        },\n        \"\\\\rbrace\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"}\"\n        },\n        \"\\\\lbrack\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"[\"\n        },\n        \"\\\\rbrack\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"]\"\n        },\n        \"\\\\lfloor\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u230a\"\n        },\n        \"\\\\rfloor\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u230b\"\n        },\n        \"\\\\lceil\": {\n            font: \"main\",\n            group: \"open\",\n            replace: \"\\u2308\"\n        },\n        \"\\\\rceil\": {\n            font: \"main\",\n            group: \"close\",\n            replace: \"\\u2309\"\n        },\n        \"\\\\backslash\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\\\\"\n        },\n        \"|\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\vert\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2223\"\n        },\n        \"\\\\|\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2225\"\n        },\n        \"\\\\Vert\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u2225\"\n        },\n        \"\\\\uparrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2191\"\n        },\n        \"\\\\Uparrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d1\"\n        },\n        \"\\\\downarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2193\"\n        },\n        \"\\\\Downarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d3\"\n        },\n        \"\\\\updownarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u2195\"\n        },\n        \"\\\\Updownarrow\": {\n            font: \"main\",\n            group: \"rel\",\n            replace: \"\\u21d5\"\n        },\n        \"\\\\coprod\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2210\"\n        },\n        \"\\\\bigvee\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u22c1\"\n        },\n        \"\\\\bigwedge\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u22c0\"\n        },\n        \"\\\\biguplus\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2a04\"\n        },\n        \"\\\\bigcap\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u22c2\"\n        },\n        \"\\\\bigcup\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u22c3\"\n        },\n        \"\\\\int\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222b\"\n        },\n        \"\\\\intop\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222b\"\n        },\n        \"\\\\iint\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222c\"\n        },\n        \"\\\\iiint\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222d\"\n        },\n        \"\\\\prod\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u220f\"\n        },\n        \"\\\\sum\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2211\"\n        },\n        \"\\\\bigotimes\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2a02\"\n        },\n        \"\\\\bigoplus\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2a01\"\n        },\n        \"\\\\bigodot\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2a00\"\n        },\n        \"\\\\oint\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222e\"\n        },\n        \"\\\\bigsqcup\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u2a06\"\n        },\n        \"\\\\smallint\": {\n            font: \"math\",\n            group: \"op\",\n            replace: \"\\u222b\"\n        },\n        \"\\\\ldots\": {\n            font: \"main\",\n            group: \"inner\",\n            replace: \"\\u2026\"\n        },\n        \"\\\\cdots\": {\n            font: \"main\",\n            group: \"inner\",\n            replace: \"\\u22ef\"\n        },\n        \"\\\\ddots\": {\n            font: \"main\",\n            group: \"inner\",\n            replace: \"\\u22f1\"\n        },\n        \"\\\\vdots\": {\n            font: \"main\",\n            group: \"textord\",\n            replace: \"\\u22ee\"\n        },\n        \"\\\\acute\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u00b4\"\n        },\n        \"\\\\grave\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u0060\"\n        },\n        \"\\\\ddot\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u00a8\"\n        },\n        \"\\\\tilde\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u007e\"\n        },\n        \"\\\\bar\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u00af\"\n        },\n        \"\\\\breve\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u02d8\"\n        },\n        \"\\\\check\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u02c7\"\n        },\n        \"\\\\hat\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u005e\"\n        },\n        \"\\\\vec\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u20d7\"\n        },\n        \"\\\\dot\": {\n            font: \"main\",\n            group: \"accent\",\n            replace: \"\\u02d9\"\n        },\n\n        \"\\\\imath\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u0131\"\n        },\n        \"\\\\jmath\": {\n            font: \"main\",\n            group: \"mathord\",\n            replace: \"\\u0237\"\n        }\n    },\n    \"text\": {\n        \"\\\\ \": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        },\n        \" \": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        },\n        \"~\": {\n            font: \"main\",\n            group: \"spacing\",\n            replace: \"\\u00a0\"\n        }\n    }\n};\n\n// There are lots of symbols which are the same, so we add them in afterwards.\n\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (var i = 0; i < mathTextSymbols.length; i++) {\n    var ch = mathTextSymbols.charAt(i);\n    symbols.math[ch] = {\n        font: \"main\",\n        group: \"textord\"\n    };\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789`!@*()-=+[]'\\\";:?/.,\";\nfor (var i = 0; i < textSymbols.length; i++) {\n    var ch = textSymbols.charAt(i);\n    symbols.text[ch] = {\n        font: \"main\",\n        group: \"textord\"\n    };\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfor (var i = 0; i < letters.length; i++) {\n    var ch = letters.charAt(i);\n    symbols.math[ch] = {\n        font: \"main\",\n        group: \"mathord\"\n    };\n    symbols.text[ch] = {\n        font: \"main\",\n        group: \"textord\"\n    };\n}\n\nmodule.exports = symbols;\n",
    "/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide an `indexOf` function which works in IE8, but defers to native if\n * possible.\n */\nvar nativeIndexOf = Array.prototype.indexOf;\nvar indexOf = function(list, elem) {\n    if (list == null) {\n        return -1;\n    }\n    if (nativeIndexOf && list.indexOf === nativeIndexOf) {\n        return list.indexOf(elem);\n    }\n    var i = 0, l = list.length;\n    for (; i < l; i++) {\n        if (list[i] === elem) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function(list, elem) {\n    return indexOf(list, elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n */\nvar deflt = function(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escape(text) {\n  return (\"\" + text).replace(ESCAPE_REGEX, escaper);\n}\n\n/**\n * A function to set the text content of a DOM element in all supported\n * browsers. Note that we don't define this if there is no document.\n */\nvar setTextContent;\nif (typeof document !== \"undefined\") {\n    var testNode = document.createElement(\"span\");\n    if (\"textContent\" in testNode) {\n        setTextContent = function(node, text) {\n            node.textContent = text;\n        };\n    } else {\n        setTextContent = function(node, text) {\n            node.innerText = text;\n        };\n    }\n}\n\n/**\n * A function to clear a node.\n */\nfunction clearNode(node) {\n    setTextContent(node, \"\");\n}\n\nmodule.exports = {\n    contains: contains,\n    deflt: deflt,\n    escape: escape,\n    hyphenate: hyphenate,\n    indexOf: indexOf,\n    setTextContent: setTextContent,\n    clearNode: clearNode\n};\n",
    "/**\n * kramed - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/GitbookIO/kramed\n */\n/**\n * kramed - a kramdown parser, based off chjj's kramed\n * Copyright (c) 2014, Aaron O'Mullan. (MIT Licensed)\n * https://github.com/GitbookIO/kramed\n*/\n\nvar _utils = require('./utils');\nvar merge = _utils.merge;\n\nvar Lexer = require('./lex/block');\nvar InlineLexer = require('./lex/inline');\n\nvar Parser = require('./parser');\nvar Renderer = require('./renderer');\n\n/**\n * Kramed\n */\n\nfunction kramed(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, kramed.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, kramed.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/GitbookIO/kramed.';\n    if ((opt || kramed.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nkramed.options =\nkramed.setOptions = function(opt) {\n  merge(kramed.defaults, opt);\n  return kramed;\n};\n\nkramed.defaults = {\n  // Lexer options (both block and inline lexers)\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  mathjax: true,\n\n  // Kramed options\n  silent: false,\n  highlight: null,\n\n  // Renderer options\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  headerAutoId: true,\n  xhtml: false,\n\n  // Default rendrer passed to Parser\n  renderer: new Renderer,\n};\n\n/**\n * Expose\n */\n\nkramed.Parser = Parser;\nkramed.parser = Parser.parse;\n\nkramed.Renderer = Renderer;\n\nkramed.Lexer = Lexer;\nkramed.lexer = Lexer.lex;\n\nkramed.InlineLexer = InlineLexer;\nkramed.inlineLexer = InlineLexer.output;\n\nkramed.parse = kramed;\n\nmodule.exports = kramed;\n",
    "var _utils = require('../utils');\nvar noop = _utils.noop;\n\nvar block = require('../rules/block');\nvar defaultOptions = require('./options');\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || defaultOptions;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n\n  // Is mathjax disabled ?\n  if (!this.options.mathjax) {\n    this.rules.math = noop;\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // footnote\n    if (cap = this.rules.footnote.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'footnote',\n        refname: cap[1],\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // math\n    if (cap = this.rules.math.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'math',\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules._item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block._bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n').slice(0),\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\nmodule.exports = Lexer;\n",
    "// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n// Treat these blocks as RAW HTML\nvar htmlBlocks = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'pre',\n  'script',\n  'section',\n  'source',\n  'title',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n\nvar blockMap = htmlBlocks.reduce(function(accu, x) {\n  accu[x] = true;\n  return accu;\n}, {});\n\nfunction isBlock(tag) {\n  if(!tag) {\n    return false;\n  } \n  var key = tag.toLowerCase();\n  return Boolean(blockMap[key]);\n}\n\nmodule.exports = isBlock;\n",
    "var _utils = require('../utils');\nvar escape = _utils.escape;\nvar noop = _utils.noop;\n\nvar inline = require('../rules/inline');\nvar renderer = require('../renderer');\nvar defaultOptions = require('./options');\nvar isHTMLBlock =  require('./html_blocks');\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options, renderer) {\n  this.options = options || defaultOptions;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = renderer\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n\n  // Is mathjax disabled ?\n  if (!this.options.mathjax) {\n     this.rules.math = noop;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options, new Renderer());\n  return inline.output(src);\n};\n\nInlineLexer.prototype.escape = function(html, encode) {\n  // Handle escaping being turned off\n  if(this.options && this.options.escape === false) {\n    return html;\n  }\n  return escape(html, encode);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = this.escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = this.escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      // Found a link\n      if(cap[1] === 'a' && cap[2] && !this.inLink) {\n        // Opening tag\n        out += cap[0].substring(0, cap[0].indexOf(cap[2]));\n        this.inLink = true;\n        // In between the tag\n        out += this.output(cap[2]);\n        this.inLink = false;\n        // Outer tag\n        out += cap[0].substring(cap[0].indexOf(cap[2])+cap[2].length);\n        // Advance parser\n        src = src.substring(cap[0].length);\n        continue;\n      }\n\n      // Found HTML that we should parse\n      if(cap[1] && !isHTMLBlock(cap[1]) && cap[2]) {\n        // Opening tag\n        out += cap[0].substring(0, cap[0].indexOf(cap[2]));\n        // In between the tag\n        out += this.output(cap[2]);\n        // Outer tag\n        out += cap[0].substring(cap[0].indexOf(cap[2])+cap[2].length);\n        // Advance parser\n        src = src.substring(cap[0].length);\n        continue;\n      }\n\n      // Any other HTML\n      src = src.substring(cap[0].length);\n      out += cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reffn\n    if ((cap = this.rules.reffn.exec(src))) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.reffn(cap[1]);\n        continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(this.escape(cap[2], true));\n      continue;\n    }\n\n    // math\n    if (cap = this.rules.math.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.math(cap[1], 'math/tex', false); //FIXME: filter <script> & </script>\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = this.escape(link.href)\n    , title = link.title ? this.escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, this.escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/--/g, '\\u2014')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\nmodule.exports = InlineLexer;\n",
    "module.exports = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  mathjax: true,\n};\n",
    "var Renderer = require('./renderer');\nvar InlineLexer = require('./lex/inline');\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options, renderer) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options ? options : null;\n  this.renderer = renderer || (this.options && this.options.renderer) || new Renderer(this.options);\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  if(typeof this.token === 'undefined' || !this.token.hasOwnProperty('type')) {\n      return '';\n  }\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'footnote': {\n      return this.renderer.footnote(\n        this.token.refname,\n        this.inline.output(this.token.text));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'math': {\n      return this.renderer.math(this.token.text, 'math/tex', true);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\nmodule.exports = Parser;\n",
    "var _utils = require('./utils');\nvar escape = _utils.escape;\nvar unescape = _utils.unescape;\n\n/**\n * Renderer\n */\n\nvar defaultOptions = {\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  headerAutoId: true,\n  xhtml: false,\n};\n\nfunction Renderer(options) {\n  this.options = options || defaultOptions;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype._createId = function(str) {\n  // replace \" \" and all punctuation characters to \"-\"\n  str = str.toLowerCase().replace(/[\\s\\]\\[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\\\\\^\\_\\`\\{\\|\\}\\~\\-]+/g, '-');\n  try {\n    str = encodeURIComponent(str);\n  } catch (e) {\n    str = str.replace(/[^\\w]+/g, '-');\n  }\n  return str.replace(/-$/, '');\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  var id = /({#)(.+)(})/g.exec(raw);\n  id = id? id[2] : null;\n\n  if (!id && this.options.headerAutoId !== false) id = this._createId(raw)\n\n  return '<h'\n    + level\n    + (id? ' id=\"' + id + '\"' : '')\n    + '>'\n    + text.replace(/{#.+}/g, '')\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\nRenderer.prototype.math = function(content, language, display) {\n  mode = display ? '; mode=display' : '';\n  return '<script type=\"' + language + mode + '\">' + content + '</script>';\n}\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.reffn = function(refname) {\n  return '<sup><a href=\"#fn_' + refname + '\" id=\"reffn_' + refname + '\">' + refname + '</a></sup>'\n}\n\nRenderer.prototype.footnote = function(refname, text) {\n  return '<blockquote id=\"fn_' + refname + '\">\\n'\n    + '<sup>' + refname + '</sup>. '\n    + text\n    + '<a href=\"#reffn_' + refname + '\" title=\"Jump back to footnote [' + refname + '] in the text.\"> &#8617;</a>\\n'\n    + '</blockquote>\\n';\n}\n\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nmodule.exports = Renderer;\n",
    "var _utils = require('../utils');\nvar replace = _utils.replace;\nvar merge = _utils.merge;\nvar noop = _utils.noop;\n\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^((?: {4}|\\t)[^\\n]+\\n*)+/,\n  fences: noop,\n  yamlHeader: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n|$)/,\n  footnote: /^\\[\\^([^\\]]+)\\]: ([^\\n]+)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def|math))+)\\n*/,\n  text: /^[^\\n]+/,\n  math: /^ *(\\${2,}) *([\\s\\S]+?)\\s*\\1 *(?:\\n|$)/,\n};\n\nblock._bullet = /(?:[*+-]|\\d+\\.)/;\nblock._item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock._item = replace(block._item, 'gm')\n  (/bull/g, block._bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block._bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ('footnote', block.footnote)\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:\\\\/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ('math', block.math)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n|$)/,\n  paragraph: /^/,\n  yamlHeader: /^ *(?=```)/,\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\nmodule.exports = block;\n",
    "var _utils = require('../utils');\nvar replace = _utils.replace;\nvar merge = _utils.merge;\nvar noop = _utils.noop;\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  html: /^<!--[\\s\\S]*?-->|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)*?(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>([\\s\\S]*?)?<\\/\\1>|^<(\\w+(?!:\\/|[^\\w\\s@]*@)\\b)(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  reffn: /^!?\\[\\^(inside)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`$]| {2,}\\n|$)/,\n  math: /^\\$\\$\\s*([\\s\\S]*?[^\\$])\\s*\\$\\$(?!\\$)/,\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\ninline.reffn = replace(inline.reffn)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GitBook Grammar\n */\ninline.gitbook = merge({}, inline.gfm, {\n  // Template variable\n  tplvar: /^{{\\s*(.*?)\\s*(?=}})}}/,\n\n  // Template expression\n  tplexpr: /^{%\\s*(.*?)\\s*(?=%})%}/,\n});\ninline.gitbook.text = replace(inline.gfm.text)\n  ('~]|', '~]|'+inline.gitbook.tplvar.source+'|'+inline.gitbook.tplexpr.source+'|')\n  ();\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\nmodule.exports = inline;\n",
    "/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = {\n  escape: escape,\n  unescape: unescape,\n  replace: replace,\n  noop: noop,\n  merge: merge,\n};\n",
    "/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  az: {\n    regexp: /[\\u0130]/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  lt: {\n    regexp: /[\\u0049\\u004A\\u012E\\u00CC\\u00CD\\u0128]/g,\n    map: {\n      '\\u0049': '\\u0069\\u0307',\n      '\\u004A': '\\u006A\\u0307',\n      '\\u012E': '\\u012F\\u0307',\n      '\\u00CC': '\\u0069\\u0307\\u0300',\n      '\\u00CD': '\\u0069\\u0307\\u0301',\n      '\\u0128': '\\u0069\\u0307\\u0303'\n    }\n  }\n}\n\n/**\n * Lowercase a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  var lang = LANGUAGES[locale]\n\n  str = str == null ? '' : String(str)\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) { return lang.map[m] })\n  }\n\n  return str.toLowerCase()\n}\n",
    "/** @flow */\n\n\"use strict\";\n\nfunction getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + \"|()\";\n\n    // We always make the new regex global.\n    var flags = \"g\" + (re.ignoreCase ? \"i\" : \"\") + (re.multiline ? \"m\" : \"\") + (re.unicode ? \"u\" : \"\")\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error(\"matchAt(...): Only non-global regexes are supported\");\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;",
    "// Generated by CoffeeScript 1.9.2\nvar bind;\n\nbind = function() {\n  var delay;\n  delay = typeof setImmediate === 'function' ? function(fn) {\n    return setImmediate(fn);\n  } : function(fn) {\n    return setTimeout(fn, 0);\n  };\n  return {\n    series: function(tasks, callback) {\n      var next, result;\n      tasks = tasks.slice(0);\n      next = function(cb) {\n        var task;\n        if (tasks.length === 0) {\n          return cb();\n        }\n        task = tasks.shift();\n        return task(function() {\n          return delay(function() {\n            return next(cb);\n          });\n        });\n      };\n      result = function(cb) {\n        return next(cb);\n      };\n      if (callback != null) {\n        result(callback);\n      }\n      return result;\n    },\n    parallel: function(tasks, callback) {\n      var count, result;\n      count = tasks.length;\n      result = function(cb) {\n        var i, len, results, task;\n        if (count === 0) {\n          return cb();\n        }\n        results = [];\n        for (i = 0, len = tasks.length; i < len; i++) {\n          task = tasks[i];\n          results.push(task(function() {\n            count--;\n            if (count === 0) {\n              return cb();\n            }\n          }));\n        }\n        return results;\n      };\n      if (callback != null) {\n        result(callback);\n      }\n      return result;\n    },\n    delay: delay\n  };\n};\n\nif (typeof define !== \"undefined\" && define !== null) {\n  define([], bind);\n} else if (typeof module !== \"undefined\" && module !== null) {\n  module.exports = bind();\n} else {\n  window.async = bind();\n}\n",
    "// Generated by CoffeeScript 1.9.2\nvar extend;\n\nextend = require('extend');\n\nmodule.exports = function(initialState) {\n  var _layers, _state;\n  _state = {};\n  _layers = [];\n  if (initialState != null) {\n    extend(_state, initialState);\n  }\n  return {\n    apply: function(diff) {\n      return extend(_state, diff);\n    },\n    _state: function() {\n      return _state;\n    },\n    clear: function() {\n      return _state = {};\n    },\n    get: function() {\n      var i, layer, len, result;\n      result = {};\n      extend(result, _state);\n      for (i = 0, len = _layers.length; i < len; i++) {\n        layer = _layers[i];\n        extend(result, layer);\n      }\n      return result;\n    },\n    layer: function(layer) {\n      _layers.push(layer);\n      return {\n        rollback: function() {\n          var index;\n          index = _layers.indexOf(layer);\n          return _layers.splice(index, 1);\n        },\n        commit: function() {\n          var index;\n          index = _layers.indexOf(layer);\n          _layers.splice(index, 1);\n          return extend(_state, layer);\n        }\n      };\n    }\n  };\n};\n",
    "var hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar undefined;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\t'use strict';\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {}\n\n\treturn key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\t'use strict';\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target === copy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n",
    "// Generated by CoffeeScript 1.9.2\nvar decimalAdjust;\n\ndecimalAdjust = function(type, value, exp) {\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n  value = +value;\n  exp = +exp;\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  value = value.toString().split('e');\n  value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n};\n\nmodule.exports = {\n  round10: function(value, exp) {\n    return decimalAdjust('round', value, exp);\n  },\n  floor10: function(value, exp) {\n    return decimalAdjust('floor', value, exp);\n  },\n  ceil10: function(value, exp) {\n    return decimalAdjust('ceil', value, exp);\n  }\n};\n",
    "(function() {\n  var cache, extend, layers;\n\n  extend = require('extend');\n\n  layers = require('odo-layers');\n\n  cache = require('odoql-exe/cache');\n\n  module.exports = function(el, component, exe, options) {\n    var Relay, log, update, _cache, _memory, _scene, _state;\n    _scene = null;\n    _memory = {};\n    _state = layers();\n    log = function() {};\n    if ((options != null ? options.hub : void 0) != null) {\n      log = function(message) {\n        return options.hub.emit('[odo-relay] {message}', {\n          message: message\n        });\n      };\n    }\n    update = function() {\n      if (_scene == null) {\n        log('mounting');\n        return Relay.mount();\n      }\n      log('updating');\n      return _scene.update(_state.get(), _memory, options != null ? options.hub : void 0);\n    };\n    _cache = cache(exe, options);\n    _cache.on('ready', update);\n    _cache.on('result', _state.apply);\n    if ((options != null ? options.queries : void 0) != null) {\n      _cache.apply(options.queries);\n    }\n    if ((options != null ? options.state : void 0) != null) {\n      _state.apply(options.state);\n    }\n    Relay = {\n      mount: function() {\n        return _scene = component.mount(el, _state.get(), _memory, options != null ? options.hub : void 0, options);\n      },\n      update: function(params) {\n        extend(_memory, params);\n        return _cache.run(component.query(_memory));\n      },\n      layer: _state.layer,\n      params: function() {\n        return _memory;\n      },\n      hub: function() {\n        return options != null ? options.hub : void 0;\n      },\n      state: function() {\n        return _state.get();\n      },\n      unmount: function() {\n        _scene.unmount();\n        return _scene = null;\n      },\n      refreshQueries: function(queries) {\n        var queriesDictionary, query, _i, _len;\n        queriesDictionary = {};\n        for (_i = 0, _len = queries.length; _i < _len; _i++) {\n          query = queries[_i];\n          queriesDictionary[query] = null;\n        }\n        return _cache.apply(queriesDictionary);\n      }\n    };\n    return Relay;\n  };\n\n}).call(this);\n",
    "// Generated by CoffeeScript 1.9.2\n\n/*\nSplit queries into queries to execute together and queries that can complete independently.\n */\nvar hasoption;\n\nhasoption = require('./hasoption');\n\nmodule.exports = function(exe, queries) {\n  var async, key, query, sync;\n  sync = {};\n  async = {};\n  for (key in queries) {\n    query = queries[key];\n    if (hasoption(query, 'async')) {\n      async[key] = query;\n    } else {\n      sync[key] = query;\n    }\n  }\n  return {\n    sync: sync,\n    async: async\n  };\n};\n",
    "// Generated by CoffeeScript 1.9.2\n\n/*\nMaintain a cache of queries to reduce re-querying.\n */\nvar async, diff, optimise, parallelqueries;\n\nasync = require('odo-async');\n\ndiff = require('./diff');\n\noptimise = require('./optimise');\n\nparallelqueries = require('./parallelqueries');\n\nmodule.exports = function(exe, options) {\n  var _cached, _e, log, pq, res;\n  log = function() {};\n  if ((options != null ? options.hub : void 0) != null) {\n    log = function(message) {\n      return options.hub.emit('[odoql-exe] {message}', {\n        message: message\n      });\n    };\n  }\n  if (options == null) {\n    options = {};\n  }\n  if (options.maxparallelqueries == null) {\n    options.maxparallelqueries = 5;\n  }\n  _cached = {};\n  _e = {\n    ready: [],\n    result: [],\n    error: []\n  };\n  pq = parallelqueries(options.maxparallelqueries, function(timings) {\n    var e, i, len, ref, results1;\n    ref = _e.ready;\n    results1 = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      e = ref[i];\n      results1.push(e(timings));\n    }\n    return results1;\n  });\n  res = function() {};\n  res.apply = function(queries) {\n    var _, key, results1;\n    results1 = [];\n    for (key in queries) {\n      _ = queries[key];\n      results1.push(_cached[key] = queries[key]);\n    }\n    return results1;\n  };\n  res.run = function(queries) {\n    var fn, i, key, len, optimisedqueries, query;\n    queries = diff(_cached, queries);\n    if (Object.keys(_cached).length > 0) {\n      log((Object.keys(_cached).join(', ')) + \" in the cache\");\n    }\n    if (Object.keys(queries).length > 0) {\n      log((Object.keys(queries).join(', ')) + \" new or changed\");\n    }\n    for (key in queries) {\n      query = queries[key];\n      _cached[key] = query;\n    }\n    optimisedqueries = optimise(exe, queries);\n    fn = function(query) {\n      var callback, e, j, k, len1, len2, ref, ref1, update;\n      if (query.isAsync) {\n        update = {};\n        ref = query.keys;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          key = ref[j];\n          update[key] = null;\n        }\n        ref1 = _e.result;\n        for (k = 0, len2 = ref1.length; k < len2; k++) {\n          e = ref1[k];\n          e(update);\n        }\n      }\n      callback = function(cb) {\n        return query.query(function(errors, results) {\n          var error, l, len3, ref2;\n          if (errors != null) {\n            log((Object.keys(errors).join(', ')) + \" errored\");\n            for (key in errors) {\n              error = errors[key];\n              log(key + \": \" + error);\n            }\n            ref2 = _e.error;\n            for (l = 0, len3 = ref2.length; l < len3; l++) {\n              e = ref2[l];\n              e(errors);\n            }\n          }\n          return cb(errors, function(keys) {\n            var len4, len5, m, n, ref3, results1;\n            log((keys.join(', ')) + \" complete, caching\");\n            update = {};\n            for (m = 0, len4 = keys.length; m < len4; m++) {\n              key = keys[m];\n              update[key] = results[key];\n            }\n            ref3 = _e.result;\n            results1 = [];\n            for (n = 0, len5 = ref3.length; n < len5; n++) {\n              e = ref3[n];\n              results1.push(e(update));\n            }\n            return results1;\n          });\n        });\n      };\n      return pq.add(query.isAsync, query.keys, callback);\n    };\n    for (i = 0, len = optimisedqueries.length; i < len; i++) {\n      query = optimisedqueries[i];\n      fn(query);\n    }\n    return async.delay(function() {\n      return pq.exec();\n    });\n  };\n  res.on = function(e, cb) {\n    if (_e[e] == null) {\n      _e[e] = [];\n    }\n    return _e[e].push(cb);\n  };\n  return res;\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar canexecute, isquery;\n\nisquery = require('./isquery');\n\ncanexecute = function(exe, query) {\n  var key, value;\n  if (typeof query !== 'object') {\n    return true;\n  }\n  if (isquery(query) && (exe.providers[query.__q] == null)) {\n    return false;\n  }\n  for (key in query) {\n    value = query[key];\n    if (!canexecute(exe, value)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = canexecute;\n",
    "// Generated by CoffeeScript 1.9.2\nvar eq, hasoption;\n\neq = require('./eq');\n\nhasoption = require('./hasoption');\n\nmodule.exports = function(a, b) {\n  var key, query, result;\n  result = {};\n  for (key in b) {\n    query = b[key];\n    if ((a[key] != null) && !hasoption(query, 'nocache') && eq(a[key], query)) {\n      continue;\n    }\n    result[key] = query;\n  }\n  return result;\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar eq;\n\neq = function(a, b) {\n  var aarray, akeys, barray, bkeys, i, j, key, ref, value;\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return false;\n  }\n  if (a === null || b === null) {\n    return false;\n  }\n  aarray = a instanceof Array;\n  barray = b instanceof Array;\n  if (aarray !== barray) {\n    return false;\n  }\n  if (aarray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (i = j = 0, ref = a.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (!eq(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  akeys = Object.keys(a);\n  bkeys = Object.keys(b);\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (key in a) {\n    value = a[key];\n    if (!eq(value, b[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmodule.exports = eq;\n",
    "// Generated by CoffeeScript 1.9.2\nmodule.exports = function(q, option) {\n  return (q != null ? q.__q : void 0) === 'options' && ((q != null ? q.__p[option] : void 0) != null);\n};\n",
    "// Generated by CoffeeScript 1.9.2\nmodule.exports = function(q) {\n  if (typeof q !== 'object') {\n    return false;\n  }\n  return (q != null ? q.__q : void 0) != null;\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar isquery, missingproviders;\n\nisquery = require('./isquery');\n\nmissingproviders = function(exe, query) {\n  var key, res, value;\n  if (typeof query !== 'object') {\n    return [];\n  }\n  if (isquery(query) && (exe.providers[query.__q] == null)) {\n    return [query.__q];\n  }\n  res = [];\n  for (key in query) {\n    value = query[key];\n    res = res.concat(missingproviders(exe, value));\n  }\n  return res;\n};\n\nmodule.exports = missingproviders;\n",
    "// Generated by CoffeeScript 1.9.2\nvar asyncsplit, split;\n\nsplit = require('./split');\n\nasyncsplit = require('./asyncsplit');\n\nmodule.exports = function(exe, queries) {\n  var build, result;\n  result = [];\n  build = function(isAsync, queries) {\n    var fn, key, keys, query, ref;\n    ref = queries.local;\n    fn = function(key, query) {\n      query = exe.build(query);\n      return result.push({\n        isAsync: isAsync,\n        keys: [key],\n        query: function(cb) {\n          return query(function(err, res) {\n            var returnresult;\n            if (err != null) {\n              returnresult = {};\n              returnresult[key] = err;\n              return cb(returnresult);\n            }\n            returnresult = {};\n            returnresult[key] = res;\n            return cb(null, returnresult);\n          });\n        }\n      });\n    };\n    for (key in ref) {\n      query = ref[key];\n      fn(key, query);\n    }\n    keys = Object.keys(queries.remote);\n    if (keys.length !== 0) {\n      return result.push({\n        isAsync: isAsync,\n        keys: keys,\n        query: exe.providers.__dynamic(exe, {\n          __q: '__dynamic',\n          __p: keys,\n          __s: queries.remote\n        })\n      });\n    }\n  };\n  queries = asyncsplit(exe, queries);\n  queries = {\n    sync: split(exe, queries.sync),\n    async: split(exe, queries.async)\n  };\n  build(false, queries.sync);\n  build(true, queries.async);\n  return result;\n};\n",
    "// Generated by CoffeeScript 1.9.2\nmodule.exports = function(max, idle) {\n  var _batch, _queued, _running, next, result, start;\n  _batch = {};\n  _running = [];\n  _queued = [];\n  start = function(entry) {\n    var cancel;\n    _running.push(entry);\n    entry.startedAt = new Date().getTime();\n    cancel = entry.task(function(err, cb) {\n      var fin, i, index, key, len, ref;\n      index = _running.indexOf(entry);\n      _running.splice(index, 1);\n      if (err == null) {\n        fin = new Date().getTime();\n        ref = entry.keys;\n        for (i = 0, len = ref.length; i < len; i++) {\n          key = ref[i];\n          _batch[key] = fin - entry.startedAt;\n        }\n        cb(entry.keys);\n      }\n      return next();\n    });\n    if (_running.indexOf(entry) === -1) {\n      return;\n    }\n    if (typeof cancel !== 'function') {\n      cancel = function() {};\n    }\n    entry.cancel = cancel;\n    return next();\n  };\n  next = function() {\n    var queuedCount, runningCount;\n    if (idle != null) {\n      runningCount = _running.filter(function(r) {\n        return !r.isAsync;\n      }).length;\n      queuedCount = _queued.filter(function(r) {\n        return !r.isAsync;\n      }).length;\n      if (runningCount === 0 && queuedCount === 0) {\n        idle(_batch);\n        _batch = {};\n      }\n    }\n    if (_queued.length === 0) {\n      return;\n    }\n    if (_running.length >= max) {\n      return;\n    }\n    return start(_queued.shift());\n  };\n  return result = {\n    cancel: function(keys) {\n      _queued = _queued.filter(function(entry) {\n        entry.keys = entry.keys.filter(function(key) {\n          return keys.indexOf(key) === -1;\n        });\n        if (entry.keys.length !== 0) {\n          return true;\n        }\n        return false;\n      });\n      return _running = _running.filter(function(entry) {\n        entry.keys = entry.keys.filter(function(key) {\n          return keys.indexOf(key) === -1;\n        });\n        if (entry.keys.length !== 0) {\n          return true;\n        }\n        entry.cancel();\n        return false;\n      });\n    },\n    add: function(isAsync, keys, task) {\n      var entry;\n      entry = {\n        keys: keys,\n        task: task,\n        isAsync: isAsync\n      };\n      result.cancel(keys);\n      return _queued.push(entry);\n    },\n    exec: function() {\n      return next();\n    }\n  };\n};\n",
    "// Generated by CoffeeScript 1.9.1\n\n/*\nGiven an execution environment (exe) create a list of\nqueries that can execute locally, and another list of\nqueries to execute somewhere else.\n */\nvar canexecute, missingproviders;\n\ncanexecute = require('./canexecute');\n\nmissingproviders = require('./missingproviders');\n\nmodule.exports = function(exe, queries) {\n  var key, local, missing, query, remote;\n  local = {};\n  remote = {};\n  missing = {};\n  for (key in queries) {\n    query = queries[key];\n    if (canexecute(exe, query)) {\n      local[key] = query;\n    } else {\n      remote[key] = query;\n      missing[key] = missingproviders(exe, query);\n    }\n  }\n  return {\n    local: local,\n    remote: remote,\n    missing: missing\n  };\n};\n",
    "// Generated by CoffeeScript 1.8.0\nvar bind;\n\nbind = function() {\n  return function(string, payload) {\n    if (payload == null) {\n      return string;\n    }\n    return string.replace(/{([^{}]+)}/g, function(original, key) {\n      if (payload[key] == null) {\n        return original;\n      }\n      return payload[key];\n    });\n  };\n};\n\nmodule.exports = bind();\n",
    "// Generated by CoffeeScript 1.9.2\nvar component, extend;\n\nextend = require('extend');\n\ncomponent = function(spec) {\n  var Component, i, len, plugin, ref;\n  spec = extend({}, spec);\n  Component = function(state, params, hub) {\n    return spec.render.call(spec, state, params, hub);\n  };\n  Component.use = function(plugin) {\n    return plugin(Component, spec);\n  };\n  ref = component.plugins;\n  for (i = 0, len = ref.length; i < len; i++) {\n    plugin = ref[i];\n    Component.use(plugin);\n  }\n  return Component;\n};\n\ncomponent.plugins = [];\n\ncomponent.use = function(plugin) {\n  return component.plugins.push(plugin);\n};\n\nmodule.exports = component;\n",
    "// Generated by CoffeeScript 1.9.2\nvar VText, create, diff, patch, raf, removeContentEditable, virtualize;\n\nraf = require('raf');\n\ncreate = require('virtual-dom/create-element');\n\ndiff = require('virtual-dom/diff');\n\npatch = require('virtual-dom/patch');\n\nVText = require('virtual-dom/vnode/vtext');\n\nvirtualize = require('vdom-virtualize');\n\nremoveContentEditable = function(vnode) {\n  var i, len, node, ref, ref1, results;\n  if ((ref = vnode.properties) != null) {\n    delete ref.contentEditable;\n  }\n  if (!vnode.children) {\n    return;\n  }\n  ref1 = vnode.children;\n  results = [];\n  for (i = 0, len = ref1.length; i < len; i++) {\n    node = ref1[i];\n    results.push(removeContentEditable(node));\n  }\n  return results;\n};\n\nmodule.exports = function(component, state, params, hub, parent, options) {\n  var apply, payload, status, target, time, tree;\n  time = function(description, cb) {\n    return cb();\n  };\n  if ((options != null ? options.hub : void 0) != null) {\n    time = function(description, cb) {\n      var endedAt, startedAt;\n      startedAt = new Date().getTime();\n      cb();\n      endedAt = new Date().getTime();\n      return options.hub.emit('Odo.js {description} in {duration}ms', {\n        description: description,\n        startedAt: startedAt,\n        endedAt: endedAt,\n        duration: endedAt - startedAt\n      });\n    };\n  }\n  status = 'init';\n  tree = null;\n  target = null;\n  time('scene created', function() {\n    return tree = component(state, params, hub);\n  });\n  status = 'idle';\n  apply = function(state, params, hub) {\n    if (status === 'rendering') {\n      throw new Error('Mutant rampage');\n    }\n    status = 'rendering';\n    time('scene updated', function() {\n      var newTree, patches;\n      newTree = component(state, params, hub);\n      patches = diff(tree, newTree);\n      target = patch(target, patches);\n      return tree = newTree;\n    });\n    return status = 'idle';\n  };\n  payload = null;\n  return {\n    target: function() {\n      return target;\n    },\n    status: function() {\n      return status;\n    },\n    mount: function() {\n      var existing, patches;\n      existing = virtualize(parent);\n      removeContentEditable(existing);\n      patches = diff(existing, tree);\n      return target = patch(parent, patches);\n    },\n    update: function(state, params, hub) {\n      if (status === 'rendering') {\n        throw new Error('Mutant rampage');\n      }\n      if (status === 'pending') {\n        payload = {\n          state: state,\n          params: params,\n          hub: hub\n        };\n        return;\n      }\n      if (status === 'idle') {\n        status = 'pending';\n        payload = {\n          state: state,\n          params: params,\n          hub: hub\n        };\n        return raf(function() {\n          if (payload === null) {\n            return;\n          }\n          apply(payload.state, payload.params, payload.hub);\n          return payload = null;\n        });\n      }\n    },\n    apply: apply,\n    unmount: function() {\n      return patch(target, diff(tree, new VText('')));\n    }\n  };\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar Hook, compose, create, dom, extend, hook;\n\ncreate = require('virtual-dom/create-element');\n\ncompose = require('./compose');\n\nextend = require('extend');\n\ndom = require('virtual-dom/h');\n\nrequire('setimmediate');\n\nHook = (function() {\n  function Hook(component1, spec1, state1, params1, hub1) {\n    this.component = component1;\n    this.spec = spec1;\n    this.state = state1;\n    this.params = params1;\n    this.hub = hub1;\n    if (this.spec.enter == null) {\n      this.spec.enter = function(item) {\n        return this.item.mount();\n      };\n    }\n    if (this.spec.exit == null) {\n      this.spec.exit = function(item) {\n        return this.item.unmount();\n      };\n    }\n    if (this.spec.transition == null) {\n      this.spec.transition = function(olditem, newitem) {\n        olditem.unmount();\n        return item.mount();\n      };\n    }\n  }\n\n  Hook.prototype.type = 'Widget';\n\n  Hook.prototype.render = function() {\n    if (this.spec.render != null) {\n      return this.spec.render.call(this.spec, this.component, this.state, this.params, this.hub);\n    } else {\n      return dom('div.hook', this.component);\n    }\n  };\n\n  Hook.prototype.create = function() {\n    this.item = compose(this.component, this.state, this.params, this.hub, this.el);\n    return this.spec.enter.call(this.spec, this.item, this.state, this.params, this.hub);\n  };\n\n  Hook.prototype.remove = function() {\n    return this.spec.exit.call(this.spec, this.item, this.state, this.params, this.hub);\n  };\n\n  Hook.prototype.init = function() {\n    var el;\n    el = null;\n    if (this.spec.init != null) {\n      el = this.spec.init.call(this.spec, this.state, this.params, this.hub);\n    } else {\n      el = dom('div.hook');\n    }\n    this.el = create(el);\n    setImmediate((function(_this) {\n      return function() {\n        return _this.create();\n      };\n    })(this));\n    return this.el;\n  };\n\n  Hook.prototype.update = function(prev, el) {\n    var olditem;\n    this.el = prev.el, this.item = prev.item;\n    if (prev.component === this.component) {\n      if (this.component == null) {\n        return el;\n      }\n      this.item.update(this.state, this.params, this.hub);\n      return el;\n    }\n    if (prev.component == null) {\n      this.create();\n      return el;\n    }\n    if (this.component == null) {\n      this.remove();\n      return el;\n    }\n    olditem = this.item;\n    this.item = compose(this.component, this.state, this.params, this.hub, el);\n    this.spec.transition.call(this.spec, olditem, this.item, this.state, this.params, this.hub);\n    return el;\n  };\n\n  Hook.prototype.destroy = function() {\n    return this.remove();\n  };\n\n  return Hook;\n\n})();\n\nhook = function(spec) {\n  var Component, i, len, plugin, ref;\n  spec = extend({}, spec);\n  Component = function(component, state, params, hub) {\n    return new Hook(component, spec, state, params, hub);\n  };\n  Component.use = function(plugin) {\n    return plugin(Component, spec);\n  };\n  ref = hook.plugins;\n  for (i = 0, len = ref.length; i < len; i++) {\n    plugin = ref[i];\n    Component.use(plugin);\n  }\n  return Component;\n};\n\nhook.plugins = [];\n\nhook.use = function(plugin) {\n  return hook.plugins.push(plugin);\n};\n\nmodule.exports = hook;\n",
    "// Generated by CoffeeScript 1.9.2\nvar async, hub, template;\n\nasync = require('odo-async');\n\ntemplate = require('odo-template');\n\nhub = function(defaultbindings) {\n  var all, cb, events, every, listeners, none, once, result;\n  listeners = {};\n  all = [];\n  none = [];\n  every = function(e, cb) {\n    if (listeners[e] == null) {\n      listeners[e] = [];\n    }\n    listeners[e].push(cb);\n    return {\n      off: function() {\n        var index;\n        index = listeners[e].indexOf(cb);\n        if (index !== -1) {\n          return listeners[e].splice(index, 1);\n        }\n      }\n    };\n  };\n  once = function(e, cb) {\n    var binding;\n    binding = every(e, function(payload, callback) {\n      binding.off();\n      return cb(payload, callback);\n    });\n    return {\n      off: function() {\n        return binding.off();\n      }\n    };\n  };\n  if (defaultbindings != null) {\n    for (events in defaultbindings) {\n      cb = defaultbindings[events];\n      every(events, cb);\n    }\n  }\n  result = {};\n  result[\"new\"] = function(defaultbindings) {\n    return hub(defaultbindings);\n  };\n  result.child = function(defaultbindings) {\n    var res;\n    res = hub();\n    res.none(function(e, description, m, cb) {\n      return result.emit(e, m, cb);\n    });\n    if (defaultbindings != null) {\n      for (events in defaultbindings) {\n        cb = defaultbindings[events];\n        res.every(events, cb);\n      }\n    }\n    return res;\n  };\n  result.every = function(events, cb) {\n    var bindings, e, i, len;\n    if (!(events instanceof Array)) {\n      events = [events];\n    }\n    bindings = (function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = events.length; i < len; i++) {\n        e = events[i];\n        results.push({\n          event: e\n        });\n      }\n      return results;\n    })();\n    for (i = 0, len = bindings.length; i < len; i++) {\n      e = bindings[i];\n      e.binding = every(e.event, cb);\n    }\n    return {\n      off: function() {\n        var j, len1, results;\n        results = [];\n        for (j = 0, len1 = bindings.length; j < len1; j++) {\n          e = bindings[j];\n          results.push(e.binding.off());\n        }\n        return results;\n      }\n    };\n  };\n  result.once = function(events, cb) {\n    var bindings, count, e, i, len;\n    if (!(events instanceof Array)) {\n      events = [events];\n    }\n    count = 0;\n    bindings = (function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = events.length; i < len; i++) {\n        e = events[i];\n        count++;\n        results.push({\n          event: e,\n          complete: false\n        });\n      }\n      return results;\n    })();\n    for (i = 0, len = bindings.length; i < len; i++) {\n      e = bindings[i];\n      e.binding = once(e.event, function(m, callback) {\n        count--;\n        e.complete = true;\n        if (count === 0) {\n          return cb(m, callback);\n        } else {\n          return callback();\n        }\n      });\n    }\n    return {\n      off: function() {\n        var j, len1, results;\n        results = [];\n        for (j = 0, len1 = bindings.length; j < len1; j++) {\n          e = bindings[j];\n          results.push(e.binding.off());\n        }\n        return results;\n      }\n    };\n  };\n  result.any = function(events, cb) {\n    var bindings, e, i, len, unbind;\n    bindings = (function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = events.length; i < len; i++) {\n        e = events[i];\n        results.push({\n          event: e\n        });\n      }\n      return results;\n    })();\n    unbind = function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = bindings.length; i < len; i++) {\n        e = bindings[i];\n        results.push(e.binding.off());\n      }\n      return results;\n    };\n    for (i = 0, len = bindings.length; i < len; i++) {\n      e = bindings[i];\n      e.binding = once(e.event, function() {\n        unbind();\n        return cb();\n      });\n    }\n    return {\n      off: unbind\n    };\n  };\n  result.all = function(cb) {\n    all.push(cb);\n    return {\n      off: function() {\n        var index;\n        index = all.indexOf(cb);\n        if (index !== -1) {\n          return all.splice(index, 1);\n        }\n      }\n    };\n  };\n  result.none = function(cb) {\n    none.push(cb);\n    return {\n      off: function() {\n        var index;\n        index = none.indexOf(cb);\n        if (index !== -1) {\n          return none.splice(index, 1);\n        }\n      }\n    };\n  };\n  result.emit = function(e, m, ecb) {\n    var description, fn, fn1, fn2, i, j, k, len, len1, len2, listener, ref, tasks;\n    description = \"\" + (template(e, m));\n    tasks = [];\n    fn = function(listener) {\n      return tasks.push(function(cb) {\n        return async.delay(function() {\n          return listener(e, description, m, cb);\n        });\n      });\n    };\n    for (i = 0, len = all.length; i < len; i++) {\n      listener = all[i];\n      fn(listener);\n    }\n    if (listeners[e] != null) {\n      ref = listeners[e].slice();\n      fn1 = function(listener) {\n        return tasks.push(function(cb) {\n          return async.delay(function() {\n            return listener(m, cb);\n          });\n        });\n      };\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        listener = ref[j];\n        fn1(listener);\n      }\n    } else {\n      fn2 = function(listener) {\n        return tasks.push(function(cb) {\n          return async.delay(function() {\n            return listener(e, description, m, cb);\n          });\n        });\n      };\n      for (k = 0, len2 = none.length; k < len2; k++) {\n        listener = none[k];\n        fn2(listener);\n      }\n    }\n    return async.parallel(tasks, function() {\n      if (ecb != null) {\n        return ecb();\n      }\n    });\n  };\n  return result;\n};\n\nmodule.exports = hub;\n",
    "// Generated by CoffeeScript 1.9.2\nvar component, mount, stringify, widget;\n\ncomponent = require('./component');\n\nwidget = require('./widget');\n\nmount = require('./mount');\n\nstringify = require('./stringify');\n\ncomponent.use(mount);\n\ncomponent.use(stringify);\n\nmodule.exports = {\n  component: component,\n  widget: widget,\n  dom: require('virtual-dom/h'),\n  svg: require('virtual-dom/virtual-hyperscript/svg'),\n  partial: require('vdom-thunk'),\n  compose: require('./compose'),\n  hook: require('./hook'),\n  hub: require('./hub'),\n  thunk: require('./thunk')\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar compose;\n\ncompose = require('./compose');\n\nmodule.exports = function(component, spec) {\n  return component.mount = function(el, state, params, hub, options) {\n    var scene;\n    scene = compose(component, state, params, hub, el, options);\n    scene.mount();\n    return {\n      update: function(state, params, hub) {\n        return scene.update(state, params, hub);\n      },\n      apply: function(state, params, hub) {\n        return scene.apply(state, params, hub);\n      },\n      unmount: function() {\n        return scene.unmount();\n      }\n    };\n  };\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar stringify;\n\nstringify = require('vdom-to-html');\n\nmodule.exports = function(component, spec) {\n  return component.stringify = function(state, params, hub) {\n    return stringify(spec.render.call(spec, state, params, hub));\n  };\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar Thunk, thunk;\n\nThunk = (function() {\n  function Thunk(render1, state1, params1, hub1) {\n    this.render = render1;\n    this.state = state1;\n    this.params = params1;\n    this.hub = hub1;\n  }\n\n  Thunk.prototype.type = 'Thunk';\n\n  Thunk.prototype.render = function(previous) {\n    return this.render.call(this, previous, this.state, this.params, this.hub);\n  };\n\n  return Thunk;\n\n})();\n\nthunk = function(render) {\n  var Component, i, len, plugin, ref;\n  Component = function(state, params, hub) {\n    return new Thunk(render, state, params, hub);\n  };\n  Component.use = function(plugin) {\n    return plugin(Component, render);\n  };\n  ref = thunk.plugins;\n  for (i = 0, len = ref.length; i < len; i++) {\n    plugin = ref[i];\n    Component.use(plugin);\n  }\n  return Component;\n};\n\nthunk.plugins = [];\n\nthunk.use = function(plugin) {\n  return thunk.plugins.push(plugin);\n};\n\nthunk.Thunk = Thunk;\n\nmodule.exports = thunk;\n",
    "// Generated by CoffeeScript 1.9.2\nvar Widget, create, extend, widget;\n\ncreate = require('virtual-dom/create-element');\n\nextend = require('extend');\n\nrequire('setimmediate');\n\nWidget = (function() {\n  function Widget(spec1, state1, params1, hub1) {\n    this.spec = spec1;\n    this.state = state1;\n    this.params = params1;\n    this.hub = hub1;\n    this.el = this.spec.render.call(this, this.state, this.params, this.hub);\n  }\n\n  Widget.prototype.type = 'Widget';\n\n  Widget.prototype.render = function() {\n    return this.el;\n  };\n\n  Widget.prototype.init = function() {\n    var dom;\n    dom = create(this.el);\n    if (dom !== null) {\n      this.el = dom;\n    }\n    setImmediate((function(_this) {\n      return function() {\n        if (_this.spec.afterMount != null) {\n          return _this.spec.afterMount.call(_this, _this.el, _this.state, _this.params, _this.hub);\n        }\n      };\n    })(this));\n    return this.el;\n  };\n\n  Widget.prototype.update = function(prev, el) {\n    var dom, k, result, v;\n    for (k in prev) {\n      v = prev[k];\n      if (this[k] === void 0) {\n        this[k] = v;\n      }\n    }\n    result = el;\n    if (this.spec.update != null) {\n      result = this.spec.update.call(this, el, this.state, this.params, this.hub, prev);\n      if (result !== null) {\n        dom = create(result);\n        if (dom !== null) {\n          result = dom;\n        }\n      }\n    }\n    if (this.spec.onUpdate != null) {\n      this.spec.onUpdate.call(this, result, this.state, this.params, this.hub, prev);\n    }\n    return result;\n  };\n\n  Widget.prototype.destroy = function(el) {\n    if (this.spec.beforeUnmount != null) {\n      return this.spec.beforeUnmount.call(this, el, this.state, this.params, this.hub);\n    }\n  };\n\n  return Widget;\n\n})();\n\nwidget = function(spec) {\n  var Component, i, len, plugin, ref;\n  spec = extend({}, spec);\n  Component = function(state, params, hub) {\n    return new Widget(spec, state, params, hub);\n  };\n  Component.use = function(plugin) {\n    return plugin(Component, spec);\n  };\n  ref = widget.plugins;\n  for (i = 0, len = ref.length; i < len; i++) {\n    plugin = ref[i];\n    Component.use(plugin);\n  }\n  return Component;\n};\n\nwidget.plugins = [];\n\nwidget.use = function(plugin) {\n  return widget.plugins.push(plugin);\n};\n\nwidget.Widget = Widget;\n\nmodule.exports = widget;\n",
    "// Generated by CoffeeScript 1.9.1\nmodule.exports = {\n  binary: function(exe, params, callback) {\n    var getleft, getright;\n    getleft = exe.build(params.__l);\n    getright = exe.build(params.__r);\n    return function(cb) {\n      return getleft(function(err, left) {\n        if (err != null) {\n          return cb(err);\n        }\n        return getright(function(err, right) {\n          if (err != null) {\n            return cb(err);\n          }\n          return cb(null, callback(left, right));\n        });\n      });\n    };\n  },\n  unary: function(exe, params, callback) {\n    var getsource;\n    getsource = exe.build(params.__s);\n    return function(cb) {\n      return getsource(function(err, source) {\n        if (err != null) {\n          return cb(err);\n        }\n        return cb(null, callback(source));\n      });\n    };\n  },\n  params: function(exe, params, callback) {\n    var getparams, getsource;\n    getparams = exe.build(params.__p);\n    getsource = exe.build(params.__s);\n    return function(cb) {\n      return getparams(function(err, params) {\n        if (err != null) {\n          return cb(err);\n        }\n        return getsource(function(err, source) {\n          if (err != null) {\n            return cb(err);\n          }\n          return cb(null, callback(params, source));\n        });\n      });\n    };\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar isquery, literal, ops;\n\nisquery = require('./isquery');\n\nops = require('./ops');\n\nliteral = function(exe, value) {\n  if (isquery(value)) {\n    return function(cb) {\n      return cb(null, value.__s);\n    };\n  } else {\n    return function(cb) {\n      return cb(null, value);\n    };\n  }\n};\n\nmodule.exports = function(options) {\n  var def, i, len, providers, res;\n  providers = {\n    literal: literal\n  };\n  res = {\n    providers: providers,\n    clear: function() {\n      return providers = {\n        literal: literal\n      };\n    },\n    use: function(def) {\n      var _, d, fn, i, len, name, optype;\n      if (def instanceof Array) {\n        for (i = 0, len = def.length; i < len; i++) {\n          d = def[i];\n          res.use(def);\n        }\n        return res;\n      }\n      for (_ in def) {\n        optype = def[_];\n        for (name in optype) {\n          fn = optype[name];\n          providers[name] = fn;\n        }\n      }\n      return res;\n    },\n    build: function(q) {\n      if (!isquery(q)) {\n        return res.providers.literal(res, q);\n      }\n      if (res.providers[q.__q] == null) {\n        throw new Error(q.__q + \" not found\");\n      }\n      return res.providers[q.__q](res, q);\n    }\n  };\n  for (i = 0, len = ops.length; i < len; i++) {\n    def = ops[i];\n    res.use(def);\n  }\n  return res;\n};\n",
    "// Generated by CoffeeScript 1.9.2\nmodule.exports = [require('./ops/boolean'), require('./ops/conditional'), require('./ops/maths'), require('./ops/transform'), require('./ops/fill'), require('./ops/filter'), require('./ops/strings'), require('./ops/assign'), require('./ops/types'), require('./ops/json')];\n",
    "// Generated by CoffeeScript 1.9.2\nvar async, extend, visit;\n\nextend = require('extend');\n\nasync = require('odo-async');\n\nvisit = require('../visit');\n\nmodule.exports = {\n  params: {\n    assign: function(exe, params) {\n      var getsource;\n      getsource = exe.build(params.__s);\n      return function(callback) {\n        return getsource(function(err, source) {\n          var assi, d, def, i, len, prop, ref, ref1, tasks;\n          if (err != null) {\n            return callback(err);\n          }\n          assi = function(data, prop, def) {\n            return function(fincb) {\n              var fillrefs;\n              fillrefs = function(node, cb) {\n                var getref;\n                if ((node.__q == null) || node.__q !== 'ref') {\n                  return cb();\n                }\n                getref = exe.build(node.__s);\n                return getref(function(err, res) {\n                  var ref;\n                  if (err != null) {\n                    throw new Error(err);\n                  }\n                  return cb((ref = data[res]) != null ? ref : null);\n                });\n              };\n              def = extend(true, {}, def);\n              return visit(def, fillrefs, function(filled) {\n                var getref;\n                getref = exe.build(filled);\n                return getref(function(err, value) {\n                  if (err != null) {\n                    return callback(err);\n                  }\n                  data[prop] = value;\n                  return fincb();\n                });\n              });\n            };\n          };\n          tasks = [];\n          if (source instanceof Array) {\n            for (i = 0, len = source.length; i < len; i++) {\n              d = source[i];\n              ref = params.__p;\n              for (prop in ref) {\n                def = ref[prop];\n                tasks.push(assi(d, prop, def));\n              }\n            }\n          } else {\n            ref1 = params.__p;\n            for (prop in ref1) {\n              def = ref1[prop];\n              tasks.push(assi(source, prop, def));\n            }\n          }\n          return async.series(tasks, function() {\n            return callback(null, source);\n          });\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar helpers;\n\nhelpers = require('../helpers');\n\nmodule.exports = {\n  binary: {\n    or: function(exe, params) {\n      var getleft, getright;\n      getleft = exe.build(params.__l);\n      getright = exe.build(params.__r);\n      return function(cb) {\n        return getleft(function(err, left) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (left === true) {\n            return cb(null, true);\n          }\n          return getright(function(err, right) {\n            if (err != null) {\n              return cb(err);\n            }\n            return cb(null, right);\n          });\n        });\n      };\n    },\n    and: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left && right;\n      });\n    },\n    gt: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left > right;\n      });\n    },\n    gte: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left >= right;\n      });\n    },\n    lt: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left < right;\n      });\n    },\n    lte: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left <= right;\n      });\n    },\n    eq: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left === right;\n      });\n    }\n  },\n  unary: {\n    not: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return !source;\n      });\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.1\nmodule.exports = {\n  trinary: {\n    \"if\": function(exe, params) {\n      var getleft, getparams, getright;\n      getparams = exe.build(params.__p);\n      getleft = exe.build(params.__l);\n      getright = exe.build(params.__r);\n      return function(cb) {\n        return getparams(function(err, params) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (params) {\n            return getleft(function(err, left) {\n              if (err != null) {\n                return cb(err);\n              }\n              return cb(null, left);\n            });\n          } else {\n            return getright(function(err, right) {\n              if (err != null) {\n                return cb(err);\n              }\n              return cb(null, right);\n            });\n          }\n        });\n      };\n    },\n    unless: function(exe, params) {\n      var getleft, getparams, getright;\n      getparams = exe.build(params.__p);\n      getleft = exe.build(params.__l);\n      getright = exe.build(params.__r);\n      return function(cb) {\n        return getparams(function(err, params) {\n          if (err != null) {\n            return cb(err);\n          }\n          if (!params) {\n            return getleft(function(err, left) {\n              if (err != null) {\n                return cb(err);\n              }\n              return cb(null, left);\n            });\n          } else {\n            return getright(function(err, right) {\n              if (err != null) {\n                return cb(err);\n              }\n              return cb(null, right);\n            });\n          }\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar extend, visit;\n\nextend = require('extend');\n\nvisit = require('../visit');\n\nmodule.exports = {\n  unary: {\n    param: function(exe, params) {\n      throw new Error('Parameters should not be executed');\n    }\n  },\n  params: {\n    fill: function(exe, params) {\n      var getparams;\n      getparams = exe.build(params.__p);\n      return function(callback) {\n        return getparams(function(err, properties) {\n          var fillparams;\n          if (err != null) {\n            return callback(err);\n          }\n          fillparams = function(node, cb) {\n            var getref;\n            if ((node.__q == null) || node.__q !== 'param') {\n              return cb();\n            }\n            getref = exe.build(node.__s);\n            return getref(function(err, res) {\n              if (err != null) {\n                throw new Error(err);\n              }\n              if (properties[res] != null) {\n                return cb(properties[res]);\n              }\n              return cb();\n            });\n          };\n          return visit(params.__s, fillparams, function(filled) {\n            var getref;\n            getref = exe.build(filled);\n            return getref(function(err, result) {\n              if (err != null) {\n                return callback(err);\n              }\n              return callback(null, result);\n            });\n          });\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar async, extend, visit;\n\nextend = require('extend');\n\nasync = require('odo-async');\n\nvisit = require('../visit');\n\nmodule.exports = {\n  params: {\n    filter: function(exe, params) {\n      var getsource;\n      getsource = exe.build(params.__s);\n      return function(callback) {\n        return getsource(function(err, source) {\n          var data, fn, i, index, len, results, tasks;\n          if (err != null) {\n            return callback(err);\n          }\n          if (!(source instanceof Array)) {\n            throw new Error('Not an array');\n          }\n          results = [];\n          tasks = [];\n          fn = function(data, index) {\n            return tasks.push(function(cb) {\n              var def, fillrefs;\n              fillrefs = function(node, cb) {\n                var getref;\n                if ((node.__q == null) || node.__q !== 'ref') {\n                  return cb();\n                }\n                getref = exe.build(node.__s);\n                return getref(function(err, res) {\n                  var ref;\n                  if (err != null) {\n                    throw new Error(err);\n                  }\n                  return cb((ref = data[res]) != null ? ref : '');\n                });\n              };\n              def = extend(true, {}, params.__p);\n              return visit(def, fillrefs, function(filled) {\n                var getref;\n                getref = exe.build(filled);\n                return getref(function(err, value) {\n                  if (err != null) {\n                    return callback(err);\n                  }\n                  results[index] = value;\n                  return cb();\n                });\n              });\n            });\n          };\n          for (index = i = 0, len = source.length; i < len; index = ++i) {\n            data = source[index];\n            fn(data, index);\n          }\n          return async.series(tasks, function() {\n            var j, len1, result, should;\n            result = [];\n            for (index = j = 0, len1 = results.length; j < len1; index = ++j) {\n              should = results[index];\n              if (should) {\n                result.push(source[index]);\n              }\n            }\n            return callback(null, result);\n          });\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nmodule.exports = {\n  unary: {\n    json: function(exe, params) {\n      var getsource;\n      getsource = exe.build(params.__s);\n      return function(cb) {\n        return getsource(function(err, source) {\n          var e;\n          if (err != null) {\n            return cb(err);\n          }\n          try {\n            return cb(null, JSON.parse(source));\n          } catch (_error) {\n            e = _error;\n            return cb(e);\n          }\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar binarymath, fn, fn1, fn2, helpers, i, j, k, len, len1, len2, math, op, paramsmath, res, uniarymath;\n\nhelpers = require('../helpers');\n\nmath = require('odo-math');\n\nres = {\n  binary: {\n    add: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left + right;\n      });\n    },\n    sub: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left - right;\n      });\n    },\n    div: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left / right;\n      });\n    },\n    mult: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left * right;\n      });\n    },\n    mod: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return left % right;\n      });\n    }\n  },\n  unary: {},\n  params: {\n    interpolate_linear: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        var input, output, x1, x2, y1, y2;\n        if (Object.keys(params).length === 0) {\n          return null;\n        }\n        x1 = -Infinity;\n        x2 = +Infinity;\n        for (input in params) {\n          output = params[input];\n          input = +input;\n          if (input === source) {\n            return output;\n          }\n          if (input < source && input > x1) {\n            x1 = input;\n          }\n          if (input > source && input < x2) {\n            x2 = input;\n          }\n        }\n        if (x1 === -Infinity || x2 === +Infinity) {\n          return null;\n        }\n        y1 = params[x1];\n        y2 = params[x2];\n        return y1 + (y2 - y1) * ((source - x1) / (x2 - x1));\n      });\n    },\n    toFixed: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        return source.toFixed(params);\n      });\n    }\n  }\n};\n\nbinarymath = ['pow', 'atan2'];\n\nfn = function(op) {\n  var operation;\n  operation = Math[op];\n  return res.binary[op] = function(exe, params) {\n    return helpers.binary(exe, params, function(left, right) {\n      return operation(left, right);\n    });\n  };\n};\nfor (i = 0, len = binarymath.length; i < len; i++) {\n  op = binarymath[i];\n  fn(op);\n}\n\nuniarymath = ['abs', 'acos', 'asin', 'atan', 'ceil', 'cos', 'exp', 'floor', 'log', 'round', 'sin', 'sqrt', 'tan'];\n\nfn1 = function(op) {\n  var operation;\n  operation = Math[op];\n  return res.unary[op] = function(exe, params) {\n    return helpers.unary(exe, params, function(source) {\n      return operation(source);\n    });\n  };\n};\nfor (j = 0, len1 = uniarymath.length; j < len1; j++) {\n  op = uniarymath[j];\n  fn1(op);\n}\n\nparamsmath = ['round10', 'floor10', 'ceil10'];\n\nfn2 = function(op) {\n  var operation;\n  operation = math[op];\n  return res.params[op] = function(exe, params) {\n    return helpers.params(exe, params, function(params, source) {\n      return operation(source, params);\n    });\n  };\n};\nfor (k = 0, len2 = paramsmath.length; k < len2; k++) {\n  op = paramsmath[k];\n  fn2(op);\n}\n\nmodule.exports = res;\n",
    "// Generated by CoffeeScript 1.9.2\nvar helpers, template;\n\nhelpers = require('../helpers');\n\ntemplate = require('odo-template');\n\nmodule.exports = {\n  params: {\n    findandreplace: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        if (typeof source !== 'string') {\n          throw new Error('Expecting string for findandreplace');\n        }\n        return source.replace(new RegExp(params.find, params.flags), params.replace);\n      });\n    },\n    template: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        if (typeof source !== 'string') {\n          throw new Error('Expecting string for findandreplace');\n        }\n        return template(source, params);\n      });\n    }\n  },\n  unary: {\n    uppercase: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return source.toUpperCase();\n      });\n    },\n    lowercase: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return source.toLowerCase();\n      });\n    },\n    toString: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return source.toString();\n      });\n    }\n  },\n  binary: {\n    concat: function(exe, params) {\n      return helpers.binary(exe, params, function(left, right) {\n        return \"\" + left + right;\n      });\n    }\n  },\n  trinary: {\n    substr: function(exe, params) {\n      var getleft, getparams, getright;\n      getparams = exe.build(params.__p);\n      getleft = exe.build(params.__l);\n      getright = exe.build(params.__r);\n      return function(cb) {\n        return getparams(function(err, params) {\n          if (err != null) {\n            return cb(err);\n          }\n          return getleft(function(err, left) {\n            if (err != null) {\n              return cb(err);\n            }\n            return getright(function(err, right) {\n              if (err != null) {\n                return cb(err);\n              }\n              return cb(null, params.substr(left, right));\n            });\n          });\n        });\n      };\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar helpers;\n\nhelpers = require('../helpers');\n\nmodule.exports = {\n  params: {\n    options: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return source;\n      });\n    },\n    pluck: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        var plu;\n        plu = function(d) {\n          return d[params];\n        };\n        if (source instanceof Array) {\n          return source.map(plu);\n        } else {\n          return plu(source);\n        }\n      });\n    },\n    remove: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        var rem;\n        rem = function(d) {\n          var _, target;\n          for (target in params) {\n            _ = params[target];\n            delete d[target];\n          }\n          return d;\n        };\n        if (source instanceof Array) {\n          return source.map(rem);\n        } else {\n          return rem(source);\n        }\n      });\n    },\n    shape: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        var sha;\n        sha = function(d) {\n          var _, res, target;\n          res = {};\n          for (target in params) {\n            _ = params[target];\n            res[target] = d[target];\n          }\n          return res;\n        };\n        if (source instanceof Array) {\n          return source.map(sha);\n        } else {\n          return sha(source);\n        }\n      });\n    },\n    rename: function(exe, params) {\n      return helpers.params(exe, params, function(params, source) {\n        var trans;\n        trans = function(d) {\n          var target, value;\n          for (target in params) {\n            source = params[target];\n            value = d[source];\n            delete d[source];\n            d[target] = value;\n          }\n          return d;\n        };\n        if (source instanceof Array) {\n          return source.map(trans);\n        } else {\n          return trans(source);\n        }\n      });\n    }\n  },\n  unary: {\n    ref: function(exe, params) {\n      throw new Error('References should not be executed');\n    },\n    count: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        if (!(source instanceof Array)) {\n          throw new Error('Not an array');\n        }\n        return source.length;\n      });\n    },\n    one: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        if (!(source instanceof Array)) {\n          throw new Error('Not an array');\n        }\n        if (source.length !== 1) {\n          throw new Error('No single item');\n        }\n        return source.pop();\n      });\n    },\n    oneornone: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        if (!(source instanceof Array)) {\n          throw new Error('Not an array');\n        }\n        if (source.length === 0) {\n          return null;\n        }\n        if (source.length === 1) {\n          return source.pop();\n        }\n        throw new Error('More than one item');\n      });\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.1\nvar helpers;\n\nhelpers = require('../helpers');\n\nmodule.exports = {\n  unary: {\n    asInt: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return parseInt(source);\n      });\n    },\n    asFloat: function(exe, params) {\n      return helpers.unary(exe, params, function(source) {\n        return parseFloat(source);\n      });\n    }\n  }\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar async, visit;\n\nasync = require('odo-async');\n\nvisit = function(node, nodecb, fincb) {\n  if (typeof node !== 'object') {\n    return fincb(node);\n  }\n  return nodecb(node, function(replacement) {\n    var fn, key, tasks, value;\n    if (replacement !== void 0) {\n      return fincb(replacement);\n    }\n    tasks = [];\n    fn = function(key, value) {\n      return tasks.push(function(cb) {\n        return visit(value, nodecb, function(replacement) {\n          node[key] = replacement;\n          return cb();\n        });\n      });\n    };\n    for (key in node) {\n      value = node[key];\n      fn(key, value);\n    }\n    return async.series(tasks, function() {\n      return fincb(node);\n    });\n  });\n};\n\nmodule.exports = visit;\n",
    "// Generated by CoffeeScript 1.9.1\nmodule.exports = function(options) {\n  var store;\n  store = {\n    stores: {},\n    use: function(name, cb) {\n      store.stores[name] = cb;\n      return store;\n    },\n    params: {\n      store: function(exe, params) {\n        var getparams, getsource;\n        if (params.__s == null) {\n          params.__s = params.__p;\n          params.__p = null;\n        }\n        getparams = function(cb) {\n          return cb(null, null);\n        };\n        if (params.__p != null) {\n          getparams = exe.build(params.__p);\n        }\n        getsource = exe.build(params.__s);\n        return function(cb) {\n          return getparams(function(err, params) {\n            if (err != null) {\n              return cb(err);\n            }\n            return getsource(function(err, source) {\n              if (err != null) {\n                return cb(err);\n              }\n              if (store.stores[source] == null) {\n                return cb(new Error(source + \" store not found\"));\n              }\n              return store.stores[source](params, cb);\n            });\n          });\n        };\n      }\n    }\n  };\n  return store;\n};\n",
    "// Generated by CoffeeScript 1.9.2\nvar applyglobals, library, ql;\n\nlibrary = require('./library');\n\nql = function(query, def) {\n  var _, fn1, fn2, fn3, fn4, i, len, name, ref, ref1, ref2, ref3, res, source;\n  if (arguments.length === 0) {\n    return ql.use();\n  }\n  res = {\n    query: function() {\n      return query;\n    },\n    clone: function(deep) {\n      var newquery;\n      if (!deep) {\n        return ql(query, def);\n      }\n      newquery = JSON.parse(JSON.stringify(query));\n      return ql(newquery, def);\n    }\n  };\n  for (i = 0, len = def.length; i < len; i++) {\n    source = def[i];\n    ref = source.params;\n    fn1 = function(name) {\n      return res[name] = function(params) {\n        query = ql.params(name, params, query);\n        return res;\n      };\n    };\n    for (name in ref) {\n      _ = ref[name];\n      fn1(name);\n    }\n    ref1 = source.unary;\n    fn2 = function(name) {\n      return res[name] = function() {\n        query = ql.unary(name, query);\n        return res;\n      };\n    };\n    for (name in ref1) {\n      _ = ref1[name];\n      fn2(name);\n    }\n    ref2 = source.binary;\n    fn3 = function(name) {\n      return res[name] = function(right) {\n        query = ql.binary(name, query, right);\n        return res;\n      };\n    };\n    for (name in ref2) {\n      _ = ref2[name];\n      fn3(name);\n    }\n    ref3 = source.trinary;\n    fn4 = function(name) {\n      return res[name] = function(left, right) {\n        query = ql.trinary(name, query, left, right);\n        return res;\n      };\n    };\n    for (name in ref3) {\n      _ = ref3[name];\n      fn4(name);\n    }\n  }\n  return res;\n};\n\nql.params = function(name, params, source) {\n  var res;\n  res = {\n    __q: name,\n    __p: params,\n    __s: source\n  };\n  if (res.__p == null) {\n    delete res.__p;\n  }\n  return res;\n};\n\nql.unary = function(name, source) {\n  return {\n    __q: name,\n    __s: source\n  };\n};\n\nql.binary = function(name, left, right) {\n  return {\n    __q: name,\n    __l: left,\n    __r: right\n  };\n};\n\nql.trinary = function(name, params, left, right) {\n  return {\n    __q: name,\n    __p: params,\n    __l: left,\n    __r: right\n  };\n};\n\napplyglobals = function(res, def) {\n  var _, fn1, fn2, fn3, name, ref, ref1, ref2, ref3, results;\n  ref = def.params;\n  fn1 = function(name) {\n    return res[name] = function(params, source) {\n      return ql.params(name, params, source);\n    };\n  };\n  for (name in ref) {\n    _ = ref[name];\n    fn1(name);\n  }\n  ref1 = def.unary;\n  fn2 = function(name) {\n    return res[name] = function(source) {\n      return ql.unary(name, source);\n    };\n  };\n  for (name in ref1) {\n    _ = ref1[name];\n    fn2(name);\n  }\n  ref2 = def.binary;\n  fn3 = function(name) {\n    return res[name] = function(left, right) {\n      return ql.binary(name, left, right);\n    };\n  };\n  for (name in ref2) {\n    _ = ref2[name];\n    fn3(name);\n  }\n  ref3 = def.trinary;\n  results = [];\n  for (name in ref3) {\n    _ = ref3[name];\n    results.push((function(name) {\n      return res[name] = function(params, left, right) {\n        return ql.trinary(name, params, left, right);\n      };\n    })(name));\n  }\n  return results;\n};\n\nql.use = function(def) {\n  var fn, name, res;\n  res = function(query) {\n    return ql(query, res.providers);\n  };\n  for (name in ql) {\n    fn = ql[name];\n    res[name] = fn;\n  }\n  res.providers = [];\n  res.use = function(def) {\n    var d, i, len;\n    if (typeof def === 'string') {\n      if (library[def] == null) {\n        throw new Error(def + \" not found in library\");\n      }\n      def = library[def];\n    }\n    if (def instanceof Array) {\n      for (i = 0, len = def.length; i < len; i++) {\n        d = def[i];\n        res.use(d);\n      }\n      return res;\n    }\n    if (def != null) {\n      applyglobals(res, def);\n      res.providers.push(def);\n    }\n    return res;\n  };\n  res;\n  res.use(library.builtin);\n  return res.use(def);\n};\n\napplyglobals(ql, library.builtin);\n\nmodule.exports = ql;\n",
    "// Generated by CoffeeScript 1.9.2\nvar _, builtin, def, provider, providers, result, type;\n\nresult = {\n  builtin: {\n    params: {},\n    unary: {},\n    binary: {},\n    trinary: {}\n  }\n};\n\nbuiltin = {\n  exe: {\n    unary: {\n      literal: true\n    }\n  },\n  assign: {\n    params: {\n      assign: true\n    }\n  },\n  boolean: {\n    binary: {\n      or: true,\n      and: true,\n      gt: true,\n      gte: true,\n      lt: true,\n      lte: true,\n      eq: true\n    },\n    unary: {\n      not: true\n    }\n  },\n  conditional: {\n    trinary: {\n      \"if\": true,\n      unless: true\n    }\n  },\n  fill: {\n    params: {\n      fill: true\n    },\n    unary: {\n      param: true\n    }\n  },\n  filter: {\n    params: {\n      filter: true\n    }\n  },\n  maths: {\n    binary: {\n      add: true,\n      sub: true,\n      div: true,\n      mult: true,\n      mod: true,\n      pow: true,\n      atan2: true\n    },\n    unary: {\n      abs: true,\n      acos: true,\n      asin: true,\n      atan: true,\n      ceil: true,\n      cos: true,\n      exp: true,\n      floor: true,\n      log: true,\n      round: true,\n      sin: true,\n      sqrt: true,\n      tan: true\n    },\n    params: {\n      interpolate_linear: true,\n      toFixed: true,\n      round10: true,\n      floor10: true,\n      ceil10: true\n    }\n  },\n  strings: {\n    params: {\n      findandreplace: true,\n      template: true\n    },\n    unary: {\n      uppercase: true,\n      lowercase: true,\n      toString: true\n    },\n    binary: {\n      concat: true\n    },\n    trinary: {\n      substr: true\n    }\n  },\n  transform: {\n    params: {\n      pluck: true,\n      remove: true,\n      shape: true,\n      rename: true,\n      options: true\n    },\n    unary: {\n      ref: true,\n      count: true,\n      one: true,\n      oneornone: true\n    }\n  },\n  types: {\n    unary: {\n      asInt: true,\n      asFloat: true\n    }\n  },\n  json: {\n    unary: {\n      json: true\n    }\n  }\n};\n\nfor (_ in builtin) {\n  def = builtin[_];\n  for (type in def) {\n    providers = def[type];\n    for (provider in providers) {\n      _ = providers[provider];\n      result.builtin[type][provider] = true;\n    }\n  }\n}\n\nresult.csv = {\n  params: {\n    csv: true\n  }\n};\n\nresult.fs = {\n  params: {\n    file: true\n  }\n};\n\nresult.http = {\n  params: {\n    http: true\n  }\n};\n\nresult.time = {\n  unary: {\n    time_coerce: true\n  },\n  params: {\n    time: true,\n    time_utc: true,\n    time_format: true,\n    time_delta: true,\n    time_fill: true,\n    time_nudge: true\n  }\n};\n\nresult.json = {\n  unary: {\n    json: true\n  }\n};\n\nresult.yaml = {\n  unary: {\n    yaml: true\n  }\n};\n\nresult.localstorage = {\n  unary: {\n    localstorage: true\n  }\n};\n\nresult.store = {\n  params: {\n    store: true\n  }\n};\n\nmodule.exports = result;\n",
    "// Generated by CoffeeScript 1.9.1\nmodule.exports = function(component, spec) {\n  if (spec.query == null) {\n    return component.query = function() {\n      return {};\n    };\n  }\n  return component.query = function(params) {\n    return spec.query.call(component, params);\n  };\n};\n",
    "var sentenceCase = require('sentence-case')\n\n/**\n * Param case a string.\n *\n * @param  {String} string\n * @param  {String} [locale]\n * @return {String}\n */\nmodule.exports = function (string, locale) {\n  return sentenceCase(string, locale, '-')\n}\n",
    "// Generated by CoffeeScript 1.6.3\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n/*\n//@ sourceMappingURL=performance-now.map\n*/\n",
    "// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "var now = require('performance-now')\n  , global = typeof window === 'undefined' ? {} : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = global['request' + suffix]\n  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]\n  , isNative = true\n\nfor(var i = 0; i < vendors.length && !raf; i++) {\n  raf = global[vendors[i] + 'Request' + suffix]\n  caf = global[vendors[i] + 'Cancel' + suffix]\n      || global[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  isNative = false\n\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  if(!isNative) {\n    return raf.call(global, fn)\n  }\n  return raf.call(global, function() {\n    try{\n      fn.apply(this, arguments)\n    } catch(e) {\n      setTimeout(function() { throw e }, 0)\n    }\n  })\n}\nmodule.exports.cancel = function() {\n  caf.apply(global, arguments)\n}\n",
    "\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};",
    "var lowerCase = require('lower-case')\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp')\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')\nvar TRAILING_DIGIT_REGEXP = require('./vendor/trailing-digit-regexp')\n\n/**\n * Sentence case a string.\n *\n * @param  {String} str\n * @param  {String} locale\n * @param  {String} replacement\n * @return {String}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return ''\n  }\n\n  replacement = replacement || ' '\n\n  function replace (match, index, string) {\n    if (index === 0 || index === (string.length - match.length)) {\n      return ''\n    }\n\n    return replacement\n  }\n\n  str = String(str)\n    // Support camel case (\"camelCase\" -> \"camel Case\").\n    .replace(CAMEL_CASE_REGEXP, '$1 $2')\n    // Support digit groups (\"test2012\" -> \"test 2012\").\n    .replace(TRAILING_DIGIT_REGEXP, '$1 $2')\n    // Remove all non-word characters and replace with a single space.\n    .replace(NON_WORD_REGEXP, replace)\n\n  // Lower case the entire string.\n  return lowerCase(str, locale)\n}\n",
    "module.exports = /([\\u0061-\\u007A\\u00B5\\u00DF-\\u00F6\\u00F8-\\u00FF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7FA\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A])([\\u0041-\\u005A\\u00C0-\\u00D6\\u00D8-\\u00DE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA\\uFF21-\\uFF3A\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])/g\n",
    "module.exports = /[^\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]+/g\n",
    "module.exports = /([\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])([^\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])/g\n",
    "(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var setImmediate;\n\n    function addFromSetImmediateArguments(args) {\n        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);\n        return nextHandle++;\n    }\n\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    function partiallyApplied(handler) {\n        var args = [].slice.call(arguments, 1);\n        return function() {\n            if (typeof handler === \"function\") {\n                handler.apply(undefined, args);\n            } else {\n                (new Function(\"\" + handler))();\n            }\n        };\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    task();\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function installNextTickImplementation() {\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            process.nextTick(partiallyApplied(runIfPresent, handle));\n            return handle;\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            global.postMessage(messagePrefix + handle, \"*\");\n            return handle;\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        setImmediate = function() {\n            var handle = addFromSetImmediateArguments(arguments);\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n            return handle;\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n",
    "/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n        }\n      }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Force given parser\n *\n * Sets the body parser no matter type.\n *\n * @param {Function}\n * @api public\n */\n\nRequest.prototype.parse = function(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename || file.name);\n  return this;\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = this._parser || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n",
    "function Thunk(fn, args, key, eqArgs) {\r\n    this.fn = fn;\r\n    this.args = args;\r\n    this.key = key;\r\n    this.eqArgs = eqArgs;\r\n}\r\n\r\nThunk.prototype.type = 'Thunk';\r\nThunk.prototype.render = render;\r\nmodule.exports = Thunk;\r\n\r\nfunction shouldUpdate(current, previous) {\r\n    if (!current || !previous || current.fn !== previous.fn) {\r\n        return true;\r\n    }\r\n\r\n    var cargs = current.args;\r\n    var pargs = previous.args;\r\n\r\n    return !current.eqArgs(cargs, pargs);\r\n}\r\n\r\nfunction render(previous) {\r\n    if (shouldUpdate(this, previous)) {\r\n        return this.fn.apply(null, this.args);\r\n    } else {\r\n        return previous.vnode;\r\n    }\r\n}\r\n",
    "var Partial = require('./partial');\r\n\r\nmodule.exports = Partial();\r\n",
    "var shallowEq = require('./shallow-eq');\nvar Thunk = require('./immutable-thunk');\n\nmodule.exports = createPartial;\n\nfunction createPartial(eq) {\n    return function partial(fn) {\n        var args = copyOver(arguments, 1);\n        var firstArg = args[0];\n        var key;\n\n        var eqArgs = eq || shallowEq;\n\n        if (typeof firstArg === 'object' && firstArg !== null) {\n            if ('key' in firstArg) {\n                key = firstArg.key;\n            } else if ('id' in firstArg) {\n                key = firstArg.id;\n            }\n        }\n\n        return new Thunk(fn, args, key, eqArgs);\n    };\n}\n\nfunction copyOver(list, offset) {\n    var newList = [];\n    for (var i = list.length - 1; i >= offset; i--) {\n        newList[i - offset] = list[i];\n    }\n    return newList;\n}\n",
    "module.exports = shallowEq;\r\n\r\nfunction shallowEq(currentArgs, previousArgs) {\r\n    if (currentArgs.length === 0 && previousArgs.length === 0) {\r\n        return true;\r\n    }\r\n\r\n    if (currentArgs.length !== previousArgs.length) {\r\n        return false;\r\n    }\r\n\r\n    var len = currentArgs.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        if (currentArgs[i] !== previousArgs[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n",
    "var escape = require('escape-html');\nvar propConfig = require('./property-config');\nvar types = propConfig.attributeTypes;\nvar properties = propConfig.properties;\nvar attributeNames = propConfig.attributeNames;\n\nvar prefixAttribute = memoizeString(function (name) {\n  return escape(name) + '=\"';\n});\n\nmodule.exports = createAttribute;\n\n/**\n * Create attribute string.\n *\n * @param {String} name The name of the property or attribute\n * @param {*} value The value\n * @param {Boolean} [isAttribute] Denotes whether `name` is an attribute.\n * @return {?String} Attribute string || null if not a valid property or custom attribute.\n */\n\nfunction createAttribute(name, value, isAttribute) {\n  if (properties.hasOwnProperty(name)) {\n    if (shouldSkip(name, value)) return '';\n    name = (attributeNames[name] || name).toLowerCase();\n    var attrType = properties[name];\n    // for BOOLEAN `value` only has to be truthy\n    // for OVERLOADED_BOOLEAN `value` has to be === true\n    if ((attrType === types.BOOLEAN) ||\n        (attrType === types.OVERLOADED_BOOLEAN && value === true)) {\n      return escape(name);\n    }\n    return prefixAttribute(name) + escape(value) + '\"';\n  } else if (isAttribute) {\n    if (value == null) return '';\n    return prefixAttribute(name) + escape(value) + '\"';\n  }\n  // return null if `name` is neither a valid property nor an attribute\n  return null;\n}\n\n/**\n * Should skip false boolean attributes.\n */\n\nfunction shouldSkip(name, value) {\n  var attrType = properties[name];\n  return value == null ||\n    (attrType === types.BOOLEAN && !value) ||\n    (attrType === types.OVERLOADED_BOOLEAN && value === false);\n}\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\n\nfunction memoizeString(callback) {\n  var cache = {};\n  return function(string) {\n    if (cache.hasOwnProperty(string)) {\n      return cache[string];\n    } else {\n      return cache[string] = callback.call(this, string);\n    }\n  };\n}",
    "var escape = require('escape-html');\nvar extend = require('xtend');\nvar isVNode = require('virtual-dom/vnode/is-vnode');\nvar isVText = require('virtual-dom/vnode/is-vtext');\nvar isThunk = require('virtual-dom/vnode/is-thunk');\nvar isWidget = require('virtual-dom/vnode/is-widget');\nvar softHook = require('virtual-dom/virtual-hyperscript/hooks/soft-set-hook');\nvar attrHook = require('virtual-dom/virtual-hyperscript/hooks/attribute-hook');\nvar paramCase = require('param-case');\nvar createAttribute = require('./create-attribute');\nvar voidElements = require('./void-elements');\n\nmodule.exports = toHTML;\n\nfunction toHTML(node, parent) {\n  if (!node) return '';\n\n  if (isThunk(node)) {\n    node = node.render();\n  }\n\n  if (isWidget(node) && node.render) {\n    node = node.render();\n  }\n\n  if (isVNode(node)) {\n    return openTag(node) + tagContent(node) + closeTag(node);\n  } else if (isVText(node)) {\n    if (parent && parent.tagName.toLowerCase() === 'script') return String(node.text);\n    return escape(String(node.text));\n  }\n\n  return '';\n}\n\nfunction openTag(node) {\n  var props = node.properties;\n  var ret = '<' + node.tagName.toLowerCase();\n\n  for (var name in props) {\n    var value = props[name];\n    if (value == null) continue;\n\n    if (name == 'attributes') {\n      value = extend({}, value);\n      for (var attrProp in value) {\n        ret += ' ' + createAttribute(attrProp, value[attrProp], true);\n      }\n      continue;\n    }\n\n    if (name == 'style') {\n      var css = '';\n      value = extend({}, value);\n      for (var styleProp in value) {\n        css += paramCase(styleProp) + ': ' + value[styleProp] + '; ';\n      }\n      value = css.trim();\n    }\n\n    if (value instanceof softHook || value instanceof attrHook) {\n      ret += ' ' + createAttribute(name, value.value, true);\n      continue;\n    }\n\n    var attr = createAttribute(name, value);\n    if (attr) ret += ' ' + attr;\n  }\n\n  return ret + '>';\n}\n\nfunction tagContent(node) {\n  var innerHTML = node.properties.innerHTML;\n  if (innerHTML != null) return innerHTML;\n  else {\n    var ret = '';\n    if (node.children && node.children.length) {\n      for (var i = 0, l = node.children.length; i<l; i++) {\n        var child = node.children[i];\n        ret += toHTML(child, node);\n      }\n    }\n    return ret;\n  }\n}\n\nfunction closeTag(node) {\n  var tag = node.tagName.toLowerCase();\n  return voidElements[tag] ? '' : '</' + tag + '>';\n}",
    "/**\n * Attribute types.\n */\n\nvar types = {\n  BOOLEAN: 1,\n  OVERLOADED_BOOLEAN: 2\n};\n\n/**\n * Properties.\n *\n * Taken from https://github.com/facebook/react/blob/847357e42e5267b04dd6e297219eaa125ab2f9f4/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n *\n */\n\nvar properties = {\n  /**\n   * Standard Properties\n   */\n  accept: true,\n  acceptCharset: true,\n  accessKey: true,\n  action: true,\n  allowFullScreen: types.BOOLEAN,\n  allowTransparency: true,\n  alt: true,\n  async: types.BOOLEAN,\n  autocomplete: true,\n  autofocus: types.BOOLEAN,\n  autoplay: types.BOOLEAN,\n  cellPadding: true,\n  cellSpacing: true,\n  charset: true,\n  checked: types.BOOLEAN,\n  classID: true,\n  className: true,\n  cols: true,\n  colSpan: true,\n  content: true,\n  contentEditable: true,\n  contextMenu: true,\n  controls: types.BOOLEAN,\n  coords: true,\n  crossOrigin: true,\n  data: true, // For `<object />` acts as `src`.\n  dateTime: true,\n  defer: types.BOOLEAN,\n  dir: true,\n  disabled: types.BOOLEAN,\n  download: types.OVERLOADED_BOOLEAN,\n  draggable: true,\n  enctype: true,\n  form: true,\n  formAction: true,\n  formEncType: true,\n  formMethod: true,\n  formNoValidate: types.BOOLEAN,\n  formTarget: true,\n  frameBorder: true,\n  headers: true,\n  height: true,\n  hidden: types.BOOLEAN,\n  href: true,\n  hreflang: true,\n  htmlFor: true,\n  httpEquiv: true,\n  icon: true,\n  id: true,\n  label: true,\n  lang: true,\n  list: true,\n  loop: types.BOOLEAN,\n  manifest: true,\n  marginHeight: true,\n  marginWidth: true,\n  max: true,\n  maxLength: true,\n  media: true,\n  mediaGroup: true,\n  method: true,\n  min: true,\n  multiple: types.BOOLEAN,\n  muted: types.BOOLEAN,\n  name: true,\n  noValidate: types.BOOLEAN,\n  open: true,\n  pattern: true,\n  placeholder: true,\n  poster: true,\n  preload: true,\n  radiogroup: true,\n  readOnly: types.BOOLEAN,\n  rel: true,\n  required: types.BOOLEAN,\n  role: true,\n  rows: true,\n  rowSpan: true,\n  sandbox: true,\n  scope: true,\n  scrolling: true,\n  seamless: types.BOOLEAN,\n  selected: types.BOOLEAN,\n  shape: true,\n  size: true,\n  sizes: true,\n  span: true,\n  spellcheck: true,\n  src: true,\n  srcdoc: true,\n  srcset: true,\n  start: true,\n  step: true,\n  style: true,\n  tabIndex: true,\n  target: true,\n  title: true,\n  type: true,\n  useMap: true,\n  value: true,\n  width: true,\n  wmode: true,\n\n  /**\n   * Non-standard Properties\n   */\n  // autoCapitalize and autoCorrect are supported in Mobile Safari for\n  // keyboard hints.\n  autocapitalize: true,\n  autocorrect: true,\n  // itemProp, itemScope, itemType are for Microdata support. See\n  // http://schema.org/docs/gs.html\n  itemProp: true,\n  itemScope: types.BOOLEAN,\n  itemType: true,\n  // property is supported for OpenGraph in meta tags.\n  property: true\n};\n\n/**\n * Properties to attributes mapping.\n *\n * The ones not here are simply converted to lower case.\n */\n\nvar attributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * Exports.\n */\n\nmodule.exports = {\n  attributeTypes: types,\n  properties: properties,\n  attributeNames: attributeNames\n};",
    "\n/**\n * Void elements.\n *\n * https://github.com/facebook/react/blob/v0.12.0/src/browser/ui/ReactDOMComponent.js#L99\n */\n\nmodule.exports = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};",
    "/*!\r\n* vdom-virtualize\r\n* Copyright 2014 by Marcel Klehr <mklehr@gmx.net>\r\n*\r\n* (MIT LICENSE)\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy\r\n* of this software and associated documentation files (the \"Software\"), to deal\r\n* in the Software without restriction, including without limitation the rights\r\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the Software is\r\n* furnished to do so, subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in\r\n* all copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n* THE SOFTWARE.\r\n*/\r\nvar VNode = require(\"virtual-dom/vnode/vnode\")\r\n  , VText = require(\"virtual-dom/vnode/vtext\")\r\n\r\nmodule.exports = createVNode\r\n\r\nfunction createVNode(domNode, key) {\r\n  key = key || null // XXX: Leave out `key` for now... merely used for (re-)ordering\r\n\r\n  if(domNode.nodeType == 1) return createFromElement(domNode, key)\r\n  if(domNode.nodeType == 3) return createFromTextNode(domNode, key)\r\n  return\r\n}\r\n\r\ncreateVNode.fromHTML = function(html, key) {\r\n  var domNode = document.createElement('div'); // create container\r\n  domNode.innerHTML = html; // browser parses HTML into DOM tree\r\n  domNode = domNode.children[0] || domNode; // select first node in tree\r\n  return createVNode(domNode, key);\r\n};\r\n\r\nfunction createFromTextNode(tNode) {\r\n  return new VText(tNode.nodeValue)\r\n}\r\n\r\n\r\nfunction createFromElement(el) {\r\n  var tagName = el.tagName\r\n  , namespace = el.namespaceURI == 'http://www.w3.org/1999/xhtml'? null : el.namespaceURI\r\n  , properties = getElementProperties(el)\r\n  , children = []\r\n\r\n  for (var i = 0; i < el.childNodes.length; i++) {\r\n    children.push(createVNode(el.childNodes[i]/*, i*/))\r\n  }\r\n\r\n  return new VNode(tagName, properties, children, null, namespace)\r\n}\r\n\r\n\r\nfunction getElementProperties(el) {\r\n  var obj = {}\r\n\r\n  props.forEach(function(propName) {\r\n    if(!el[propName]) return\r\n\r\n    // Special case: style\r\n    // .style is a DOMStyleDeclaration, thus we need to iterate over all\r\n    // rules to create a hash of applied css properties.\r\n    //\r\n    // You can directly set a specific .style[prop] = value so patching with vdom\r\n    // is possible.\r\n    if(\"style\" == propName) {\r\n      var css = {}\r\n        , styleProp\r\n      for(var i=0; i<el.style.length; i++) {\r\n        styleProp = el.style[i]\r\n        css[styleProp] = el.style.getPropertyValue(styleProp) // XXX: add support for \"!important\" via getPropertyPriority()!\r\n      }\r\n\r\n      obj[propName] = css\r\n      return\r\n    }\r\n\r\n    // Special case: dataset\r\n    // we can iterate over .dataset with a simple for..in loop.\r\n    // The all-time foo with data-* attribs is the dash-snake to camelCase\r\n    // conversion.\r\n    // However, I'm not sure if this is compatible with h()\r\n    //\r\n    // .dataset properties are directly accessible as transparent getters/setters, so\r\n    // patching with vdom is possible.\r\n    if(\"dataset\" == propName) {\r\n      var data = {}\r\n      for(var p in el.dataset) {\r\n        data[p] = el.dataset[p]\r\n      }\r\n\r\n      obj[propName] = data\r\n      return\r\n    }\r\n\r\n    // Special case: attributes\r\n    // some properties are only accessible via .attributes, so\r\n    // that's what we'd do, if vdom-create-element could handle this.\r\n    if(\"attributes\" == propName) return\r\n    if(\"tabIndex\" == propName && el.tabIndex === -1) return\r\n\r\n\r\n    // default: just copy the property\r\n    obj[propName] = el[propName]\r\n    return\r\n  })\r\n\r\n  return obj\r\n}\r\n\r\n/**\r\n * DOMNode property white list\r\n * Taken from https://github.com/Raynos/react/blob/dom-property-config/src/browser/ui/dom/DefaultDOMPropertyConfig.js\r\n */\r\nvar props =\r\n\r\nmodule.exports.properties = [\r\n \"accept\"\r\n,\"accessKey\"\r\n,\"action\"\r\n,\"alt\"\r\n,\"async\"\r\n,\"autoComplete\"\r\n,\"autoPlay\"\r\n,\"cellPadding\"\r\n,\"cellSpacing\"\r\n,\"checked\"\r\n,\"className\"\r\n,\"colSpan\"\r\n,\"content\"\r\n,\"contentEditable\"\r\n,\"controls\"\r\n,\"crossOrigin\"\r\n,\"data\"\r\n,\"dataset\"\r\n,\"defer\"\r\n,\"dir\"\r\n,\"download\"\r\n,\"draggable\"\r\n,\"encType\"\r\n,\"formNoValidate\"\r\n,\"href\"\r\n,\"hrefLang\"\r\n,\"htmlFor\"\r\n,\"httpEquiv\"\r\n,\"icon\"\r\n,\"id\"\r\n,\"label\"\r\n,\"lang\"\r\n,\"list\"\r\n,\"loop\"\r\n,\"max\"\r\n,\"mediaGroup\"\r\n,\"method\"\r\n,\"min\"\r\n,\"multiple\"\r\n,\"muted\"\r\n,\"name\"\r\n,\"noValidate\"\r\n,\"pattern\"\r\n,\"placeholder\"\r\n,\"poster\"\r\n,\"preload\"\r\n,\"radioGroup\"\r\n,\"readOnly\"\r\n,\"rel\"\r\n,\"required\"\r\n,\"rowSpan\"\r\n,\"sandbox\"\r\n,\"scope\"\r\n,\"scrollLeft\"\r\n,\"scrolling\"\r\n,\"scrollTop\"\r\n,\"selected\"\r\n,\"span\"\r\n,\"spellCheck\"\r\n,\"src\"\r\n,\"srcDoc\"\r\n,\"srcSet\"\r\n,\"start\"\r\n,\"step\"\r\n,\"style\"\r\n,\"tabIndex\"\r\n,\"target\"\r\n,\"title\"\r\n,\"type\"\r\n,\"value\"\r\n\r\n// Non-standard Properties\r\n,\"autoCapitalize\"\r\n,\"autoCorrect\"\r\n,\"property\"\r\n\r\n, \"attributes\"\r\n]\r\n\r\nvar attrs =\r\nmodule.exports.attrs = [\r\n \"allowFullScreen\"\r\n,\"allowTransparency\"\r\n,\"charSet\"\r\n,\"cols\"\r\n,\"contextMenu\"\r\n,\"dateTime\"\r\n,\"disabled\"\r\n,\"form\"\r\n,\"frameBorder\"\r\n,\"height\"\r\n,\"hidden\"\r\n,\"maxLength\"\r\n,\"role\"\r\n,\"rows\"\r\n,\"seamless\"\r\n,\"size\"\r\n,\"width\"\r\n,\"wmode\"\r\n\r\n// SVG Properties\r\n,\"cx\"\r\n,\"cy\"\r\n,\"d\"\r\n,\"dx\"\r\n,\"dy\"\r\n,\"fill\"\r\n,\"fx\"\r\n,\"fy\"\r\n,\"gradientTransform\"\r\n,\"gradientUnits\"\r\n,\"offset\"\r\n,\"points\"\r\n,\"r\"\r\n,\"rx\"\r\n,\"ry\"\r\n,\"spreadMethod\"\r\n,\"stopColor\"\r\n,\"stopOpacity\"\r\n,\"stroke\"\r\n,\"strokeLinecap\"\r\n,\"strokeWidth\"\r\n,\"textAnchor\"\r\n,\"transform\"\r\n,\"version\"\r\n,\"viewBox\"\r\n,\"x1\"\r\n,\"x2\"\r\n,\"x\"\r\n,\"y1\"\r\n,\"y2\"\r\n,\"y\"\r\n]\r\n",
    "module.exports = isThunk\r\n\r\nfunction isThunk(t) {\r\n    return t && t.type === \"Thunk\"\r\n}\r\n",
    "module.exports = isHook\n\nfunction isHook(hook) {\n    return hook &&\n      (typeof hook.hook === \"function\" && !hook.hasOwnProperty(\"hook\") ||\n       typeof hook.unhook === \"function\" && !hook.hasOwnProperty(\"unhook\"))\n}\n",
    "var version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n",
    "module.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n",
    "module.exports = \"2\"\n",
    "var version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var hasThunks = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property) && property.unhook) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!hasThunks && child.hasThunks) {\n                hasThunks = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        } else if (!hasThunks && isThunk(child)) {\n            hasThunks = true;\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hasThunks = hasThunks\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n",
    "var version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n",
    "var createElement = require(\"./vdom/create-element.js\")\n\nmodule.exports = createElement\n",
    "var diff = require(\"./vtree/diff.js\")\n\nmodule.exports = diff\n",
    "var h = require(\"./virtual-hyperscript/index.js\")\n\nmodule.exports = h\n",
    "var patch = require(\"./vdom/patch.js\")\n\nmodule.exports = patch\n",
    "var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook.js\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, propName, propValue, previous);\n        } else if (isHook(propValue)) {\n            removeProperty(node, propName, propValue, previous)\n            if (propValue.hook) {\n                propValue.hook(node,\n                    propName,\n                    previous ? previous[propName] : undefined)\n            }\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, propName, propValue, previous) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        } else if (previousValue.unhook) {\n            previousValue.unhook(node, propName, propValue)\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n",
    "var document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"../vnode/is-vnode.js\")\nvar isVText = require(\"../vnode/is-vtext.js\")\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar handleThunk = require(\"../vnode/handle-thunk.js\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n",
    "// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n",
    "var applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"../vnode/is-widget.js\")\nvar VPatch = require(\"../vnode/vpatch.js\")\n\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = renderOptions.render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = renderOptions.render(vText, renderOptions)\n\n        if (parentNode && newNode !== domNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    var updating = updateWidget(leftVNode, widget)\n    var newNode\n\n    if (updating) {\n        newNode = widget.update(leftVNode, domNode) || domNode\n    } else {\n        newNode = renderOptions.render(widget, renderOptions)\n    }\n\n    var parentNode = domNode.parentNode\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    if (!updating) {\n        destroyWidget(domNode, leftVNode)\n    }\n\n    return newNode\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = renderOptions.render(vNode, renderOptions)\n\n    if (parentNode && newNode !== domNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, moves) {\n    var childNodes = domNode.childNodes\n    var keyMap = {}\n    var node\n    var remove\n    var insert\n\n    for (var i = 0; i < moves.removes.length; i++) {\n        remove = moves.removes[i]\n        node = childNodes[remove.from]\n        if (remove.key) {\n            keyMap[remove.key] = node\n        }\n        domNode.removeChild(node)\n    }\n\n    var length = childNodes.length\n    for (var j = 0; j < moves.inserts.length; j++) {\n        insert = moves.inserts[j]\n        node = keyMap[insert.key]\n        // this is the weirdest bug i've ever seen in webkit\n        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n",
    "var document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar render = require(\"./create-element\")\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches, renderOptions) {\n    renderOptions = renderOptions || {}\n    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch\n        ? renderOptions.patch\n        : patchRecursive\n    renderOptions.render = renderOptions.render || render\n\n    return renderOptions.patch(rootNode, patches, renderOptions)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions.document && ownerDocument !== document) {\n        renderOptions.document = ownerDocument\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n",
    "var isWidget = require(\"../vnode/is-widget.js\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n",
    "'use strict';\n\nmodule.exports = AttributeHook;\n\nfunction AttributeHook(namespace, value) {\n    if (!(this instanceof AttributeHook)) {\n        return new AttributeHook(namespace, value);\n    }\n\n    this.namespace = namespace;\n    this.value = value;\n}\n\nAttributeHook.prototype.hook = function (node, prop, prev) {\n    if (prev && prev.type === 'AttributeHook' &&\n        prev.value === this.value &&\n        prev.namespace === this.namespace) {\n        return;\n    }\n\n    node.setAttributeNS(this.namespace, prop, this.value);\n};\n\nAttributeHook.prototype.unhook = function (node, prop, next) {\n    if (next && next.type === 'AttributeHook' &&\n        next.namespace === this.namespace) {\n        return;\n    }\n\n    var colonPosition = prop.indexOf(':');\n    var localName = colonPosition > -1 ? prop.substr(colonPosition + 1) : prop;\n    node.removeAttributeNS(this.namespace, localName);\n};\n\nAttributeHook.prototype.type = 'AttributeHook';\n",
    "'use strict';\n\nvar EvStore = require('ev-store');\n\nmodule.exports = EvHook;\n\nfunction EvHook(value) {\n    if (!(this instanceof EvHook)) {\n        return new EvHook(value);\n    }\n\n    this.value = value;\n}\n\nEvHook.prototype.hook = function (node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = this.value;\n};\n\nEvHook.prototype.unhook = function(node, propertyName) {\n    var es = EvStore(node);\n    var propName = propertyName.substr(3);\n\n    es[propName] = undefined;\n};\n",
    "'use strict';\n\nmodule.exports = SoftSetHook;\n\nfunction SoftSetHook(value) {\n    if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n    }\n\n    this.value = value;\n}\n\nSoftSetHook.prototype.hook = function (node, propertyName) {\n    if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n    }\n};\n",
    "'use strict';\n\nvar isArray = require('x-is-array');\n\nvar VNode = require('../vnode/vnode.js');\nvar VText = require('../vnode/vtext.js');\nvar isVNode = require('../vnode/is-vnode');\nvar isVText = require('../vnode/is-vtext');\nvar isWidget = require('../vnode/is-widget');\nvar isHook = require('../vnode/is-vhook');\nvar isVThunk = require('../vnode/is-thunk');\n\nvar parseTag = require('./parse-tag.js');\nvar softSetHook = require('./hooks/soft-set-hook.js');\nvar evHook = require('./hooks/ev-hook.js');\n\nmodule.exports = h;\n\nfunction h(tagName, properties, children) {\n    var childNodes = [];\n    var tag, props, key, namespace;\n\n    if (!children && isChildren(properties)) {\n        children = properties;\n        props = {};\n    }\n\n    props = props || properties || {};\n    tag = parseTag(tagName, props);\n\n    // support keys\n    if (props.hasOwnProperty('key')) {\n        key = props.key;\n        props.key = undefined;\n    }\n\n    // support namespace\n    if (props.hasOwnProperty('namespace')) {\n        namespace = props.namespace;\n        props.namespace = undefined;\n    }\n\n    // fix cursor bug\n    if (tag === 'INPUT' &&\n        !namespace &&\n        props.hasOwnProperty('value') &&\n        props.value !== undefined &&\n        !isHook(props.value)\n    ) {\n        props.value = softSetHook(props.value);\n    }\n\n    transformProperties(props);\n\n    if (children !== undefined && children !== null) {\n        addChild(children, childNodes, tag, props);\n    }\n\n\n    return new VNode(tag, props, childNodes, key, namespace);\n}\n\nfunction addChild(c, childNodes, tag, props) {\n    if (typeof c === 'string') {\n        childNodes.push(new VText(c));\n    } else if (typeof c === 'number') {\n        childNodes.push(new VText(String(c)));\n    } else if (isChild(c)) {\n        childNodes.push(c);\n    } else if (isArray(c)) {\n        for (var i = 0; i < c.length; i++) {\n            addChild(c[i], childNodes, tag, props);\n        }\n    } else if (c === null || c === undefined) {\n        return;\n    } else {\n        throw UnexpectedVirtualElement({\n            foreignObject: c,\n            parentVnode: {\n                tagName: tag,\n                properties: props\n            }\n        });\n    }\n}\n\nfunction transformProperties(props) {\n    for (var propName in props) {\n        if (props.hasOwnProperty(propName)) {\n            var value = props[propName];\n\n            if (isHook(value)) {\n                continue;\n            }\n\n            if (propName.substr(0, 3) === 'ev-') {\n                // add ev-foo support\n                props[propName] = evHook(value);\n            }\n        }\n    }\n}\n\nfunction isChild(x) {\n    return isVNode(x) || isVText(x) || isWidget(x) || isVThunk(x);\n}\n\nfunction isChildren(x) {\n    return typeof x === 'string' || isArray(x) || isChild(x);\n}\n\nfunction UnexpectedVirtualElement(data) {\n    var err = new Error();\n\n    err.type = 'virtual-hyperscript.unexpected.virtual-element';\n    err.message = 'Unexpected virtual child passed to h().\\n' +\n        'Expected a VNode / Vthunk / VWidget / string but:\\n' +\n        'got:\\n' +\n        errorString(data.foreignObject) +\n        '.\\n' +\n        'The parent vnode is:\\n' +\n        errorString(data.parentVnode)\n        '\\n' +\n        'Suggested fix: change your `h(..., [ ... ])` callsite.';\n    err.foreignObject = data.foreignObject;\n    err.parentVnode = data.parentVnode;\n\n    return err;\n}\n\nfunction errorString(obj) {\n    try {\n        return JSON.stringify(obj, null, '    ');\n    } catch (e) {\n        return String(obj);\n    }\n}\n",
    "'use strict';\n\nvar split = require('browser-split');\n\nvar classIdSplit = /([\\.#]?[a-zA-Z0-9\\u007F-\\uFFFF_:-]+)/;\nvar notClassId = /^\\.|#/;\n\nmodule.exports = parseTag;\n\nfunction parseTag(tag, props) {\n    if (!tag) {\n        return 'DIV';\n    }\n\n    var noId = !(props.hasOwnProperty('id'));\n\n    var tagParts = split(tag, classIdSplit);\n    var tagName = null;\n\n    if (notClassId.test(tagParts[1])) {\n        tagName = 'DIV';\n    }\n\n    var classes, part, type, i;\n\n    for (i = 0; i < tagParts.length; i++) {\n        part = tagParts[i];\n\n        if (!part) {\n            continue;\n        }\n\n        type = part.charAt(0);\n\n        if (!tagName) {\n            tagName = part;\n        } else if (type === '.') {\n            classes = classes || [];\n            classes.push(part.substring(1, part.length));\n        } else if (type === '#' && noId) {\n            props.id = part.substring(1, part.length);\n        }\n    }\n\n    if (classes) {\n        if (props.className) {\n            classes.push(props.className);\n        }\n\n        props.className = classes.join(' ');\n    }\n\n    return props.namespace ? tagName : tagName.toUpperCase();\n}\n",
    "'use strict';\n\nvar DEFAULT_NAMESPACE = null;\nvar EV_NAMESPACE = 'http://www.w3.org/2001/xml-events';\nvar XLINK_NAMESPACE = 'http://www.w3.org/1999/xlink';\nvar XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\n\n// http://www.w3.org/TR/SVGTiny12/attributeTable.html\n// http://www.w3.org/TR/SVG/attindex.html\nvar SVG_PROPERTIES = {\n    'about': DEFAULT_NAMESPACE,\n    'accent-height': DEFAULT_NAMESPACE,\n    'accumulate': DEFAULT_NAMESPACE,\n    'additive': DEFAULT_NAMESPACE,\n    'alignment-baseline': DEFAULT_NAMESPACE,\n    'alphabetic': DEFAULT_NAMESPACE,\n    'amplitude': DEFAULT_NAMESPACE,\n    'arabic-form': DEFAULT_NAMESPACE,\n    'ascent': DEFAULT_NAMESPACE,\n    'attributeName': DEFAULT_NAMESPACE,\n    'attributeType': DEFAULT_NAMESPACE,\n    'azimuth': DEFAULT_NAMESPACE,\n    'bandwidth': DEFAULT_NAMESPACE,\n    'baseFrequency': DEFAULT_NAMESPACE,\n    'baseProfile': DEFAULT_NAMESPACE,\n    'baseline-shift': DEFAULT_NAMESPACE,\n    'bbox': DEFAULT_NAMESPACE,\n    'begin': DEFAULT_NAMESPACE,\n    'bias': DEFAULT_NAMESPACE,\n    'by': DEFAULT_NAMESPACE,\n    'calcMode': DEFAULT_NAMESPACE,\n    'cap-height': DEFAULT_NAMESPACE,\n    'class': DEFAULT_NAMESPACE,\n    'clip': DEFAULT_NAMESPACE,\n    'clip-path': DEFAULT_NAMESPACE,\n    'clip-rule': DEFAULT_NAMESPACE,\n    'clipPathUnits': DEFAULT_NAMESPACE,\n    'color': DEFAULT_NAMESPACE,\n    'color-interpolation': DEFAULT_NAMESPACE,\n    'color-interpolation-filters': DEFAULT_NAMESPACE,\n    'color-profile': DEFAULT_NAMESPACE,\n    'color-rendering': DEFAULT_NAMESPACE,\n    'content': DEFAULT_NAMESPACE,\n    'contentScriptType': DEFAULT_NAMESPACE,\n    'contentStyleType': DEFAULT_NAMESPACE,\n    'cursor': DEFAULT_NAMESPACE,\n    'cx': DEFAULT_NAMESPACE,\n    'cy': DEFAULT_NAMESPACE,\n    'd': DEFAULT_NAMESPACE,\n    'datatype': DEFAULT_NAMESPACE,\n    'defaultAction': DEFAULT_NAMESPACE,\n    'descent': DEFAULT_NAMESPACE,\n    'diffuseConstant': DEFAULT_NAMESPACE,\n    'direction': DEFAULT_NAMESPACE,\n    'display': DEFAULT_NAMESPACE,\n    'divisor': DEFAULT_NAMESPACE,\n    'dominant-baseline': DEFAULT_NAMESPACE,\n    'dur': DEFAULT_NAMESPACE,\n    'dx': DEFAULT_NAMESPACE,\n    'dy': DEFAULT_NAMESPACE,\n    'edgeMode': DEFAULT_NAMESPACE,\n    'editable': DEFAULT_NAMESPACE,\n    'elevation': DEFAULT_NAMESPACE,\n    'enable-background': DEFAULT_NAMESPACE,\n    'end': DEFAULT_NAMESPACE,\n    'ev:event': EV_NAMESPACE,\n    'event': DEFAULT_NAMESPACE,\n    'exponent': DEFAULT_NAMESPACE,\n    'externalResourcesRequired': DEFAULT_NAMESPACE,\n    'fill': DEFAULT_NAMESPACE,\n    'fill-opacity': DEFAULT_NAMESPACE,\n    'fill-rule': DEFAULT_NAMESPACE,\n    'filter': DEFAULT_NAMESPACE,\n    'filterRes': DEFAULT_NAMESPACE,\n    'filterUnits': DEFAULT_NAMESPACE,\n    'flood-color': DEFAULT_NAMESPACE,\n    'flood-opacity': DEFAULT_NAMESPACE,\n    'focusHighlight': DEFAULT_NAMESPACE,\n    'focusable': DEFAULT_NAMESPACE,\n    'font-family': DEFAULT_NAMESPACE,\n    'font-size': DEFAULT_NAMESPACE,\n    'font-size-adjust': DEFAULT_NAMESPACE,\n    'font-stretch': DEFAULT_NAMESPACE,\n    'font-style': DEFAULT_NAMESPACE,\n    'font-variant': DEFAULT_NAMESPACE,\n    'font-weight': DEFAULT_NAMESPACE,\n    'format': DEFAULT_NAMESPACE,\n    'from': DEFAULT_NAMESPACE,\n    'fx': DEFAULT_NAMESPACE,\n    'fy': DEFAULT_NAMESPACE,\n    'g1': DEFAULT_NAMESPACE,\n    'g2': DEFAULT_NAMESPACE,\n    'glyph-name': DEFAULT_NAMESPACE,\n    'glyph-orientation-horizontal': DEFAULT_NAMESPACE,\n    'glyph-orientation-vertical': DEFAULT_NAMESPACE,\n    'glyphRef': DEFAULT_NAMESPACE,\n    'gradientTransform': DEFAULT_NAMESPACE,\n    'gradientUnits': DEFAULT_NAMESPACE,\n    'handler': DEFAULT_NAMESPACE,\n    'hanging': DEFAULT_NAMESPACE,\n    'height': DEFAULT_NAMESPACE,\n    'horiz-adv-x': DEFAULT_NAMESPACE,\n    'horiz-origin-x': DEFAULT_NAMESPACE,\n    'horiz-origin-y': DEFAULT_NAMESPACE,\n    'id': DEFAULT_NAMESPACE,\n    'ideographic': DEFAULT_NAMESPACE,\n    'image-rendering': DEFAULT_NAMESPACE,\n    'in': DEFAULT_NAMESPACE,\n    'in2': DEFAULT_NAMESPACE,\n    'initialVisibility': DEFAULT_NAMESPACE,\n    'intercept': DEFAULT_NAMESPACE,\n    'k': DEFAULT_NAMESPACE,\n    'k1': DEFAULT_NAMESPACE,\n    'k2': DEFAULT_NAMESPACE,\n    'k3': DEFAULT_NAMESPACE,\n    'k4': DEFAULT_NAMESPACE,\n    'kernelMatrix': DEFAULT_NAMESPACE,\n    'kernelUnitLength': DEFAULT_NAMESPACE,\n    'kerning': DEFAULT_NAMESPACE,\n    'keyPoints': DEFAULT_NAMESPACE,\n    'keySplines': DEFAULT_NAMESPACE,\n    'keyTimes': DEFAULT_NAMESPACE,\n    'lang': DEFAULT_NAMESPACE,\n    'lengthAdjust': DEFAULT_NAMESPACE,\n    'letter-spacing': DEFAULT_NAMESPACE,\n    'lighting-color': DEFAULT_NAMESPACE,\n    'limitingConeAngle': DEFAULT_NAMESPACE,\n    'local': DEFAULT_NAMESPACE,\n    'marker-end': DEFAULT_NAMESPACE,\n    'marker-mid': DEFAULT_NAMESPACE,\n    'marker-start': DEFAULT_NAMESPACE,\n    'markerHeight': DEFAULT_NAMESPACE,\n    'markerUnits': DEFAULT_NAMESPACE,\n    'markerWidth': DEFAULT_NAMESPACE,\n    'mask': DEFAULT_NAMESPACE,\n    'maskContentUnits': DEFAULT_NAMESPACE,\n    'maskUnits': DEFAULT_NAMESPACE,\n    'mathematical': DEFAULT_NAMESPACE,\n    'max': DEFAULT_NAMESPACE,\n    'media': DEFAULT_NAMESPACE,\n    'mediaCharacterEncoding': DEFAULT_NAMESPACE,\n    'mediaContentEncodings': DEFAULT_NAMESPACE,\n    'mediaSize': DEFAULT_NAMESPACE,\n    'mediaTime': DEFAULT_NAMESPACE,\n    'method': DEFAULT_NAMESPACE,\n    'min': DEFAULT_NAMESPACE,\n    'mode': DEFAULT_NAMESPACE,\n    'name': DEFAULT_NAMESPACE,\n    'nav-down': DEFAULT_NAMESPACE,\n    'nav-down-left': DEFAULT_NAMESPACE,\n    'nav-down-right': DEFAULT_NAMESPACE,\n    'nav-left': DEFAULT_NAMESPACE,\n    'nav-next': DEFAULT_NAMESPACE,\n    'nav-prev': DEFAULT_NAMESPACE,\n    'nav-right': DEFAULT_NAMESPACE,\n    'nav-up': DEFAULT_NAMESPACE,\n    'nav-up-left': DEFAULT_NAMESPACE,\n    'nav-up-right': DEFAULT_NAMESPACE,\n    'numOctaves': DEFAULT_NAMESPACE,\n    'observer': DEFAULT_NAMESPACE,\n    'offset': DEFAULT_NAMESPACE,\n    'opacity': DEFAULT_NAMESPACE,\n    'operator': DEFAULT_NAMESPACE,\n    'order': DEFAULT_NAMESPACE,\n    'orient': DEFAULT_NAMESPACE,\n    'orientation': DEFAULT_NAMESPACE,\n    'origin': DEFAULT_NAMESPACE,\n    'overflow': DEFAULT_NAMESPACE,\n    'overlay': DEFAULT_NAMESPACE,\n    'overline-position': DEFAULT_NAMESPACE,\n    'overline-thickness': DEFAULT_NAMESPACE,\n    'panose-1': DEFAULT_NAMESPACE,\n    'path': DEFAULT_NAMESPACE,\n    'pathLength': DEFAULT_NAMESPACE,\n    'patternContentUnits': DEFAULT_NAMESPACE,\n    'patternTransform': DEFAULT_NAMESPACE,\n    'patternUnits': DEFAULT_NAMESPACE,\n    'phase': DEFAULT_NAMESPACE,\n    'playbackOrder': DEFAULT_NAMESPACE,\n    'pointer-events': DEFAULT_NAMESPACE,\n    'points': DEFAULT_NAMESPACE,\n    'pointsAtX': DEFAULT_NAMESPACE,\n    'pointsAtY': DEFAULT_NAMESPACE,\n    'pointsAtZ': DEFAULT_NAMESPACE,\n    'preserveAlpha': DEFAULT_NAMESPACE,\n    'preserveAspectRatio': DEFAULT_NAMESPACE,\n    'primitiveUnits': DEFAULT_NAMESPACE,\n    'propagate': DEFAULT_NAMESPACE,\n    'property': DEFAULT_NAMESPACE,\n    'r': DEFAULT_NAMESPACE,\n    'radius': DEFAULT_NAMESPACE,\n    'refX': DEFAULT_NAMESPACE,\n    'refY': DEFAULT_NAMESPACE,\n    'rel': DEFAULT_NAMESPACE,\n    'rendering-intent': DEFAULT_NAMESPACE,\n    'repeatCount': DEFAULT_NAMESPACE,\n    'repeatDur': DEFAULT_NAMESPACE,\n    'requiredExtensions': DEFAULT_NAMESPACE,\n    'requiredFeatures': DEFAULT_NAMESPACE,\n    'requiredFonts': DEFAULT_NAMESPACE,\n    'requiredFormats': DEFAULT_NAMESPACE,\n    'resource': DEFAULT_NAMESPACE,\n    'restart': DEFAULT_NAMESPACE,\n    'result': DEFAULT_NAMESPACE,\n    'rev': DEFAULT_NAMESPACE,\n    'role': DEFAULT_NAMESPACE,\n    'rotate': DEFAULT_NAMESPACE,\n    'rx': DEFAULT_NAMESPACE,\n    'ry': DEFAULT_NAMESPACE,\n    'scale': DEFAULT_NAMESPACE,\n    'seed': DEFAULT_NAMESPACE,\n    'shape-rendering': DEFAULT_NAMESPACE,\n    'slope': DEFAULT_NAMESPACE,\n    'snapshotTime': DEFAULT_NAMESPACE,\n    'spacing': DEFAULT_NAMESPACE,\n    'specularConstant': DEFAULT_NAMESPACE,\n    'specularExponent': DEFAULT_NAMESPACE,\n    'spreadMethod': DEFAULT_NAMESPACE,\n    'startOffset': DEFAULT_NAMESPACE,\n    'stdDeviation': DEFAULT_NAMESPACE,\n    'stemh': DEFAULT_NAMESPACE,\n    'stemv': DEFAULT_NAMESPACE,\n    'stitchTiles': DEFAULT_NAMESPACE,\n    'stop-color': DEFAULT_NAMESPACE,\n    'stop-opacity': DEFAULT_NAMESPACE,\n    'strikethrough-position': DEFAULT_NAMESPACE,\n    'strikethrough-thickness': DEFAULT_NAMESPACE,\n    'string': DEFAULT_NAMESPACE,\n    'stroke': DEFAULT_NAMESPACE,\n    'stroke-dasharray': DEFAULT_NAMESPACE,\n    'stroke-dashoffset': DEFAULT_NAMESPACE,\n    'stroke-linecap': DEFAULT_NAMESPACE,\n    'stroke-linejoin': DEFAULT_NAMESPACE,\n    'stroke-miterlimit': DEFAULT_NAMESPACE,\n    'stroke-opacity': DEFAULT_NAMESPACE,\n    'stroke-width': DEFAULT_NAMESPACE,\n    'surfaceScale': DEFAULT_NAMESPACE,\n    'syncBehavior': DEFAULT_NAMESPACE,\n    'syncBehaviorDefault': DEFAULT_NAMESPACE,\n    'syncMaster': DEFAULT_NAMESPACE,\n    'syncTolerance': DEFAULT_NAMESPACE,\n    'syncToleranceDefault': DEFAULT_NAMESPACE,\n    'systemLanguage': DEFAULT_NAMESPACE,\n    'tableValues': DEFAULT_NAMESPACE,\n    'target': DEFAULT_NAMESPACE,\n    'targetX': DEFAULT_NAMESPACE,\n    'targetY': DEFAULT_NAMESPACE,\n    'text-anchor': DEFAULT_NAMESPACE,\n    'text-decoration': DEFAULT_NAMESPACE,\n    'text-rendering': DEFAULT_NAMESPACE,\n    'textLength': DEFAULT_NAMESPACE,\n    'timelineBegin': DEFAULT_NAMESPACE,\n    'title': DEFAULT_NAMESPACE,\n    'to': DEFAULT_NAMESPACE,\n    'transform': DEFAULT_NAMESPACE,\n    'transformBehavior': DEFAULT_NAMESPACE,\n    'type': DEFAULT_NAMESPACE,\n    'typeof': DEFAULT_NAMESPACE,\n    'u1': DEFAULT_NAMESPACE,\n    'u2': DEFAULT_NAMESPACE,\n    'underline-position': DEFAULT_NAMESPACE,\n    'underline-thickness': DEFAULT_NAMESPACE,\n    'unicode': DEFAULT_NAMESPACE,\n    'unicode-bidi': DEFAULT_NAMESPACE,\n    'unicode-range': DEFAULT_NAMESPACE,\n    'units-per-em': DEFAULT_NAMESPACE,\n    'v-alphabetic': DEFAULT_NAMESPACE,\n    'v-hanging': DEFAULT_NAMESPACE,\n    'v-ideographic': DEFAULT_NAMESPACE,\n    'v-mathematical': DEFAULT_NAMESPACE,\n    'values': DEFAULT_NAMESPACE,\n    'version': DEFAULT_NAMESPACE,\n    'vert-adv-y': DEFAULT_NAMESPACE,\n    'vert-origin-x': DEFAULT_NAMESPACE,\n    'vert-origin-y': DEFAULT_NAMESPACE,\n    'viewBox': DEFAULT_NAMESPACE,\n    'viewTarget': DEFAULT_NAMESPACE,\n    'visibility': DEFAULT_NAMESPACE,\n    'width': DEFAULT_NAMESPACE,\n    'widths': DEFAULT_NAMESPACE,\n    'word-spacing': DEFAULT_NAMESPACE,\n    'writing-mode': DEFAULT_NAMESPACE,\n    'x': DEFAULT_NAMESPACE,\n    'x-height': DEFAULT_NAMESPACE,\n    'x1': DEFAULT_NAMESPACE,\n    'x2': DEFAULT_NAMESPACE,\n    'xChannelSelector': DEFAULT_NAMESPACE,\n    'xlink:actuate': XLINK_NAMESPACE,\n    'xlink:arcrole': XLINK_NAMESPACE,\n    'xlink:href': XLINK_NAMESPACE,\n    'xlink:role': XLINK_NAMESPACE,\n    'xlink:show': XLINK_NAMESPACE,\n    'xlink:title': XLINK_NAMESPACE,\n    'xlink:type': XLINK_NAMESPACE,\n    'xml:base': XML_NAMESPACE,\n    'xml:id': XML_NAMESPACE,\n    'xml:lang': XML_NAMESPACE,\n    'xml:space': XML_NAMESPACE,\n    'y': DEFAULT_NAMESPACE,\n    'y1': DEFAULT_NAMESPACE,\n    'y2': DEFAULT_NAMESPACE,\n    'yChannelSelector': DEFAULT_NAMESPACE,\n    'z': DEFAULT_NAMESPACE,\n    'zoomAndPan': DEFAULT_NAMESPACE\n};\n\nmodule.exports = SVGAttributeNamespace;\n\nfunction SVGAttributeNamespace(value) {\n  if (SVG_PROPERTIES.hasOwnProperty(value)) {\n    return SVG_PROPERTIES[value];\n  }\n}\n",
    "'use strict';\n\nvar isArray = require('x-is-array');\n\nvar h = require('./index.js');\n\n\nvar SVGAttributeNamespace = require('./svg-attribute-namespace');\nvar attributeHook = require('./hooks/attribute-hook');\n\nvar SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nmodule.exports = svg;\n\nfunction svg(tagName, properties, children) {\n    if (!children && isChildren(properties)) {\n        children = properties;\n        properties = {};\n    }\n\n    properties = properties || {};\n\n    // set namespace for svg\n    properties.namespace = SVG_NAMESPACE;\n\n    var attributes = properties.attributes || (properties.attributes = {});\n\n    for (var key in properties) {\n        if (!properties.hasOwnProperty(key)) {\n            continue;\n        }\n\n        var namespace = SVGAttributeNamespace(key);\n\n        if (namespace === undefined) { // not a svg attribute\n            continue;\n        }\n\n        var value = properties[key];\n\n        if (typeof value !== 'string' &&\n            typeof value !== 'number' &&\n            typeof value !== 'boolean'\n        ) {\n            continue;\n        }\n\n        if (namespace !== null) { // namespaced attribute\n            properties[key] = attributeHook(namespace, value);\n            continue;\n        }\n\n        attributes[key] = value\n        properties[key] = undefined\n    }\n\n    return h(tagName, properties, children);\n}\n\nfunction isChildren(x) {\n    return typeof x === 'string' || isArray(x);\n}\n",
    "var isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n",
    "var version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n",
    "var version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n",
    "var isObject = require(\"is-object\")\nvar isHook = require(\"../vnode/is-vhook\")\n\nmodule.exports = diffProps\n\nfunction diffProps(a, b) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (aValue === bValue) {\n            continue\n        } else if (isObject(aValue) && isObject(bValue)) {\n            if (getPrototype(bValue) !== getPrototype(aValue)) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            } else if (isHook(bValue)) {\n                 diff = diff || {}\n                 diff[aKey] = bValue\n            } else {\n                var objectDiff = diffProps(aValue, bValue)\n                if (objectDiff) {\n                    diff = diff || {}\n                    diff[aKey] = objectDiff\n                }\n            }\n        } else {\n            diff = diff || {}\n            diff[aKey] = bValue\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(value)\n  } else if (value.__proto__) {\n    return value.__proto__\n  } else if (value.constructor) {\n    return value.constructor.prototype\n  }\n}\n",
    "var isArray = require(\"x-is-array\")\n\nvar VPatch = require(\"../vnode/vpatch\")\nvar isVNode = require(\"../vnode/is-vnode\")\nvar isVText = require(\"../vnode/is-vtext\")\nvar isWidget = require(\"../vnode/is-widget\")\nvar isThunk = require(\"../vnode/is-thunk\")\nvar handleThunk = require(\"../vnode/handle-thunk\")\n\nvar diffProps = require(\"./diff-props\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        return\n    }\n\n    var apply = patch[index]\n    var applyClear = false\n\n    if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (b == null) {\n\n        // If a is a widget we will add a remove patch for it\n        // Otherwise any child widgets/hooks must be destroyed.\n        // This prevents adding two remove patches for a widget.\n        if (!isWidget(a)) {\n            clearState(a, patch, index)\n            apply = patch[index]\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                applyClear = true\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            applyClear = true\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            applyClear = true\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        if (!isWidget(a)) {\n            applyClear = true\n        }\n\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n\n    if (applyClear) {\n        clearState(a, patch, index)\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var orderedSet = reorder(aChildren, b.children)\n    var bChildren = orderedSet.children\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (orderedSet.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(\n            VPatch.ORDER,\n            a,\n            orderedSet.moves\n        ))\n    }\n\n    return apply\n}\n\nfunction clearState(vNode, patch, index) {\n    // TODO: Make this a single walk, not two\n    unhook(vNode, patch, index)\n    destroyWidgets(vNode, patch, index)\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(VPatch.REMOVE, vNode, null)\n            )\n        }\n    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b)\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true\n        }\n    }\n\n    return false\n}\n\n// Execute hooks when two nodes are identical\nfunction unhook(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = appendPatch(\n                patch[index],\n                new VPatch(\n                    VPatch.PROPS,\n                    vNode,\n                    undefinedKeys(vNode.hooks)\n                )\n            )\n        }\n\n        if (vNode.descendantHooks || vNode.hasThunks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                unhook(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    } else if (isThunk(vNode)) {\n        thunks(vNode, null, patch, index)\n    }\n}\n\nfunction undefinedKeys(obj) {\n    var result = {}\n\n    for (var key in obj) {\n        result[key] = undefined\n    }\n\n    return result\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n    // O(M) time, O(M) memory\n    var bChildIndex = keyIndex(bChildren)\n    var bKeys = bChildIndex.keys\n    var bFree = bChildIndex.free\n\n    if (bFree.length === bChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(N) time, O(N) memory\n    var aChildIndex = keyIndex(aChildren)\n    var aKeys = aChildIndex.keys\n    var aFree = aChildIndex.free\n\n    if (aFree.length === aChildren.length) {\n        return {\n            children: bChildren,\n            moves: null\n        }\n    }\n\n    // O(MAX(N, M)) memory\n    var newChildren = []\n\n    var freeIndex = 0\n    var freeCount = bFree.length\n    var deletedItems = 0\n\n    // Iterate through a and match a node in b\n    // O(N) time,\n    for (var i = 0 ; i < aChildren.length; i++) {\n        var aItem = aChildren[i]\n        var itemIndex\n\n        if (aItem.key) {\n            if (bKeys.hasOwnProperty(aItem.key)) {\n                // Match up the old keys\n                itemIndex = bKeys[aItem.key]\n                newChildren.push(bChildren[itemIndex])\n\n            } else {\n                // Remove old keyed items\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        } else {\n            // Match the item in a with the next free item in b\n            if (freeIndex < freeCount) {\n                itemIndex = bFree[freeIndex++]\n                newChildren.push(bChildren[itemIndex])\n            } else {\n                // There are no free items in b to match with\n                // the free items in a, so the extra free nodes\n                // are deleted.\n                itemIndex = i - deletedItems++\n                newChildren.push(null)\n            }\n        }\n    }\n\n    var lastFreeIndex = freeIndex >= bFree.length ?\n        bChildren.length :\n        bFree[freeIndex]\n\n    // Iterate through b and append any new keys\n    // O(M) time\n    for (var j = 0; j < bChildren.length; j++) {\n        var newItem = bChildren[j]\n\n        if (newItem.key) {\n            if (!aKeys.hasOwnProperty(newItem.key)) {\n                // Add any new keyed items\n                // We are adding new items to the end and then sorting them\n                // in place. In future we should insert new items in place.\n                newChildren.push(newItem)\n            }\n        } else if (j >= lastFreeIndex) {\n            // Add any leftover non-keyed items\n            newChildren.push(newItem)\n        }\n    }\n\n    var simulate = newChildren.slice()\n    var simulateIndex = 0\n    var removes = []\n    var inserts = []\n    var simulateItem\n\n    for (var k = 0; k < bChildren.length;) {\n        var wantedItem = bChildren[k]\n        simulateItem = simulate[simulateIndex]\n\n        // remove items\n        while (simulateItem === null && simulate.length) {\n            removes.push(remove(simulate, simulateIndex, null))\n            simulateItem = simulate[simulateIndex]\n        }\n\n        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n            // if we need a key in this position...\n            if (wantedItem.key) {\n                if (simulateItem && simulateItem.key) {\n                    // if an insert doesn't put this key in place, it needs to move\n                    if (bKeys[simulateItem.key] !== k + 1) {\n                        removes.push(remove(simulate, simulateIndex, simulateItem.key))\n                        simulateItem = simulate[simulateIndex]\n                        // if the remove didn't put the wanted item in place, we need to insert it\n                        if (!simulateItem || simulateItem.key !== wantedItem.key) {\n                            inserts.push({key: wantedItem.key, to: k})\n                        }\n                        // items are matching, so skip ahead\n                        else {\n                            simulateIndex++\n                        }\n                    }\n                    else {\n                        inserts.push({key: wantedItem.key, to: k})\n                    }\n                }\n                else {\n                    inserts.push({key: wantedItem.key, to: k})\n                }\n                k++\n            }\n            // a key in simulate has no matching wanted key, remove it\n            else if (simulateItem && simulateItem.key) {\n                removes.push(remove(simulate, simulateIndex, simulateItem.key))\n            }\n        }\n        else {\n            simulateIndex++\n            k++\n        }\n    }\n\n    // remove all the remaining nodes from simulate\n    while(simulateIndex < simulate.length) {\n        simulateItem = simulate[simulateIndex]\n        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))\n    }\n\n    // If the only moves we have are deletes then we can just\n    // let the delete patch remove these items.\n    if (removes.length === deletedItems && !inserts.length) {\n        return {\n            children: newChildren,\n            moves: null\n        }\n    }\n\n    return {\n        children: newChildren,\n        moves: {\n            removes: removes,\n            inserts: inserts\n        }\n    }\n}\n\nfunction remove(arr, index, key) {\n    arr.splice(index, 1)\n\n    return {\n        from: index,\n        key: key\n    }\n}\n\nfunction keyIndex(children) {\n    var keys = {}\n    var free = []\n    var length = children.length\n\n    for (var i = 0; i < length; i++) {\n        var child = children[i]\n\n        if (child.key) {\n            keys[child.key] = i\n        } else {\n            free.push(i)\n        }\n    }\n\n    return {\n        keys: keys,     // A hash of key name to index\n        free: free      // An array of unkeyed item indices\n    }\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n",
    "var nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n",
    "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n",
    "// Generated by CoffeeScript 1.9.2\nvar isalphaorspace;\n\nisalphaorspace = function(n) {\n  return n >= 'a' && n <= 'z' || n >= 'A' && n <= 'Z' || n === ' ' || n === '\\t';\n};\n\nmodule.exports = function(s) {\n  var clip, i, key, len, meta, value;\n  len = s.length;\n  clip = 0;\n  i = 0;\n  meta = {};\n  while (isalphaorspace(s[i])) {\n    if (i === len) {\n      break;\n    }\n    while (i < len && isalphaorspace(s[i])) {\n      i++;\n    }\n    if (i === len) {\n      break;\n    }\n    if (s[i] !== ':') {\n      break;\n    }\n    key = s.substring(clip, i);\n    i++;\n    clip = i;\n    while (clip < len && s[clip] !== '\\n') {\n      clip++;\n    }\n    value = s.substring(i, clip);\n    meta[key.trim()] = value.trim();\n    clip++;\n    i = clip;\n  }\n  return {\n    meta: meta,\n    text: s.substr(clip)\n  };\n};\n"
  ]
}